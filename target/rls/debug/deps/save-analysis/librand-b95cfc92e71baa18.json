{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5","program":"/Users/maximvezenov/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","rand","--edition=2018","/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"rand_chacha\"","--cfg","feature=\"std_rng\"","-C","metadata=b95cfc92e71baa18","-C","extra-filename=-b95cfc92e71baa18","--out-dir","/Users/maximvezenov/Documents/dev/noir-backends/my-acvm/acvm/target/rls/debug/deps","-L","dependency=/Users/maximvezenov/Documents/dev/noir-backends/my-acvm/acvm/target/rls/debug/deps","--extern","rand_chacha=/Users/maximvezenov/Documents/dev/noir-backends/my-acvm/acvm/target/rls/debug/deps/librand_chacha-c1480499b7a3f496.rmeta","--extern","rand_core=/Users/maximvezenov/Documents/dev/noir-backends/my-acvm/acvm/target/rls/debug/deps/librand_core-6131bef2fd7c3501.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/maximvezenov/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/maximvezenov/Documents/dev/noir-backends/my-acvm/acvm/target/rls/debug/deps/librand-b95cfc92e71baa18.rmeta"},"prelude":{"crate_id":{"name":"rand","disambiguator":[15402951949433543600,0]},"crate_root":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src","external_crates":[{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[14793976659495462539,0]}},{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[3402831840469434398,0]}},{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[10266006331935790141,0]}},{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/lib.rs","num":4,"id":{"name":"rand_core","disambiguator":[7755924230366515661,0]}},{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/std.rs","num":5,"id":{"name":"rand_chacha","disambiguator":[3283369228956057618,0]}},{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/std.rs","num":6,"id":{"name":"ppv_lite86","disambiguator":[4700435887728680699,0]}}],"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/lib.rs","byte_start":408,"byte_end":6643,"line_start":10,"line_end":214,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":4,"index":145},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/lib.rs","byte_start":2791,"byte_end":2800,"line_start":94,"line_end":94,"column_start":21,"column_end":30},"alias_span":null,"name":"CryptoRng","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":4,"index":98},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/lib.rs","byte_start":2802,"byte_end":2807,"line_start":94,"line_end":94,"column_start":32,"column_end":37},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":4,"index":140},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/lib.rs","byte_start":2809,"byte_end":2816,"line_start":94,"line_end":94,"column_start":39,"column_end":46},"alias_span":null,"name":"RngCore","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":4,"index":146},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/lib.rs","byte_start":2818,"byte_end":2829,"line_start":94,"line_end":94,"column_start":48,"column_end":59},"alias_span":null,"name":"SeedableRng","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":104},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":11237,"byte_end":11246,"line_start":108,"line_end":108,"column_start":27,"column_end":36},"alias_span":null,"name":"IntoFloat","value":"","parent":{"krate":0,"index":259}},{"kind":"Use","ref_id":{"krate":0,"index":621},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":11525,"byte_end":11534,"line_start":119,"line_end":119,"column_start":27,"column_end":36},"alias_span":null,"name":"Bernoulli","value":"","parent":{"krate":0,"index":22}},{"kind":"Use","ref_id":{"krate":0,"index":632},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":11536,"byte_end":11550,"line_start":119,"line_end":119,"column_start":38,"column_end":52},"alias_span":null,"name":"BernoulliError","value":"","parent":{"krate":0,"index":22}},{"kind":"Use","ref_id":{"krate":0,"index":54},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":11582,"byte_end":11594,"line_start":120,"line_end":120,"column_start":30,"column_end":42},"alias_span":null,"name":"Distribution","value":"","parent":{"krate":0,"index":22}},{"kind":"Use","ref_id":{"krate":0,"index":646},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":11596,"byte_end":11604,"line_start":120,"line_end":120,"column_start":44,"column_end":52},"alias_span":null,"name":"DistIter","value":"","parent":{"krate":0,"index":22}},{"kind":"Use","ref_id":{"krate":0,"index":658},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":11606,"byte_end":11613,"line_start":120,"line_end":120,"column_start":54,"column_end":61},"alias_span":null,"name":"DistMap","value":"","parent":{"krate":0,"index":22}},{"kind":"Use","ref_id":{"krate":0,"index":679},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":11704,"byte_end":11710,"line_start":123,"line_end":123,"column_start":23,"column_end":29},"alias_span":null,"name":"Open01","value":"","parent":{"krate":0,"index":22}},{"kind":"Use","ref_id":{"krate":0,"index":680},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":11704,"byte_end":11710,"line_start":123,"line_end":123,"column_start":23,"column_end":29},"alias_span":null,"name":"Open01","value":"","parent":{"krate":0,"index":22}},{"kind":"Use","ref_id":{"krate":0,"index":672},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":11712,"byte_end":11724,"line_start":123,"line_end":123,"column_start":31,"column_end":43},"alias_span":null,"name":"OpenClosed01","value":"","parent":{"krate":0,"index":22}},{"kind":"Use","ref_id":{"krate":0,"index":673},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":11712,"byte_end":11724,"line_start":123,"line_end":123,"column_start":31,"column_end":43},"alias_span":null,"name":"OpenClosed01","value":"","parent":{"krate":0,"index":22}},{"kind":"Use","ref_id":{"krate":0,"index":752},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":11748,"byte_end":11760,"line_start":124,"line_end":124,"column_start":22,"column_end":34},"alias_span":null,"name":"Alphanumeric","value":"","parent":{"krate":0,"index":22}},{"kind":"Use","ref_id":{"krate":0,"index":753},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":11748,"byte_end":11760,"line_start":124,"line_end":124,"column_start":22,"column_end":34},"alias_span":null,"name":"Alphanumeric","value":"","parent":{"krate":0,"index":22}},{"kind":"Use","ref_id":{"krate":0,"index":1071},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":11783,"byte_end":11788,"line_start":125,"line_end":125,"column_start":22,"column_end":27},"alias_span":null,"name":"Slice","value":"","parent":{"krate":0,"index":22}},{"kind":"Use","ref_id":{"krate":0,"index":1145},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":11828,"byte_end":11835,"line_start":127,"line_end":127,"column_start":24,"column_end":31},"alias_span":null,"name":"Uniform","value":"","parent":{"krate":0,"index":22}},{"kind":"Use","ref_id":{"krate":0,"index":54},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/prelude.rs","byte_start":146102,"byte_end":146114,"line_start":21,"line_end":21,"column_start":49,"column_end":61},"alias_span":null,"name":"Distribution","value":"","parent":{"krate":0,"index":432}},{"kind":"Use","ref_id":{"krate":0,"index":1801},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/prelude.rs","byte_start":146262,"byte_end":146268,"line_start":26,"line_end":26,"column_start":40,"column_end":46},"alias_span":null,"name":"StdRng","value":"","parent":{"krate":0,"index":432}},{"kind":"Use","ref_id":{"krate":0,"index":591},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/prelude.rs","byte_start":146409,"byte_end":146423,"line_start":30,"line_end":30,"column_start":40,"column_end":54},"alias_span":null,"name":"IteratorRandom","value":"","parent":{"krate":0,"index":432}},{"kind":"Use","ref_id":{"krate":0,"index":581},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/prelude.rs","byte_start":146425,"byte_end":146436,"line_start":30,"line_end":30,"column_start":56,"column_end":67},"alias_span":null,"name":"SliceRandom","value":"","parent":{"krate":0,"index":432}},{"kind":"Use","ref_id":{"krate":4,"index":145},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/prelude.rs","byte_start":146578,"byte_end":146587,"line_start":34,"line_end":34,"column_start":35,"column_end":44},"alias_span":null,"name":"CryptoRng","value":"","parent":{"krate":0,"index":432}},{"kind":"Use","ref_id":{"krate":0,"index":494},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/prelude.rs","byte_start":146589,"byte_end":146592,"line_start":34,"line_end":34,"column_start":46,"column_end":49},"alias_span":null,"name":"Rng","value":"","parent":{"krate":0,"index":432}},{"kind":"Use","ref_id":{"krate":4,"index":140},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/prelude.rs","byte_start":146594,"byte_end":146601,"line_start":34,"line_end":34,"column_start":51,"column_end":58},"alias_span":null,"name":"RngCore","value":"","parent":{"krate":0,"index":432}},{"kind":"Use","ref_id":{"krate":4,"index":146},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/prelude.rs","byte_start":146603,"byte_end":146614,"line_start":34,"line_end":34,"column_start":60,"column_end":71},"alias_span":null,"name":"SeedableRng","value":"","parent":{"krate":0,"index":432}},{"kind":"Use","ref_id":{"krate":0,"index":1801},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":171332,"byte_end":171338,"line_start":115,"line_end":115,"column_start":48,"column_end":54},"alias_span":null,"name":"StdRng","value":"","parent":{"krate":0,"index":524}},{"kind":"Use","ref_id":{"krate":0,"index":515},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/lib.rs","byte_start":3051,"byte_end":3055,"line_start":106,"line_end":106,"column_start":15,"column_end":19},"alias_span":null,"name":"Fill","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":494},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/lib.rs","byte_start":3057,"byte_end":3060,"line_start":106,"line_end":106,"column_start":21,"column_end":24},"alias_span":null,"name":"Rng","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/lib.rs","byte_start":408,"byte_end":6643,"line_start":10,"line_end":214,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":22},{"krate":0,"index":432},{"krate":0,"index":459},{"krate":0,"index":524},{"krate":0,"index":577},{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":618}],"decl_id":null,"docs":" Utilities for random number generation","sig":null,"attributes":[{"value":"/ Utilities for random number generation","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/lib.rs","byte_start":408,"byte_end":450,"line_start":10,"line_end":10,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/lib.rs","byte_start":451,"byte_end":454,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Rand provides utilities to generate random numbers, to convert them to","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/lib.rs","byte_start":455,"byte_end":529,"line_start":12,"line_end":12,"column_start":1,"column_end":75}},{"value":"/ useful types and distributions, and some randomness-related algorithms.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/lib.rs","byte_start":530,"byte_end":605,"line_start":13,"line_end":13,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/lib.rs","byte_start":606,"byte_end":609,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Quick Start","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/lib.rs","byte_start":610,"byte_end":627,"line_start":15,"line_end":15,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/lib.rs","byte_start":628,"byte_end":631,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ To get you started quickly, the easiest and highest-level way to get","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/lib.rs","byte_start":632,"byte_end":704,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"/ a random value is to use [`random()`]; alternatively you can use","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/lib.rs","byte_start":705,"byte_end":773,"line_start":18,"line_end":18,"column_start":1,"column_end":69}},{"value":"/ [`thread_rng()`]. The [`Rng`] trait provides a useful API on all RNGs, while","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/lib.rs","byte_start":774,"byte_end":854,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/ the [`distributions`] and [`seq`] modules provide further","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/lib.rs","byte_start":855,"byte_end":916,"line_start":20,"line_end":20,"column_start":1,"column_end":62}},{"value":"/ functionality on top of RNGs.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/lib.rs","byte_start":917,"byte_end":950,"line_start":21,"line_end":21,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/lib.rs","byte_start":951,"byte_end":954,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/lib.rs","byte_start":955,"byte_end":962,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/ use rand::prelude::*;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/lib.rs","byte_start":963,"byte_end":988,"line_start":24,"line_end":24,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/lib.rs","byte_start":989,"byte_end":992,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ if rand::random() { // generates a boolean","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/lib.rs","byte_start":993,"byte_end":1039,"line_start":26,"line_end":26,"column_start":1,"column_end":47}},{"value":"/     // Try printing a random unicode code point (probably a bad idea)!","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/lib.rs","byte_start":1040,"byte_end":1114,"line_start":27,"line_end":27,"column_start":1,"column_end":75}},{"value":"/     println!(\"char: {}\", rand::random::<char>());","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/lib.rs","byte_start":1115,"byte_end":1168,"line_start":28,"line_end":28,"column_start":1,"column_end":54}},{"value":"/ }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/lib.rs","byte_start":1169,"byte_end":1174,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/lib.rs","byte_start":1175,"byte_end":1178,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let mut rng = rand::thread_rng();","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/lib.rs","byte_start":1179,"byte_end":1216,"line_start":31,"line_end":31,"column_start":1,"column_end":38}},{"value":"/ let y: f64 = rng.gen(); // generates a float between 0 and 1","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/lib.rs","byte_start":1217,"byte_end":1281,"line_start":32,"line_end":32,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/lib.rs","byte_start":1282,"byte_end":1285,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ let mut nums: Vec<i32> = (1..100).collect();","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/lib.rs","byte_start":1286,"byte_end":1334,"line_start":34,"line_end":34,"column_start":1,"column_end":49}},{"value":"/ nums.shuffle(&mut rng);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/lib.rs","byte_start":1335,"byte_end":1362,"line_start":35,"line_end":35,"column_start":1,"column_end":28}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/lib.rs","byte_start":1363,"byte_end":1370,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/lib.rs","byte_start":1371,"byte_end":1374,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ # The Book","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/lib.rs","byte_start":1375,"byte_end":1389,"line_start":38,"line_end":38,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/lib.rs","byte_start":1390,"byte_end":1393,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ For the user guide and further documentation, please read","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/lib.rs","byte_start":1394,"byte_end":1455,"line_start":40,"line_end":40,"column_start":1,"column_end":62}},{"value":"/ [The Rust Rand Book](https://rust-random.github.io/book).","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/lib.rs","byte_start":1456,"byte_end":1517,"line_start":41,"line_end":41,"column_start":1,"column_end":62}},{"value":"deny(missing_docs)","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/lib.rs","byte_start":1733,"byte_end":1755,"line_start":48,"line_end":48,"column_start":1,"column_end":23}},{"value":"deny(missing_debug_implementations)","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/lib.rs","byte_start":1756,"byte_end":1795,"line_start":49,"line_end":49,"column_start":1,"column_end":40}},{"value":"no_std","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/lib.rs","byte_start":1857,"byte_end":1867,"line_start":51,"line_end":51,"column_start":1,"column_end":11}},{"value":"allow(clippy :: float_cmp, clippy :: neg_cmp_op_on_partial_ord,)","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/lib.rs","byte_start":1965,"byte_end":2039,"line_start":54,"line_end":57,"column_start":1,"column_end":3}}]},{"kind":"Mod","id":{"krate":0,"index":22},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"distributions","qualname":"::distributions","value":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","parent":null,"children":[{"krate":0,"index":23},{"krate":0,"index":47},{"krate":0,"index":87},{"krate":0,"index":108},{"krate":0,"index":158},{"krate":0,"index":203},{"krate":0,"index":222},{"krate":0,"index":259},{"krate":0,"index":263},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":400},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":407},{"krate":0,"index":410},{"krate":0,"index":413},{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":420},{"krate":0,"index":421},{"krate":0,"index":423},{"krate":0,"index":426},{"krate":0,"index":429},{"krate":0,"index":1502},{"krate":0,"index":1504},{"krate":0,"index":1506},{"krate":0,"index":1507}],"decl_id":null,"docs":" Generating random samples from probability distributions","sig":null,"attributes":[{"value":"/ Generating random samples from probability distributions","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":7053,"byte_end":7113,"line_start":10,"line_end":10,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":7114,"byte_end":7117,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This module is the home of the [`Distribution`] trait and several of its","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":7118,"byte_end":7194,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ implementations. It is the workhorse behind some of the convenient","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":7195,"byte_end":7265,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/ functionality of the [`Rng`] trait, e.g. [`Rng::gen`] and of course","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":7266,"byte_end":7337,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"/ [`Rng::sample`].","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":7338,"byte_end":7358,"line_start":15,"line_end":15,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":7359,"byte_end":7362,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Abstractly, a [probability distribution] describes the probability of","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":7363,"byte_end":7436,"line_start":17,"line_end":17,"column_start":1,"column_end":74}},{"value":"/ occurrence of each value in its sample space.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":7437,"byte_end":7486,"line_start":18,"line_end":18,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":7487,"byte_end":7490,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ More concretely, an implementation of `Distribution<T>` for type `X` is an","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":7491,"byte_end":7569,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"/ algorithm for choosing values from the sample space (a subset of `T`)","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":7570,"byte_end":7643,"line_start":21,"line_end":21,"column_start":1,"column_end":74}},{"value":"/ according to the distribution `X` represents, using an external source of","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":7644,"byte_end":7721,"line_start":22,"line_end":22,"column_start":1,"column_end":78}},{"value":"/ randomness (an RNG supplied to the `sample` function).","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":7722,"byte_end":7780,"line_start":23,"line_end":23,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":7781,"byte_end":7784,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ A type `X` may implement `Distribution<T>` for multiple types `T`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":7785,"byte_end":7855,"line_start":25,"line_end":25,"column_start":1,"column_end":71}},{"value":"/ Any type implementing [`Distribution`] is stateless (i.e. immutable),","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":7856,"byte_end":7929,"line_start":26,"line_end":26,"column_start":1,"column_end":74}},{"value":"/ but it may have internal parameters set at construction time (for example,","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":7930,"byte_end":8008,"line_start":27,"line_end":27,"column_start":1,"column_end":79}},{"value":"/ [`Uniform`] allows specification of its sample space as a range within `T`).","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":8009,"byte_end":8089,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":8090,"byte_end":8093,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":8094,"byte_end":8097,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # The `Standard` distribution","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":8098,"byte_end":8131,"line_start":31,"line_end":31,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":8132,"byte_end":8135,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ The [`Standard`] distribution is important to mention. This is the","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":8136,"byte_end":8206,"line_start":33,"line_end":33,"column_start":1,"column_end":71}},{"value":"/ distribution used by [`Rng::gen`] and represents the \"default\" way to","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":8207,"byte_end":8280,"line_start":34,"line_end":34,"column_start":1,"column_end":74}},{"value":"/ produce a random value for many different types, including most primitive","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":8281,"byte_end":8358,"line_start":35,"line_end":35,"column_start":1,"column_end":78}},{"value":"/ types, tuples, arrays, and a few derived types. See the documentation of","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":8359,"byte_end":8435,"line_start":36,"line_end":36,"column_start":1,"column_end":77}},{"value":"/ [`Standard`] for more details.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":8436,"byte_end":8470,"line_start":37,"line_end":37,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":8471,"byte_end":8474,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Implementing `Distribution<T>` for [`Standard`] for user types `T` makes it","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":8475,"byte_end":8554,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ possible to generate type `T` with [`Rng::gen`], and by extension also","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":8555,"byte_end":8629,"line_start":40,"line_end":40,"column_start":1,"column_end":75}},{"value":"/ with the [`random`] function.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":8630,"byte_end":8663,"line_start":41,"line_end":41,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":8664,"byte_end":8667,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ## Random characters","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":8668,"byte_end":8692,"line_start":43,"line_end":43,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":8693,"byte_end":8696,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ [`Alphanumeric`] is a simple distribution to sample random letters and","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":8697,"byte_end":8771,"line_start":45,"line_end":45,"column_start":1,"column_end":75}},{"value":"/ numbers of the `char` type; in contrast [`Standard`] may sample any valid","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":8772,"byte_end":8849,"line_start":46,"line_end":46,"column_start":1,"column_end":78}},{"value":"/ `char`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":8850,"byte_end":8861,"line_start":47,"line_end":47,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":8862,"byte_end":8865,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":8866,"byte_end":8869,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ # Uniform numeric ranges","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":8870,"byte_end":8898,"line_start":50,"line_end":50,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":8899,"byte_end":8902,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ The [`Uniform`] distribution is more flexible than [`Standard`], but also","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":8903,"byte_end":8980,"line_start":52,"line_end":52,"column_start":1,"column_end":78}},{"value":"/ more specialised: it supports fewer target types, but allows the sample","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":8981,"byte_end":9056,"line_start":53,"line_end":53,"column_start":1,"column_end":76}},{"value":"/ space to be specified as an arbitrary range within its target type `T`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":9057,"byte_end":9132,"line_start":54,"line_end":54,"column_start":1,"column_end":76}},{"value":"/ Both [`Standard`] and [`Uniform`] are in some sense uniform distributions.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":9133,"byte_end":9211,"line_start":55,"line_end":55,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":9212,"byte_end":9215,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ Values may be sampled from this distribution using [`Rng::sample(Range)`] or","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":9216,"byte_end":9296,"line_start":57,"line_end":57,"column_start":1,"column_end":81}},{"value":"/ by creating a distribution object with [`Uniform::new`],","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":9297,"byte_end":9357,"line_start":58,"line_end":58,"column_start":1,"column_end":61}},{"value":"/ [`Uniform::new_inclusive`] or `From<Range>`. When the range limits are not","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":9358,"byte_end":9436,"line_start":59,"line_end":59,"column_start":1,"column_end":79}},{"value":"/ known at compile time it is typically faster to reuse an existing","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":9437,"byte_end":9506,"line_start":60,"line_end":60,"column_start":1,"column_end":70}},{"value":"/ `Uniform` object than to call [`Rng::sample(Range)`].","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":9507,"byte_end":9564,"line_start":61,"line_end":61,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":9565,"byte_end":9568,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ User types `T` may also implement `Distribution<T>` for [`Uniform`],","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":9569,"byte_end":9641,"line_start":63,"line_end":63,"column_start":1,"column_end":73}},{"value":"/ although this is less straightforward than for [`Standard`] (see the","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":9642,"byte_end":9714,"line_start":64,"line_end":64,"column_start":1,"column_end":73}},{"value":"/ documentation in the [`uniform`] module). Doing so enables generation of","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":9715,"byte_end":9791,"line_start":65,"line_end":65,"column_start":1,"column_end":77}},{"value":"/ values of type `T` with  [`Rng::sample(Range)`].","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":9792,"byte_end":9844,"line_start":66,"line_end":66,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":9845,"byte_end":9848,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ ## Open and half-open ranges","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":9849,"byte_end":9881,"line_start":68,"line_end":68,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":9882,"byte_end":9885,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ There are surprisingly many ways to uniformly generate random floats. A","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":9886,"byte_end":9961,"line_start":70,"line_end":70,"column_start":1,"column_end":76}},{"value":"/ range between 0 and 1 is standard, but the exact bounds (open vs closed)","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":9962,"byte_end":10038,"line_start":71,"line_end":71,"column_start":1,"column_end":77}},{"value":"/ and accuracy differ. In addition to the [`Standard`] distribution Rand offers","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":10039,"byte_end":10120,"line_start":72,"line_end":72,"column_start":1,"column_end":82}},{"value":"/ [`Open01`] and [`OpenClosed01`]. See \"Floating point implementation\" section of","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":10121,"byte_end":10204,"line_start":73,"line_end":73,"column_start":1,"column_end":84}},{"value":"/ [`Standard`] documentation for more details.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":10205,"byte_end":10253,"line_start":74,"line_end":74,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":10254,"byte_end":10257,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ # Non-uniform sampling","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":10258,"byte_end":10284,"line_start":76,"line_end":76,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":10285,"byte_end":10288,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ Sampling a simple true/false outcome with a given probability has a name:","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":10289,"byte_end":10366,"line_start":78,"line_end":78,"column_start":1,"column_end":78}},{"value":"/ the [`Bernoulli`] distribution (this is used by [`Rng::gen_bool`]).","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":10367,"byte_end":10438,"line_start":79,"line_end":79,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":10439,"byte_end":10442,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ For weighted sampling from a sequence of discrete values, use the","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":10443,"byte_end":10512,"line_start":81,"line_end":81,"column_start":1,"column_end":70}},{"value":"/ [`WeightedIndex`] distribution.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":10513,"byte_end":10548,"line_start":82,"line_end":82,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":10549,"byte_end":10552,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ This crate no longer includes other non-uniform distributions; instead","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":10553,"byte_end":10627,"line_start":84,"line_end":84,"column_start":1,"column_end":75}},{"value":"/ it is recommended that you use either [`rand_distr`] or [`statrs`].","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":10628,"byte_end":10699,"line_start":85,"line_end":85,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":10700,"byte_end":10703,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":10704,"byte_end":10707,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ [probability distribution]: https://en.wikipedia.org/wiki/Probability_distribution","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":10708,"byte_end":10794,"line_start":88,"line_end":88,"column_start":1,"column_end":87}},{"value":"/ [`rand_distr`]: https://crates.io/crates/rand_distr","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":10795,"byte_end":10850,"line_start":89,"line_end":89,"column_start":1,"column_end":56}},{"value":"/ [`statrs`]: https://crates.io/crates/statrs","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":10851,"byte_end":10898,"line_start":90,"line_end":90,"column_start":1,"column_end":48}},{"value":"/ [`random`]: crate::random","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":10900,"byte_end":10929,"line_start":92,"line_end":92,"column_start":1,"column_end":30}},{"value":"/ [`rand_distr`]: https://crates.io/crates/rand_distr","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":10930,"byte_end":10985,"line_start":93,"line_end":93,"column_start":1,"column_end":56}},{"value":"/ [`statrs`]: https://crates.io/crates/statrs","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":10986,"byte_end":11033,"line_start":94,"line_end":94,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":621},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs","byte_start":16897,"byte_end":16906,"line_start":38,"line_end":38,"column_start":12,"column_end":21},"name":"Bernoulli","qualname":"::distributions::bernoulli::Bernoulli","value":"Bernoulli {  }","parent":null,"children":[{"krate":0,"index":622}],"decl_id":null,"docs":" The Bernoulli distribution.","sig":null,"attributes":[{"value":"/ The Bernoulli distribution.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs","byte_start":16244,"byte_end":16275,"line_start":17,"line_end":17,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs","byte_start":16276,"byte_end":16279,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ This is a special case of the Binomial distribution where `n = 1`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs","byte_start":16280,"byte_end":16350,"line_start":19,"line_end":19,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs","byte_start":16351,"byte_end":16354,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs","byte_start":16355,"byte_end":16368,"line_start":21,"line_end":21,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs","byte_start":16369,"byte_end":16372,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs","byte_start":16373,"byte_end":16384,"line_start":23,"line_end":23,"column_start":1,"column_end":12}},{"value":"/ use rand::distributions::{Bernoulli, Distribution};","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs","byte_start":16385,"byte_end":16440,"line_start":24,"line_end":24,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs","byte_start":16441,"byte_end":16444,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let d = Bernoulli::new(0.3).unwrap();","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs","byte_start":16445,"byte_end":16486,"line_start":26,"line_end":26,"column_start":1,"column_end":42}},{"value":"/ let v = d.sample(&mut rand::thread_rng());","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs","byte_start":16487,"byte_end":16533,"line_start":27,"line_end":27,"column_start":1,"column_end":47}},{"value":"/ println!(\"{} is from a Bernoulli distribution\", v);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs","byte_start":16534,"byte_end":16589,"line_start":28,"line_end":28,"column_start":1,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs","byte_start":16590,"byte_end":16597,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs","byte_start":16598,"byte_end":16601,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Precision","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs","byte_start":16602,"byte_end":16617,"line_start":31,"line_end":31,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs","byte_start":16618,"byte_end":16621,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This `Bernoulli` distribution uses 64 bits from the RNG (a `u64`),","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs","byte_start":16622,"byte_end":16692,"line_start":33,"line_end":33,"column_start":1,"column_end":71}},{"value":"/ so only probabilities that are multiples of 2<sup>-64</sup> can be","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs","byte_start":16693,"byte_end":16763,"line_start":34,"line_end":34,"column_start":1,"column_end":71}},{"value":"/ represented.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs","byte_start":16764,"byte_end":16780,"line_start":35,"line_end":35,"column_start":1,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":633},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs","byte_start":18372,"byte_end":18390,"line_start":72,"line_end":72,"column_start":5,"column_end":23},"name":"InvalidProbability","qualname":"::distributions::bernoulli::BernoulliError::InvalidProbability","value":"BernoulliError::InvalidProbability","parent":{"krate":0,"index":632},"children":[],"decl_id":null,"docs":" `p < 0` or `p > 1`.\n","sig":null,"attributes":[{"value":"/ `p < 0` or `p > 1`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs","byte_start":18344,"byte_end":18367,"line_start":71,"line_end":71,"column_start":5,"column_end":28}}]},{"kind":"Enum","id":{"krate":0,"index":632},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs","byte_start":18323,"byte_end":18337,"line_start":70,"line_end":70,"column_start":10,"column_end":24},"name":"BernoulliError","qualname":"::distributions::bernoulli::BernoulliError","value":"pub enum BernoulliError { InvalidProbability, }","parent":null,"children":[{"krate":0,"index":633}],"decl_id":null,"docs":" Error type returned from `Bernoulli::new`.\n","sig":null,"attributes":[{"value":"/ Error type returned from `Bernoulli::new`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs","byte_start":18222,"byte_end":18268,"line_start":68,"line_end":68,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs","byte_start":19261,"byte_end":19264,"line_start":98,"line_end":98,"column_start":12,"column_end":15},"name":"new","qualname":"<Bernoulli>::new","value":"pub fn new(f64) -> Result<Bernoulli, BernoulliError>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Bernoulli` with the given probability of success `p`.","sig":null,"attributes":[{"value":"/ Construct a new `Bernoulli` with the given probability of success `p`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs","byte_start":18742,"byte_end":18816,"line_start":87,"line_end":87,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs","byte_start":18821,"byte_end":18824,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ # Precision","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs","byte_start":18829,"byte_end":18844,"line_start":89,"line_end":89,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs","byte_start":18849,"byte_end":18852,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ For `p = 1.0`, the resulting distribution will always generate true.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs","byte_start":18857,"byte_end":18929,"line_start":91,"line_end":91,"column_start":5,"column_end":77}},{"value":"/ For `p = 0.0`, the resulting distribution will always generate false.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs","byte_start":18934,"byte_end":19007,"line_start":92,"line_end":92,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs","byte_start":19012,"byte_end":19015,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ This method is accurate for any input `p` in the range `[0, 1]` which is","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs","byte_start":19020,"byte_end":19096,"line_start":94,"line_end":94,"column_start":5,"column_end":81}},{"value":"/ a multiple of 2<sup>-64</sup>. (Note that not all multiples of","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs","byte_start":19101,"byte_end":19167,"line_start":95,"line_end":95,"column_start":5,"column_end":71}},{"value":"/ 2<sup>-64</sup> in `[0, 1]` can be represented as a `f64`.)","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs","byte_start":19172,"byte_end":19235,"line_start":96,"line_end":96,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs","byte_start":19240,"byte_end":19249,"line_start":97,"line_end":97,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs","byte_start":20147,"byte_end":20157,"line_start":119,"line_end":119,"column_start":12,"column_end":22},"name":"from_ratio","qualname":"<Bernoulli>::from_ratio","value":"pub fn from_ratio(u32, u32) -> Result<Bernoulli, BernoulliError>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Bernoulli` with the probability of success of\n `numerator`-in-`denominator`. I.e. `new_ratio(2, 3)` will return\n a `Bernoulli` with a 2-in-3 chance, or about 67%, of returning `true`.","sig":null,"attributes":[{"value":"/ Construct a new `Bernoulli` with the probability of success of","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs","byte_start":19605,"byte_end":19671,"line_start":110,"line_end":110,"column_start":5,"column_end":71}},{"value":"/ `numerator`-in-`denominator`. I.e. `new_ratio(2, 3)` will return","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs","byte_start":19676,"byte_end":19744,"line_start":111,"line_end":111,"column_start":5,"column_end":73}},{"value":"/ a `Bernoulli` with a 2-in-3 chance, or about 67%, of returning `true`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs","byte_start":19749,"byte_end":19823,"line_start":112,"line_end":112,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs","byte_start":19828,"byte_end":19831,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ return `true`. If `numerator == 0` it will always return `false`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs","byte_start":19836,"byte_end":19905,"line_start":114,"line_end":114,"column_start":5,"column_end":74}},{"value":"/ For `numerator > denominator` and `denominator == 0`, this returns an","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs","byte_start":19910,"byte_end":19983,"line_start":115,"line_end":115,"column_start":5,"column_end":78}},{"value":"/ error. Otherwise, for `numerator == denominator`, samples are always","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs","byte_start":19988,"byte_end":20060,"line_start":116,"line_end":116,"column_start":5,"column_end":77}},{"value":"/ true; for `numerator == 0` samples are always false.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs","byte_start":20065,"byte_end":20121,"line_start":117,"line_end":117,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs","byte_start":20126,"byte_end":20135,"line_start":118,"line_end":118,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":54},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":24827,"byte_end":24839,"line_start":35,"line_end":35,"column_start":11,"column_end":23},"name":"Distribution","qualname":"::distributions::distribution::Distribution","value":"Distribution<T>","parent":null,"children":[{"krate":0,"index":56},{"krate":0,"index":58},{"krate":0,"index":60}],"decl_id":null,"docs":" Types (distributions) that can be used to create a random instance of `T`.","sig":null,"attributes":[{"value":"/ Types (distributions) that can be used to create a random instance of `T`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":23813,"byte_end":23891,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":23892,"byte_end":23895,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ It is possible to sample from a distribution through both the","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":23896,"byte_end":23961,"line_start":19,"line_end":19,"column_start":1,"column_end":66}},{"value":"/ `Distribution` and [`Rng`] traits, via `distr.sample(&mut rng)` and","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":23962,"byte_end":24033,"line_start":20,"line_end":20,"column_start":1,"column_end":72}},{"value":"/ `rng.sample(distr)`. They also both offer the [`sample_iter`] method, which","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":24034,"byte_end":24113,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ produces an iterator that samples from the distribution.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":24114,"byte_end":24174,"line_start":22,"line_end":22,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":24175,"byte_end":24178,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ All implementations are expected to be immutable; this has the significant","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":24179,"byte_end":24257,"line_start":24,"line_end":24,"column_start":1,"column_end":79}},{"value":"/ advantage of not needing to consider thread safety, and for most","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":24258,"byte_end":24326,"line_start":25,"line_end":25,"column_start":1,"column_end":69}},{"value":"/ distributions efficient state-less sampling algorithms are available.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":24327,"byte_end":24400,"line_start":26,"line_end":26,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":24401,"byte_end":24404,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ Implementations are typically expected to be portable with reproducible","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":24405,"byte_end":24480,"line_start":28,"line_end":28,"column_start":1,"column_end":76}},{"value":"/ results when used with a PRNG with fixed seed; see the","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":24481,"byte_end":24539,"line_start":29,"line_end":29,"column_start":1,"column_end":59}},{"value":"/ [portability chapter](https://rust-random.github.io/book/portability.html)","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":24540,"byte_end":24618,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ of The Rust Rand Book. In some cases this does not apply, e.g. the `usize`","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":24619,"byte_end":24697,"line_start":31,"line_end":31,"column_start":1,"column_end":79}},{"value":"/ type requires different sampling on 32-bit and 64-bit machines.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":24698,"byte_end":24765,"line_start":32,"line_end":32,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":24766,"byte_end":24769,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ [`sample_iter`]: Distribution::sample_iter","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":24770,"byte_end":24816,"line_start":34,"line_end":34,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":24933,"byte_end":24939,"line_start":37,"line_end":37,"column_start":8,"column_end":14},"name":"sample","qualname":"::distributions::distribution::Distribution::sample","value":"pub fn sample<R: Rng + ?Sized>(&Self, &mut R) -> T","parent":{"krate":0,"index":54},"children":[],"decl_id":null,"docs":" Generate a random value of `T`, using `rng` as the source of randomness.\n","sig":null,"attributes":[{"value":"/ Generate a random value of `T`, using `rng` as the source of randomness.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":24849,"byte_end":24925,"line_start":36,"line_end":36,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":26233,"byte_end":26244,"line_start":73,"line_end":73,"column_start":8,"column_end":19},"name":"sample_iter","qualname":"::distributions::distribution::Distribution::sample_iter","value":"pub fn sample_iter<R>(Self, R) -> DistIter<Self, R, T> where R: Rng,\nSelf: Sized","parent":{"krate":0,"index":54},"children":[],"decl_id":null,"docs":" Create an iterator that generates random values of `T`, using `rng` as\n the source of randomness.","sig":null,"attributes":[{"value":"/ Create an iterator that generates random values of `T`, using `rng` as","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":24988,"byte_end":25062,"line_start":39,"line_end":39,"column_start":5,"column_end":79}},{"value":"/ the source of randomness.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":25067,"byte_end":25096,"line_start":40,"line_end":40,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":25101,"byte_end":25104,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ Note that this function takes `self` by value. This works since","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":25109,"byte_end":25176,"line_start":42,"line_end":42,"column_start":5,"column_end":72}},{"value":"/ `Distribution<T>` is impl'd for `&D` where `D: Distribution<T>`,","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":25181,"byte_end":25249,"line_start":43,"line_end":43,"column_start":5,"column_end":73}},{"value":"/ however borrowing is not automatic hence `distr.sample_iter(...)` may","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":25254,"byte_end":25327,"line_start":44,"line_end":44,"column_start":5,"column_end":78}},{"value":"/ need to be replaced with `(&distr).sample_iter(...)` to borrow or","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":25332,"byte_end":25401,"line_start":45,"line_end":45,"column_start":5,"column_end":74}},{"value":"/ `(&*distr).sample_iter(...)` to reborrow an existing reference.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":25406,"byte_end":25473,"line_start":46,"line_end":46,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":25478,"byte_end":25481,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":25486,"byte_end":25499,"line_start":48,"line_end":48,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":25504,"byte_end":25507,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":25512,"byte_end":25519,"line_start":50,"line_end":50,"column_start":5,"column_end":12}},{"value":"/ use rand::thread_rng;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":25524,"byte_end":25549,"line_start":51,"line_end":51,"column_start":5,"column_end":30}},{"value":"/ use rand::distributions::{Distribution, Alphanumeric, Uniform, Standard};","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":25554,"byte_end":25631,"line_start":52,"line_end":52,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":25636,"byte_end":25639,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ let mut rng = thread_rng();","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":25644,"byte_end":25675,"line_start":54,"line_end":54,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":25680,"byte_end":25683,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ // Vec of 16 x f32:","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":25688,"byte_end":25711,"line_start":56,"line_end":56,"column_start":5,"column_end":28}},{"value":"/ let v: Vec<f32> = Standard.sample_iter(&mut rng).take(16).collect();","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":25716,"byte_end":25788,"line_start":57,"line_end":57,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":25793,"byte_end":25796,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ // String:","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":25801,"byte_end":25815,"line_start":59,"line_end":59,"column_start":5,"column_end":19}},{"value":"/ let s: String = Alphanumeric","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":25820,"byte_end":25852,"line_start":60,"line_end":60,"column_start":5,"column_end":37}},{"value":"/     .sample_iter(&mut rng)","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":25857,"byte_end":25887,"line_start":61,"line_end":61,"column_start":5,"column_end":35}},{"value":"/     .take(7)","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":25892,"byte_end":25908,"line_start":62,"line_end":62,"column_start":5,"column_end":21}},{"value":"/     .map(char::from)","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":25913,"byte_end":25937,"line_start":63,"line_end":63,"column_start":5,"column_end":29}},{"value":"/     .collect();","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":25942,"byte_end":25961,"line_start":64,"line_end":64,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":25966,"byte_end":25969,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ // Dice-rolling:","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":25974,"byte_end":25994,"line_start":66,"line_end":66,"column_start":5,"column_end":25}},{"value":"/ let die_range = Uniform::new_inclusive(1, 6);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":25999,"byte_end":26048,"line_start":67,"line_end":67,"column_start":5,"column_end":54}},{"value":"/ let mut roll_die = die_range.sample_iter(&mut rng);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":26053,"byte_end":26108,"line_start":68,"line_end":68,"column_start":5,"column_end":60}},{"value":"/ while roll_die.next().unwrap() != 6 {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":26113,"byte_end":26154,"line_start":69,"line_end":69,"column_start":5,"column_end":46}},{"value":"/     println!(\"Not a 6; rolling again!\");","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":26159,"byte_end":26203,"line_start":70,"line_end":70,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":26208,"byte_end":26213,"line_start":71,"line_end":71,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":26218,"byte_end":26225,"line_start":72,"line_end":72,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":26993,"byte_end":26996,"line_start":102,"line_end":102,"column_start":8,"column_end":11},"name":"map","qualname":"::distributions::distribution::Distribution::map","value":"pub fn map<F, S>(Self, F) -> DistMap<Self, F, T, S> where F: Fn(T) -> S,\nSelf: Sized","parent":{"krate":0,"index":54},"children":[],"decl_id":null,"docs":" Create a distribution of values of 'S' by mapping the output of `Self`\n through the closure `F`","sig":null,"attributes":[{"value":"/ Create a distribution of values of 'S' by mapping the output of `Self`","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":26471,"byte_end":26545,"line_start":85,"line_end":85,"column_start":5,"column_end":79}},{"value":"/ through the closure `F`","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":26550,"byte_end":26577,"line_start":86,"line_end":86,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":26582,"byte_end":26585,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":26590,"byte_end":26603,"line_start":88,"line_end":88,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":26608,"byte_end":26611,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":26616,"byte_end":26623,"line_start":90,"line_end":90,"column_start":5,"column_end":12}},{"value":"/ use rand::thread_rng;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":26628,"byte_end":26653,"line_start":91,"line_end":91,"column_start":5,"column_end":30}},{"value":"/ use rand::distributions::{Distribution, Uniform};","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":26658,"byte_end":26711,"line_start":92,"line_end":92,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":26716,"byte_end":26719,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ let mut rng = thread_rng();","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":26724,"byte_end":26755,"line_start":94,"line_end":94,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":26760,"byte_end":26763,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ let die = Uniform::new_inclusive(1, 6);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":26768,"byte_end":26811,"line_start":96,"line_end":96,"column_start":5,"column_end":48}},{"value":"/ let even_number = die.map(|num| num % 2 == 0);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":26816,"byte_end":26866,"line_start":97,"line_end":97,"column_start":5,"column_end":55}},{"value":"/ while !even_number.sample(&mut rng) {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":26871,"byte_end":26912,"line_start":98,"line_end":98,"column_start":5,"column_end":46}},{"value":"/     println!(\"Still odd; rolling again!\");","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":26917,"byte_end":26963,"line_start":99,"line_end":99,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":26968,"byte_end":26973,"line_start":100,"line_end":100,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":26978,"byte_end":26985,"line_start":101,"line_end":101,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":646},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":27706,"byte_end":27714,"line_start":129,"line_end":129,"column_start":12,"column_end":20},"name":"DistIter","qualname":"::distributions::distribution::DistIter","value":"DistIter {  }","parent":null,"children":[{"krate":0,"index":650},{"krate":0,"index":651},{"krate":0,"index":652}],"decl_id":null,"docs":" An iterator that generates random values of `T` with distribution `D`,\n using `R` as the source of randomness.","sig":null,"attributes":[{"value":"/ An iterator that generates random values of `T` with distribution `D`,","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":27389,"byte_end":27463,"line_start":121,"line_end":121,"column_start":1,"column_end":75}},{"value":"/ using `R` as the source of randomness.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":27464,"byte_end":27506,"line_start":122,"line_end":122,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":27507,"byte_end":27510,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`sample_iter`] method on [`Distribution`].","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":27511,"byte_end":27590,"line_start":124,"line_end":124,"column_start":1,"column_end":80}},{"value":"/ See its documentation for more.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":27591,"byte_end":27626,"line_start":125,"line_end":125,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":27627,"byte_end":27630,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ [`sample_iter`]: Distribution::sample_iter","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":27631,"byte_end":27677,"line_start":127,"line_end":127,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":658},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":28869,"byte_end":28876,"line_start":176,"line_end":176,"column_start":12,"column_end":19},"name":"DistMap","qualname":"::distributions::distribution::DistMap","value":"DistMap {  }","parent":null,"children":[{"krate":0,"index":663},{"krate":0,"index":664},{"krate":0,"index":665}],"decl_id":null,"docs":" A distribution of values of type `S` derived from the distribution `D`\n by mapping its output of type `T` through the closure `F`.","sig":null,"attributes":[{"value":"/ A distribution of values of type `S` derived from the distribution `D`","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":28597,"byte_end":28671,"line_start":170,"line_end":170,"column_start":1,"column_end":75}},{"value":"/ by mapping its output of type `T` through the closure `F`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":28672,"byte_end":28734,"line_start":171,"line_end":171,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":28735,"byte_end":28738,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`Distribution::map`] method.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":28739,"byte_end":28804,"line_start":173,"line_end":173,"column_start":1,"column_end":66}},{"value":"/ See its documentation for more.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":28805,"byte_end":28840,"line_start":174,"line_end":174,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":672},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs","byte_start":33333,"byte_end":33345,"line_start":46,"line_end":46,"column_start":12,"column_end":24},"name":"OpenClosed01","qualname":"::distributions::float::OpenClosed01","value":"","parent":null,"children":[],"decl_id":null,"docs":" A distribution to sample floating point numbers uniformly in the half-open\n interval `(0, 1]`, i.e. including 1 but not 0.","sig":null,"attributes":[{"value":"/ A distribution to sample floating point numbers uniformly in the half-open","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs","byte_start":32316,"byte_end":32394,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"/ interval `(0, 1]`, i.e. including 1 but not 0.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs","byte_start":32395,"byte_end":32445,"line_start":21,"line_end":21,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs","byte_start":32446,"byte_end":32449,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ All values that can be generated are of the form `n * ε/2`. For `f32`","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs","byte_start":32450,"byte_end":32524,"line_start":23,"line_end":23,"column_start":1,"column_end":74}},{"value":"/ the 24 most significant random bits of a `u32` are used and for `f64` the","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs","byte_start":32525,"byte_end":32602,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/ 53 most significant bits of a `u64` are used. The conversion uses the","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs","byte_start":32603,"byte_end":32676,"line_start":25,"line_end":25,"column_start":1,"column_end":74}},{"value":"/ multiplicative method.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs","byte_start":32677,"byte_end":32703,"line_start":26,"line_end":26,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs","byte_start":32704,"byte_end":32707,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ See also: [`Standard`] which samples from `[0, 1)`, [`Open01`]","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs","byte_start":32708,"byte_end":32774,"line_start":28,"line_end":28,"column_start":1,"column_end":67}},{"value":"/ which samples from `(0, 1)` and [`Uniform`] which samples from arbitrary","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs","byte_start":32775,"byte_end":32851,"line_start":29,"line_end":29,"column_start":1,"column_end":77}},{"value":"/ ranges.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs","byte_start":32852,"byte_end":32863,"line_start":30,"line_end":30,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs","byte_start":32864,"byte_end":32867,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs","byte_start":32868,"byte_end":32881,"line_start":32,"line_end":32,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs","byte_start":32882,"byte_end":32889,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ use rand::{thread_rng, Rng};","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs","byte_start":32890,"byte_end":32922,"line_start":34,"line_end":34,"column_start":1,"column_end":33}},{"value":"/ use rand::distributions::OpenClosed01;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs","byte_start":32923,"byte_end":32965,"line_start":35,"line_end":35,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs","byte_start":32966,"byte_end":32969,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ let val: f32 = thread_rng().sample(OpenClosed01);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs","byte_start":32970,"byte_end":33023,"line_start":37,"line_end":37,"column_start":1,"column_end":54}},{"value":"/ println!(\"f32 from (0, 1): {}\", val);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs","byte_start":33024,"byte_end":33065,"line_start":38,"line_end":38,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs","byte_start":33066,"byte_end":33073,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs","byte_start":33074,"byte_end":33077,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ [`Standard`]: crate::distributions::Standard","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs","byte_start":33078,"byte_end":33126,"line_start":41,"line_end":41,"column_start":1,"column_end":49}},{"value":"/ [`Open01`]: crate::distributions::Open01","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs","byte_start":33127,"byte_end":33171,"line_start":42,"line_end":42,"column_start":1,"column_end":45}},{"value":"/ [`Uniform`]: crate::distributions::uniform::Uniform","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs","byte_start":33172,"byte_end":33227,"line_start":43,"line_end":43,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":679},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs","byte_start":34340,"byte_end":34346,"line_start":73,"line_end":73,"column_start":12,"column_end":18},"name":"Open01","qualname":"::distributions::float::Open01","value":"","parent":null,"children":[],"decl_id":null,"docs":" A distribution to sample floating point numbers uniformly in the open\n interval `(0, 1)`, i.e. not including either endpoint.","sig":null,"attributes":[{"value":"/ A distribution to sample floating point numbers uniformly in the open","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs","byte_start":33348,"byte_end":33421,"line_start":48,"line_end":48,"column_start":1,"column_end":74}},{"value":"/ interval `(0, 1)`, i.e. not including either endpoint.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs","byte_start":33422,"byte_end":33480,"line_start":49,"line_end":49,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs","byte_start":33481,"byte_end":33484,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ All values that can be generated are of the form `n * ε + ε/2`. For `f32`","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs","byte_start":33485,"byte_end":33564,"line_start":51,"line_end":51,"column_start":1,"column_end":78}},{"value":"/ the 23 most significant random bits of an `u32` are used, for `f64` 52 from","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs","byte_start":33565,"byte_end":33644,"line_start":52,"line_end":52,"column_start":1,"column_end":80}},{"value":"/ an `u64`. The conversion uses a transmute-based method.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs","byte_start":33645,"byte_end":33704,"line_start":53,"line_end":53,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs","byte_start":33705,"byte_end":33708,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ See also: [`Standard`] which samples from `[0, 1)`, [`OpenClosed01`]","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs","byte_start":33709,"byte_end":33781,"line_start":55,"line_end":55,"column_start":1,"column_end":73}},{"value":"/ which samples from `(0, 1]` and [`Uniform`] which samples from arbitrary","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs","byte_start":33782,"byte_end":33858,"line_start":56,"line_end":56,"column_start":1,"column_end":77}},{"value":"/ ranges.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs","byte_start":33859,"byte_end":33870,"line_start":57,"line_end":57,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs","byte_start":33871,"byte_end":33874,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs","byte_start":33875,"byte_end":33888,"line_start":59,"line_end":59,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs","byte_start":33889,"byte_end":33896,"line_start":60,"line_end":60,"column_start":1,"column_end":8}},{"value":"/ use rand::{thread_rng, Rng};","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs","byte_start":33897,"byte_end":33929,"line_start":61,"line_end":61,"column_start":1,"column_end":33}},{"value":"/ use rand::distributions::Open01;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs","byte_start":33930,"byte_end":33966,"line_start":62,"line_end":62,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs","byte_start":33967,"byte_end":33970,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ let val: f32 = thread_rng().sample(Open01);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs","byte_start":33971,"byte_end":34018,"line_start":64,"line_end":64,"column_start":1,"column_end":48}},{"value":"/ println!(\"f32 from (0, 1): {}\", val);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs","byte_start":34019,"byte_end":34060,"line_start":65,"line_end":65,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs","byte_start":34061,"byte_end":34068,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs","byte_start":34069,"byte_end":34072,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ [`Standard`]: crate::distributions::Standard","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs","byte_start":34073,"byte_end":34121,"line_start":68,"line_end":68,"column_start":1,"column_end":49}},{"value":"/ [`OpenClosed01`]: crate::distributions::OpenClosed01","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs","byte_start":34122,"byte_end":34178,"line_start":69,"line_end":69,"column_start":1,"column_end":57}},{"value":"/ [`Uniform`]: crate::distributions::uniform::Uniform","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs","byte_start":34179,"byte_end":34234,"line_start":70,"line_end":70,"column_start":1,"column_end":56}}]},{"kind":"Trait","id":{"krate":0,"index":104},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs","byte_start":34456,"byte_end":34465,"line_start":78,"line_end":78,"column_start":11,"column_end":20},"name":"IntoFloat","qualname":"::distributions::float::IntoFloat","value":"IntoFloat","parent":null,"children":[{"krate":0,"index":105},{"krate":0,"index":106}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":105},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs","byte_start":34477,"byte_end":34478,"line_start":79,"line_end":79,"column_start":10,"column_end":11},"name":"F","qualname":"::distributions::float::IntoFloat::F","value":"type F;","parent":{"krate":0,"index":104},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs","byte_start":34881,"byte_end":34905,"line_start":89,"line_end":89,"column_start":8,"column_end":32},"name":"into_float_with_exponent","qualname":"::distributions::float::IntoFloat::into_float_with_exponent","value":"pub fn into_float_with_exponent(Self, i32) -> Self::F","parent":{"krate":0,"index":104},"children":[],"decl_id":null,"docs":" Helper method to combine the fraction and a constant exponent into a\n float.","sig":null,"attributes":[{"value":"/ Helper method to combine the fraction and a constant exponent into a","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs","byte_start":34485,"byte_end":34557,"line_start":81,"line_end":81,"column_start":5,"column_end":77}},{"value":"/ float.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs","byte_start":34562,"byte_end":34572,"line_start":82,"line_end":82,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs","byte_start":34577,"byte_end":34580,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ Only the least significant bits of `self` may be set, 23 for `f32` and","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs","byte_start":34585,"byte_end":34659,"line_start":84,"line_end":84,"column_start":5,"column_end":79}},{"value":"/ 52 for `f64`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs","byte_start":34664,"byte_end":34681,"line_start":85,"line_end":85,"column_start":5,"column_end":22}},{"value":"/ The resulting value will fall in a range that depends on the exponent.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs","byte_start":34686,"byte_end":34760,"line_start":86,"line_end":86,"column_start":5,"column_end":79}},{"value":"/ As an example the range with exponent 0 will be","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs","byte_start":34765,"byte_end":34816,"line_start":87,"line_end":87,"column_start":5,"column_end":56}},{"value":"/ [2<sup>0</sup>..2<sup>1</sup>), which is [1..2).","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/float.rs","byte_start":34821,"byte_end":34873,"line_start":88,"line_end":88,"column_start":5,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":752},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs","byte_start":55581,"byte_end":55593,"line_start":69,"line_end":69,"column_start":12,"column_end":24},"name":"Alphanumeric","qualname":"::distributions::other::Alphanumeric","value":"","parent":null,"children":[],"decl_id":null,"docs":" Sample a `u8`, uniformly distributed over ASCII letters and numbers:\n a-z, A-Z and 0-9.","sig":null,"attributes":[{"value":"/ Sample a `u8`, uniformly distributed over ASCII letters and numbers:","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs","byte_start":53890,"byte_end":53962,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ a-z, A-Z and 0-9.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs","byte_start":53963,"byte_end":53984,"line_start":30,"line_end":30,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs","byte_start":53985,"byte_end":53988,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs","byte_start":53989,"byte_end":54002,"line_start":32,"line_end":32,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs","byte_start":54003,"byte_end":54006,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs","byte_start":54007,"byte_end":54014,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ use rand::{Rng, thread_rng};","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs","byte_start":54015,"byte_end":54047,"line_start":35,"line_end":35,"column_start":1,"column_end":33}},{"value":"/ use rand::distributions::Alphanumeric;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs","byte_start":54048,"byte_end":54090,"line_start":36,"line_end":36,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs","byte_start":54091,"byte_end":54094,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ let mut rng = thread_rng();","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs","byte_start":54095,"byte_end":54126,"line_start":38,"line_end":38,"column_start":1,"column_end":32}},{"value":"/ let chars: String = (0..7).map(|_| rng.sample(Alphanumeric) as char).collect();","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs","byte_start":54127,"byte_end":54210,"line_start":39,"line_end":39,"column_start":1,"column_end":84}},{"value":"/ println!(\"Random chars: {}\", chars);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs","byte_start":54211,"byte_end":54251,"line_start":40,"line_end":40,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs","byte_start":54252,"byte_end":54259,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs","byte_start":54260,"byte_end":54263,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ The [`DistString`] trait provides an easier method of generating","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs","byte_start":54264,"byte_end":54332,"line_start":43,"line_end":43,"column_start":1,"column_end":69}},{"value":"/ a random `String`, and offers more efficient allocation:","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs","byte_start":54333,"byte_end":54393,"line_start":44,"line_end":44,"column_start":1,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs","byte_start":54394,"byte_end":54401,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/ use rand::distributions::{Alphanumeric, DistString};","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs","byte_start":54402,"byte_end":54458,"line_start":46,"line_end":46,"column_start":1,"column_end":57}},{"value":"/ let string = Alphanumeric.sample_string(&mut rand::thread_rng(), 16);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs","byte_start":54459,"byte_end":54532,"line_start":47,"line_end":47,"column_start":1,"column_end":74}},{"value":"/ println!(\"Random string: {}\", string);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs","byte_start":54533,"byte_end":54575,"line_start":48,"line_end":48,"column_start":1,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs","byte_start":54576,"byte_end":54583,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs","byte_start":54584,"byte_end":54587,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # Passwords","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs","byte_start":54588,"byte_end":54603,"line_start":51,"line_end":51,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs","byte_start":54604,"byte_end":54607,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ Users sometimes ask whether it is safe to use a string of random characters","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs","byte_start":54608,"byte_end":54687,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"/ as a password. In principle, all RNGs in Rand implementing `CryptoRng` are","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs","byte_start":54688,"byte_end":54766,"line_start":54,"line_end":54,"column_start":1,"column_end":79}},{"value":"/ suitable as a source of randomness for generating passwords (if they are","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs","byte_start":54767,"byte_end":54843,"line_start":55,"line_end":55,"column_start":1,"column_end":77}},{"value":"/ properly seeded), but it is more conservative to only use randomness","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs","byte_start":54844,"byte_end":54916,"line_start":56,"line_end":56,"column_start":1,"column_end":73}},{"value":"/ directly from the operating system via the `getrandom` crate, or the","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs","byte_start":54917,"byte_end":54989,"line_start":57,"line_end":57,"column_start":1,"column_end":73}},{"value":"/ corresponding bindings of a crypto library.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs","byte_start":54990,"byte_end":55037,"line_start":58,"line_end":58,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs","byte_start":55038,"byte_end":55041,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ When generating passwords or keys, it is important to consider the threat","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs","byte_start":55042,"byte_end":55119,"line_start":60,"line_end":60,"column_start":1,"column_end":78}},{"value":"/ model and in some cases the memorability of the password. This is out of","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs","byte_start":55120,"byte_end":55196,"line_start":61,"line_end":61,"column_start":1,"column_end":77}},{"value":"/ scope of the Rand project, and therefore we defer to the following","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs","byte_start":55197,"byte_end":55267,"line_start":62,"line_end":62,"column_start":1,"column_end":71}},{"value":"/ references:","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs","byte_start":55268,"byte_end":55283,"line_start":63,"line_end":63,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs","byte_start":55284,"byte_end":55287,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ - [Wikipedia article on Password Strength](https://en.wikipedia.org/wiki/Password_strength)","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs","byte_start":55288,"byte_end":55383,"line_start":65,"line_end":65,"column_start":1,"column_end":96}},{"value":"/ - [Diceware for generating memorable passwords](https://en.wikipedia.org/wiki/Diceware)","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs","byte_start":55384,"byte_end":55475,"line_start":66,"line_end":66,"column_start":1,"column_end":92}}]},{"kind":"Struct","id":{"krate":0,"index":1071},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/slice.rs","byte_start":67266,"byte_end":67271,"line_start":65,"line_end":65,"column_start":12,"column_end":17},"name":"Slice","qualname":"::distributions::slice::Slice","value":"Slice {  }","parent":null,"children":[{"krate":0,"index":1074},{"krate":0,"index":1075}],"decl_id":null,"docs":" A distribution to sample items uniformly from a slice.","sig":null,"attributes":[{"value":"/ A distribution to sample items uniformly from a slice.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/slice.rs","byte_start":65301,"byte_end":65359,"line_start":11,"line_end":11,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/slice.rs","byte_start":65360,"byte_end":65363,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`Slice::new`] constructs a distribution referencing a slice and uniformly","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/slice.rs","byte_start":65364,"byte_end":65442,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/ samples references from the items in the slice. It may do extra work up","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/slice.rs","byte_start":65443,"byte_end":65518,"line_start":14,"line_end":14,"column_start":1,"column_end":76}},{"value":"/ front to make sampling of multiple values faster; if only one sample from","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/slice.rs","byte_start":65519,"byte_end":65596,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/ the slice is required, [`SliceRandom::choose`] can be more efficient.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/slice.rs","byte_start":65597,"byte_end":65670,"line_start":16,"line_end":16,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/slice.rs","byte_start":65671,"byte_end":65674,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Steps are taken to avoid bias which might be present in naive","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/slice.rs","byte_start":65675,"byte_end":65740,"line_start":18,"line_end":18,"column_start":1,"column_end":66}},{"value":"/ implementations; for example `slice[rng.gen() % slice.len()]` samples from","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/slice.rs","byte_start":65741,"byte_end":65819,"line_start":19,"line_end":19,"column_start":1,"column_end":79}},{"value":"/ the slice, but may be more likely to select numbers in the low range than","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/slice.rs","byte_start":65820,"byte_end":65897,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/ other values.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/slice.rs","byte_start":65898,"byte_end":65915,"line_start":21,"line_end":21,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/slice.rs","byte_start":65916,"byte_end":65919,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ This distribution samples with replacement; each sample is independent.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/slice.rs","byte_start":65920,"byte_end":65995,"line_start":23,"line_end":23,"column_start":1,"column_end":76}},{"value":"/ Sampling without replacement requires state to be retained, and therefore","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/slice.rs","byte_start":65996,"byte_end":66073,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/ cannot be handled by a distribution; you should instead consider methods","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/slice.rs","byte_start":66074,"byte_end":66150,"line_start":25,"line_end":25,"column_start":1,"column_end":77}},{"value":"/ on [`SliceRandom`], such as [`SliceRandom::choose_multiple`].","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/slice.rs","byte_start":66151,"byte_end":66216,"line_start":26,"line_end":26,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/slice.rs","byte_start":66217,"byte_end":66220,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/slice.rs","byte_start":66221,"byte_end":66234,"line_start":28,"line_end":28,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/slice.rs","byte_start":66235,"byte_end":66238,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/slice.rs","byte_start":66239,"byte_end":66246,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ use rand::Rng;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/slice.rs","byte_start":66247,"byte_end":66265,"line_start":31,"line_end":31,"column_start":1,"column_end":19}},{"value":"/ use rand::distributions::Slice;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/slice.rs","byte_start":66266,"byte_end":66301,"line_start":32,"line_end":32,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/slice.rs","byte_start":66302,"byte_end":66305,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ let vowels = ['a', 'e', 'i', 'o', 'u'];","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/slice.rs","byte_start":66306,"byte_end":66349,"line_start":34,"line_end":34,"column_start":1,"column_end":44}},{"value":"/ let vowels_dist = Slice::new(&vowels).unwrap();","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/slice.rs","byte_start":66350,"byte_end":66401,"line_start":35,"line_end":35,"column_start":1,"column_end":52}},{"value":"/ let rng = rand::thread_rng();","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/slice.rs","byte_start":66402,"byte_end":66435,"line_start":36,"line_end":36,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/slice.rs","byte_start":66436,"byte_end":66439,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ // build a string of 10 vowels","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/slice.rs","byte_start":66440,"byte_end":66474,"line_start":38,"line_end":38,"column_start":1,"column_end":35}},{"value":"/ let vowel_string: String = rng","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/slice.rs","byte_start":66475,"byte_end":66509,"line_start":39,"line_end":39,"column_start":1,"column_end":35}},{"value":"/     .sample_iter(&vowels_dist)","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/slice.rs","byte_start":66510,"byte_end":66544,"line_start":40,"line_end":40,"column_start":1,"column_end":35}},{"value":"/     .take(10)","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/slice.rs","byte_start":66545,"byte_end":66562,"line_start":41,"line_end":41,"column_start":1,"column_end":18}},{"value":"/     .collect();","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/slice.rs","byte_start":66563,"byte_end":66582,"line_start":42,"line_end":42,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/slice.rs","byte_start":66583,"byte_end":66586,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ println!(\"{}\", vowel_string);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/slice.rs","byte_start":66587,"byte_end":66620,"line_start":44,"line_end":44,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(vowel_string.len(), 10);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/slice.rs","byte_start":66621,"byte_end":66660,"line_start":45,"line_end":45,"column_start":1,"column_end":40}},{"value":"/ assert!(vowel_string.chars().all(|c| vowels.contains(&c)));","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/slice.rs","byte_start":66661,"byte_end":66724,"line_start":46,"line_end":46,"column_start":1,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/slice.rs","byte_start":66725,"byte_end":66732,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/slice.rs","byte_start":66733,"byte_end":66736,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ For a single sample, [`SliceRandom::choose`][crate::seq::SliceRandom::choose]","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/slice.rs","byte_start":66737,"byte_end":66818,"line_start":49,"line_end":49,"column_start":1,"column_end":82}},{"value":"/ may be preferred:","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/slice.rs","byte_start":66819,"byte_end":66840,"line_start":50,"line_end":50,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/slice.rs","byte_start":66841,"byte_end":66844,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/slice.rs","byte_start":66845,"byte_end":66852,"line_start":52,"line_end":52,"column_start":1,"column_end":8}},{"value":"/ use rand::seq::SliceRandom;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/slice.rs","byte_start":66853,"byte_end":66884,"line_start":53,"line_end":53,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/slice.rs","byte_start":66885,"byte_end":66888,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ let vowels = ['a', 'e', 'i', 'o', 'u'];","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/slice.rs","byte_start":66889,"byte_end":66932,"line_start":55,"line_end":55,"column_start":1,"column_end":44}},{"value":"/ let mut rng = rand::thread_rng();","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/slice.rs","byte_start":66933,"byte_end":66970,"line_start":56,"line_end":56,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/slice.rs","byte_start":66971,"byte_end":66974,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ println!(\"{}\", vowels.choose(&mut rng).unwrap())","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/slice.rs","byte_start":66975,"byte_end":67027,"line_start":58,"line_end":58,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/slice.rs","byte_start":67028,"byte_end":67035,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/slice.rs","byte_start":67036,"byte_end":67039,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ [`SliceRandom`]: crate::seq::SliceRandom","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/slice.rs","byte_start":67040,"byte_end":67084,"line_start":61,"line_end":61,"column_start":1,"column_end":45}},{"value":"/ [`SliceRandom::choose`]: crate::seq::SliceRandom::choose","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/slice.rs","byte_start":67085,"byte_end":67145,"line_start":62,"line_end":62,"column_start":1,"column_end":61}},{"value":"/ [`SliceRandom::choose_multiple`]: crate::seq::SliceRandom::choose_multiple","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/slice.rs","byte_start":67146,"byte_end":67224,"line_start":63,"line_end":63,"column_start":1,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/slice.rs","byte_start":67492,"byte_end":67495,"line_start":73,"line_end":73,"column_start":12,"column_end":15},"name":"new","qualname":"<Slice>::new","value":"pub fn new(&'a [T]) -> Result<Self, EmptySlice>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Slice` instance which samples uniformly from the slice.\n Returns `Err` if the slice is empty.\n","sig":null,"attributes":[{"value":"/ Create a new `Slice` instance which samples uniformly from the slice.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/slice.rs","byte_start":67362,"byte_end":67435,"line_start":71,"line_end":71,"column_start":5,"column_end":78}},{"value":"/ Returns `Err` if the slice is empty.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/slice.rs","byte_start":67440,"byte_end":67480,"line_start":72,"line_end":72,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":1087},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/slice.rs","byte_start":68454,"byte_end":68464,"line_start":105,"line_end":105,"column_start":12,"column_end":22},"name":"EmptySlice","qualname":"::distributions::slice::EmptySlice","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error type indicating that a [`Slice`] distribution was improperly\n constructed with an empty slice.\n","sig":null,"attributes":[{"value":"/ Error type indicating that a [`Slice`] distribution was improperly","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/slice.rs","byte_start":68305,"byte_end":68375,"line_start":102,"line_end":102,"column_start":1,"column_end":71}},{"value":"/ constructed with an empty slice.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/slice.rs","byte_start":68376,"byte_end":68412,"line_start":103,"line_end":103,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":225},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs","byte_start":69269,"byte_end":69275,"line_start":15,"line_end":15,"column_start":10,"column_end":16},"name":"Output","qualname":"::distributions::utils::WideningMultiply::Output","value":"type Output;","parent":{"krate":0,"index":223},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":234},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs","byte_start":76192,"byte_end":76196,"line_start":218,"line_end":218,"column_start":10,"column_end":14},"name":"Mask","qualname":"::distributions::utils::FloatSIMDUtils::Mask","value":"type Mask;","parent":{"krate":0,"index":230},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":239},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs","byte_start":76711,"byte_end":76715,"line_start":230,"line_end":230,"column_start":10,"column_end":14},"name":"UInt","qualname":"::distributions::utils::FloatSIMDUtils::UInt","value":"type UInt;","parent":{"krate":0,"index":230},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":259},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":11195,"byte_end":11208,"line_start":107,"line_end":107,"column_start":9,"column_end":22},"name":"hidden_export","qualname":"::distributions::hidden_export","value":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","parent":null,"children":[{"krate":0,"index":260}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":263},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"uniform","qualname":"::distributions::uniform","value":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","parent":null,"children":[{"krate":0,"index":264},{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":271},{"krate":0,"index":274},{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":281},{"krate":0,"index":284},{"krate":0,"index":287},{"krate":0,"index":290},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":297},{"krate":0,"index":300},{"krate":0,"index":1145},{"krate":0,"index":1149},{"krate":0,"index":1152},{"krate":0,"index":1154},{"krate":0,"index":1157},{"krate":0,"index":1159},{"krate":0,"index":303},{"krate":0,"index":311},{"krate":0,"index":315},{"krate":0,"index":317},{"krate":0,"index":335},{"krate":0,"index":338},{"krate":0,"index":341},{"krate":0,"index":344},{"krate":0,"index":347},{"krate":0,"index":351},{"krate":0,"index":356},{"krate":0,"index":361},{"krate":0,"index":1163},{"krate":0,"index":1168},{"krate":0,"index":1171},{"krate":0,"index":1173},{"krate":0,"index":1176},{"krate":0,"index":1178},{"krate":0,"index":366},{"krate":0,"index":1182},{"krate":0,"index":1184},{"krate":0,"index":1202},{"krate":0,"index":1204},{"krate":0,"index":1222},{"krate":0,"index":1224},{"krate":0,"index":1242},{"krate":0,"index":1244},{"krate":0,"index":1262},{"krate":0,"index":1264},{"krate":0,"index":1282},{"krate":0,"index":1284},{"krate":0,"index":1302},{"krate":0,"index":1304},{"krate":0,"index":1322},{"krate":0,"index":1324},{"krate":0,"index":1342},{"krate":0,"index":1344},{"krate":0,"index":1362},{"krate":0,"index":1364},{"krate":0,"index":1382},{"krate":0,"index":1384},{"krate":0,"index":1402},{"krate":0,"index":1404},{"krate":0,"index":367},{"krate":0,"index":1422},{"krate":0,"index":1424},{"krate":0,"index":1426},{"krate":0,"index":1427},{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":372},{"krate":0,"index":1429},{"krate":0,"index":1433},{"krate":0,"index":1436},{"krate":0,"index":1438},{"krate":0,"index":1441},{"krate":0,"index":1443},{"krate":0,"index":382},{"krate":0,"index":1447},{"krate":0,"index":1449},{"krate":0,"index":1463},{"krate":0,"index":1465},{"krate":0,"index":1479},{"krate":0,"index":1482},{"krate":0,"index":1484},{"krate":0,"index":1485},{"krate":0,"index":1487},{"krate":0,"index":1497},{"krate":0,"index":1499},{"krate":0,"index":1500},{"krate":0,"index":383},{"krate":0,"index":385}],"decl_id":null,"docs":" A distribution uniformly sampling numbers within a given range.","sig":null,"attributes":[{"value":"/ A distribution uniformly sampling numbers within a given range.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":82793,"byte_end":82860,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":82861,"byte_end":82864,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`Uniform`] is the standard distribution to sample uniformly from a range;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":82865,"byte_end":82943,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/ e.g. `Uniform::new_inclusive(1, 6)` can sample integers from 1 to 6, like a","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":82944,"byte_end":83023,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ standard die. [`Rng::gen_range`] supports any type supported by","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":83024,"byte_end":83091,"line_start":14,"line_end":14,"column_start":1,"column_end":68}},{"value":"/ [`Uniform`].","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":83092,"byte_end":83108,"line_start":15,"line_end":15,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":83109,"byte_end":83112,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This distribution is provided with support for several primitive types","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":83113,"byte_end":83187,"line_start":17,"line_end":17,"column_start":1,"column_end":75}},{"value":"/ (all integer and floating-point types) as well as [`std::time::Duration`],","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":83188,"byte_end":83266,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ and supports extension to user-defined types via a type-specific *back-end*","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":83267,"byte_end":83346,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"/ implementation.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":83347,"byte_end":83366,"line_start":20,"line_end":20,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":83367,"byte_end":83370,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ The types [`UniformInt`], [`UniformFloat`] and [`UniformDuration`] are the","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":83371,"byte_end":83449,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ back-ends supporting sampling from primitive integer and floating-point","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":83450,"byte_end":83525,"line_start":23,"line_end":23,"column_start":1,"column_end":76}},{"value":"/ ranges as well as from [`std::time::Duration`]; these types do not normally","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":83526,"byte_end":83605,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ need to be used directly (unless implementing a derived back-end).","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":83606,"byte_end":83676,"line_start":25,"line_end":25,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":83677,"byte_end":83680,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Example usage","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":83681,"byte_end":83700,"line_start":27,"line_end":27,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":83701,"byte_end":83704,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":83705,"byte_end":83712,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ use rand::{Rng, thread_rng};","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":83713,"byte_end":83745,"line_start":30,"line_end":30,"column_start":1,"column_end":33}},{"value":"/ use rand::distributions::Uniform;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":83746,"byte_end":83783,"line_start":31,"line_end":31,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":83784,"byte_end":83787,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let mut rng = thread_rng();","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":83788,"byte_end":83819,"line_start":33,"line_end":33,"column_start":1,"column_end":32}},{"value":"/ let side = Uniform::new(-10.0, 10.0);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":83820,"byte_end":83861,"line_start":34,"line_end":34,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":83862,"byte_end":83865,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ // sample between 1 and 10 points","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":83866,"byte_end":83903,"line_start":36,"line_end":36,"column_start":1,"column_end":38}},{"value":"/ for _ in 0..rng.gen_range(1..=10) {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":83904,"byte_end":83943,"line_start":37,"line_end":37,"column_start":1,"column_end":40}},{"value":"/     // sample a point from the square with sides -10 - 10 in two dimensions","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":83944,"byte_end":84023,"line_start":38,"line_end":38,"column_start":1,"column_end":80}},{"value":"/     let (x, y) = (rng.sample(side), rng.sample(side));","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":84024,"byte_end":84082,"line_start":39,"line_end":39,"column_start":1,"column_end":59}},{"value":"/     println!(\"Point: {}, {}\", x, y);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":84083,"byte_end":84123,"line_start":40,"line_end":40,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":84124,"byte_end":84129,"line_start":41,"line_end":41,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":84130,"byte_end":84137,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":84138,"byte_end":84141,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ # Extending `Uniform` to support a custom type","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":84142,"byte_end":84192,"line_start":44,"line_end":44,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":84193,"byte_end":84196,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ To extend [`Uniform`] to support your own types, write a back-end which","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":84197,"byte_end":84272,"line_start":46,"line_end":46,"column_start":1,"column_end":76}},{"value":"/ implements the [`UniformSampler`] trait, then implement the [`SampleUniform`]","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":84273,"byte_end":84354,"line_start":47,"line_end":47,"column_start":1,"column_end":82}},{"value":"/ helper trait to \"register\" your back-end. See the `MyF32` example below.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":84355,"byte_end":84431,"line_start":48,"line_end":48,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":84432,"byte_end":84435,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ At a minimum, the back-end needs to store any parameters needed for sampling","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":84436,"byte_end":84516,"line_start":50,"line_end":50,"column_start":1,"column_end":81}},{"value":"/ (e.g. the target range) and implement `new`, `new_inclusive` and `sample`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":84517,"byte_end":84595,"line_start":51,"line_end":51,"column_start":1,"column_end":79}},{"value":"/ Those methods should include an assert to check the range is valid (i.e.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":84596,"byte_end":84672,"line_start":52,"line_end":52,"column_start":1,"column_end":77}},{"value":"/ `low < high`). The example below merely wraps another back-end.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":84673,"byte_end":84740,"line_start":53,"line_end":53,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":84741,"byte_end":84744,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ The `new`, `new_inclusive` and `sample_single` functions use arguments of","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":84745,"byte_end":84822,"line_start":55,"line_end":55,"column_start":1,"column_end":78}},{"value":"/ type SampleBorrow<X> in order to support passing in values by reference or","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":84823,"byte_end":84901,"line_start":56,"line_end":56,"column_start":1,"column_end":79}},{"value":"/ by value. In the implementation of these functions, you can choose to","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":84902,"byte_end":84975,"line_start":57,"line_end":57,"column_start":1,"column_end":74}},{"value":"/ simply use the reference returned by [`SampleBorrow::borrow`], or you can choose","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":84976,"byte_end":85060,"line_start":58,"line_end":58,"column_start":1,"column_end":85}},{"value":"/ to copy or clone the value, whatever is appropriate for your type.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":85061,"byte_end":85131,"line_start":59,"line_end":59,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":85132,"byte_end":85135,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":85136,"byte_end":85143,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"/ use rand::prelude::*;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":85144,"byte_end":85169,"line_start":62,"line_end":62,"column_start":1,"column_end":26}},{"value":"/ use rand::distributions::uniform::{Uniform, SampleUniform,","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":85170,"byte_end":85232,"line_start":63,"line_end":63,"column_start":1,"column_end":63}},{"value":"/         UniformSampler, UniformFloat, SampleBorrow};","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":85233,"byte_end":85289,"line_start":64,"line_end":64,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":85290,"byte_end":85293,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ struct MyF32(f32);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":85294,"byte_end":85316,"line_start":66,"line_end":66,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":85317,"byte_end":85320,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ #[derive(Clone, Copy, Debug)]","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":85321,"byte_end":85354,"line_start":68,"line_end":68,"column_start":1,"column_end":34}},{"value":"/ struct UniformMyF32(UniformFloat<f32>);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":85355,"byte_end":85398,"line_start":69,"line_end":69,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":85399,"byte_end":85402,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ impl UniformSampler for UniformMyF32 {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":85403,"byte_end":85445,"line_start":71,"line_end":71,"column_start":1,"column_end":43}},{"value":"/     type X = MyF32;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":85446,"byte_end":85469,"line_start":72,"line_end":72,"column_start":1,"column_end":24}},{"value":"/     fn new<B1, B2>(low: B1, high: B2) -> Self","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":85470,"byte_end":85519,"line_start":73,"line_end":73,"column_start":1,"column_end":50}},{"value":"/         where B1: SampleBorrow<Self::X> + Sized,","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":85520,"byte_end":85572,"line_start":74,"line_end":74,"column_start":1,"column_end":53}},{"value":"/               B2: SampleBorrow<Self::X> + Sized","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":85573,"byte_end":85624,"line_start":75,"line_end":75,"column_start":1,"column_end":52}},{"value":"/     {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":85625,"byte_end":85634,"line_start":76,"line_end":76,"column_start":1,"column_end":10}},{"value":"/         UniformMyF32(UniformFloat::<f32>::new(low.borrow().0, high.borrow().0))","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":85635,"byte_end":85718,"line_start":77,"line_end":77,"column_start":1,"column_end":84}},{"value":"/     }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":85719,"byte_end":85728,"line_start":78,"line_end":78,"column_start":1,"column_end":10}},{"value":"/     fn new_inclusive<B1, B2>(low: B1, high: B2) -> Self","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":85729,"byte_end":85788,"line_start":79,"line_end":79,"column_start":1,"column_end":60}},{"value":"/         where B1: SampleBorrow<Self::X> + Sized,","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":85789,"byte_end":85841,"line_start":80,"line_end":80,"column_start":1,"column_end":53}},{"value":"/               B2: SampleBorrow<Self::X> + Sized","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":85842,"byte_end":85893,"line_start":81,"line_end":81,"column_start":1,"column_end":52}},{"value":"/     {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":85894,"byte_end":85903,"line_start":82,"line_end":82,"column_start":1,"column_end":10}},{"value":"/         UniformMyF32(UniformFloat::<f32>::new_inclusive(","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":85904,"byte_end":85964,"line_start":83,"line_end":83,"column_start":1,"column_end":61}},{"value":"/             low.borrow().0,","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":85965,"byte_end":85996,"line_start":84,"line_end":84,"column_start":1,"column_end":32}},{"value":"/             high.borrow().0,","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":85997,"byte_end":86029,"line_start":85,"line_end":85,"column_start":1,"column_end":33}},{"value":"/         ))","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":86030,"byte_end":86044,"line_start":86,"line_end":86,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":86045,"byte_end":86054,"line_start":87,"line_end":87,"column_start":1,"column_end":10}},{"value":"/     fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> Self::X {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":86055,"byte_end":86122,"line_start":88,"line_end":88,"column_start":1,"column_end":68}},{"value":"/         MyF32(self.0.sample(rng))","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":86123,"byte_end":86160,"line_start":89,"line_end":89,"column_start":1,"column_end":38}},{"value":"/     }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":86161,"byte_end":86170,"line_start":90,"line_end":90,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":86171,"byte_end":86176,"line_start":91,"line_end":91,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":86177,"byte_end":86180,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ impl SampleUniform for MyF32 {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":86181,"byte_end":86215,"line_start":93,"line_end":93,"column_start":1,"column_end":35}},{"value":"/     type Sampler = UniformMyF32;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":86216,"byte_end":86252,"line_start":94,"line_end":94,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":86253,"byte_end":86258,"line_start":95,"line_end":95,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":86259,"byte_end":86262,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ let (low, high) = (MyF32(17.0f32), MyF32(22.0f32));","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":86263,"byte_end":86318,"line_start":97,"line_end":97,"column_start":1,"column_end":56}},{"value":"/ let uniform = Uniform::new(low, high);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":86319,"byte_end":86361,"line_start":98,"line_end":98,"column_start":1,"column_end":43}},{"value":"/ let x = uniform.sample(&mut thread_rng());","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":86362,"byte_end":86408,"line_start":99,"line_end":99,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":86409,"byte_end":86416,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":86417,"byte_end":86420,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ [`SampleUniform`]: crate::distributions::uniform::SampleUniform","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":86421,"byte_end":86488,"line_start":102,"line_end":102,"column_start":1,"column_end":68}},{"value":"/ [`UniformSampler`]: crate::distributions::uniform::UniformSampler","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":86489,"byte_end":86558,"line_start":103,"line_end":103,"column_start":1,"column_end":70}},{"value":"/ [`UniformInt`]: crate::distributions::uniform::UniformInt","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":86559,"byte_end":86620,"line_start":104,"line_end":104,"column_start":1,"column_end":62}},{"value":"/ [`UniformFloat`]: crate::distributions::uniform::UniformFloat","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":86621,"byte_end":86686,"line_start":105,"line_end":105,"column_start":1,"column_end":66}},{"value":"/ [`UniformDuration`]: crate::distributions::uniform::UniformDuration","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":86687,"byte_end":86758,"line_start":106,"line_end":106,"column_start":1,"column_end":72}},{"value":"/ [`SampleBorrow::borrow`]: crate::distributions::uniform::SampleBorrow::borrow","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":86759,"byte_end":86840,"line_start":107,"line_end":107,"column_start":1,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":1145},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":89549,"byte_end":89556,"line_start":179,"line_end":179,"column_start":12,"column_end":19},"name":"Uniform","qualname":"::distributions::uniform::Uniform","value":"","parent":null,"children":[],"decl_id":null,"docs":" Sample values uniformly between two bounds.","sig":null,"attributes":[{"value":"/ Sample values uniformly between two bounds.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":87380,"byte_end":87427,"line_start":126,"line_end":126,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":87428,"byte_end":87431,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ [`Uniform::new`] and [`Uniform::new_inclusive`] construct a uniform","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":87432,"byte_end":87503,"line_start":128,"line_end":128,"column_start":1,"column_end":72}},{"value":"/ distribution sampling from the given range; these functions may do extra","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":87504,"byte_end":87580,"line_start":129,"line_end":129,"column_start":1,"column_end":77}},{"value":"/ work up front to make sampling of multiple values faster. If only one sample","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":87581,"byte_end":87661,"line_start":130,"line_end":130,"column_start":1,"column_end":81}},{"value":"/ from the range is required, [`Rng::gen_range`] can be more efficient.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":87662,"byte_end":87735,"line_start":131,"line_end":131,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":87736,"byte_end":87739,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ When sampling from a constant range, many calculations can happen at","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":87740,"byte_end":87812,"line_start":133,"line_end":133,"column_start":1,"column_end":73}},{"value":"/ compile-time and all methods should be fast; for floating-point ranges and","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":87813,"byte_end":87891,"line_start":134,"line_end":134,"column_start":1,"column_end":79}},{"value":"/ the full range of integer types this should have comparable performance to","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":87892,"byte_end":87970,"line_start":135,"line_end":135,"column_start":1,"column_end":79}},{"value":"/ the `Standard` distribution.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":87971,"byte_end":88003,"line_start":136,"line_end":136,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":88004,"byte_end":88007,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ Steps are taken to avoid bias which might be present in naive","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":88008,"byte_end":88073,"line_start":138,"line_end":138,"column_start":1,"column_end":66}},{"value":"/ implementations; for example `rng.gen::<u8>() % 170` samples from the range","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":88074,"byte_end":88153,"line_start":139,"line_end":139,"column_start":1,"column_end":80}},{"value":"/ `[0, 169]` but is twice as likely to select numbers less than 85 than other","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":88154,"byte_end":88233,"line_start":140,"line_end":140,"column_start":1,"column_end":80}},{"value":"/ values. Further, the implementations here give more weight to the high-bits","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":88234,"byte_end":88313,"line_start":141,"line_end":141,"column_start":1,"column_end":80}},{"value":"/ generated by the RNG than the low bits, since with some RNGs the low-bits","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":88314,"byte_end":88391,"line_start":142,"line_end":142,"column_start":1,"column_end":78}},{"value":"/ are of lower quality than the high bits.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":88392,"byte_end":88436,"line_start":143,"line_end":143,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":88437,"byte_end":88440,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ Implementations must sample in `[low, high)` range for","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":88441,"byte_end":88499,"line_start":145,"line_end":145,"column_start":1,"column_end":59}},{"value":"/ `Uniform::new(low, high)`, i.e., excluding `high`. In particular, care must","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":88500,"byte_end":88579,"line_start":146,"line_end":146,"column_start":1,"column_end":80}},{"value":"/ be taken to ensure that rounding never results values `< low` or `>= high`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":88580,"byte_end":88659,"line_start":147,"line_end":147,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":88660,"byte_end":88663,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":88664,"byte_end":88677,"line_start":149,"line_end":149,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":88678,"byte_end":88681,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":88682,"byte_end":88689,"line_start":151,"line_end":151,"column_start":1,"column_end":8}},{"value":"/ use rand::distributions::{Distribution, Uniform};","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":88690,"byte_end":88743,"line_start":152,"line_end":152,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":88744,"byte_end":88747,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ let between = Uniform::from(10..10000);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":88748,"byte_end":88791,"line_start":154,"line_end":154,"column_start":1,"column_end":44}},{"value":"/ let mut rng = rand::thread_rng();","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":88792,"byte_end":88829,"line_start":155,"line_end":155,"column_start":1,"column_end":38}},{"value":"/ let mut sum = 0;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":88830,"byte_end":88850,"line_start":156,"line_end":156,"column_start":1,"column_end":21}},{"value":"/ for _ in 0..1000 {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":88851,"byte_end":88873,"line_start":157,"line_end":157,"column_start":1,"column_end":23}},{"value":"/     sum += between.sample(&mut rng);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":88874,"byte_end":88914,"line_start":158,"line_end":158,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":88915,"byte_end":88920,"line_start":159,"line_end":159,"column_start":1,"column_end":6}},{"value":"/ println!(\"{}\", sum);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":88921,"byte_end":88945,"line_start":160,"line_end":160,"column_start":1,"column_end":25}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":88946,"byte_end":88953,"line_start":161,"line_end":161,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":88954,"byte_end":88957,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ For a single sample, [`Rng::gen_range`] may be preferred:","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":88958,"byte_end":89019,"line_start":163,"line_end":163,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":89020,"byte_end":89023,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":89024,"byte_end":89031,"line_start":165,"line_end":165,"column_start":1,"column_end":8}},{"value":"/ use rand::Rng;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":89032,"byte_end":89050,"line_start":166,"line_end":166,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":89051,"byte_end":89054,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ let mut rng = rand::thread_rng();","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":89055,"byte_end":89092,"line_start":168,"line_end":168,"column_start":1,"column_end":38}},{"value":"/ println!(\"{}\", rng.gen_range(0..10));","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":89093,"byte_end":89134,"line_start":169,"line_end":169,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":89135,"byte_end":89142,"line_start":170,"line_end":170,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":89143,"byte_end":89146,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ [`new`]: Uniform::new","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":89147,"byte_end":89172,"line_start":172,"line_end":172,"column_start":1,"column_end":26}},{"value":"/ [`new_inclusive`]: Uniform::new_inclusive","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":89173,"byte_end":89218,"line_start":173,"line_end":173,"column_start":1,"column_end":46}},{"value":"/ [`Rng::gen_range`]: Rng::gen_range","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":89219,"byte_end":89257,"line_start":174,"line_end":174,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":89792,"byte_end":89795,"line_start":184,"line_end":184,"column_start":12,"column_end":15},"name":"new","qualname":"<Uniform<X>>::new","value":"pub fn new<B1, B2>(B1, B2) -> Uniform<X> where B1: SampleBorrow<X> + Sized,\nB2: SampleBorrow<X> + Sized","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Uniform` instance which samples uniformly from the half\n open range `[low, high)` (excluding `high`). Panics if `low >= high`.\n","sig":null,"attributes":[{"value":"/ Create a new `Uniform` instance which samples uniformly from the half","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":89629,"byte_end":89702,"line_start":182,"line_end":182,"column_start":5,"column_end":78}},{"value":"/ open range `[low, high)` (excluding `high`). Panics if `low >= high`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":89707,"byte_end":89780,"line_start":183,"line_end":183,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":90134,"byte_end":90147,"line_start":194,"line_end":194,"column_start":12,"column_end":25},"name":"new_inclusive","qualname":"<Uniform<X>>::new_inclusive","value":"pub fn new_inclusive<B1, B2>(B1, B2) -> Uniform<X> where B1: SampleBorrow<X> +\nSized, B2: SampleBorrow<X> + Sized","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Uniform` instance which samples uniformly from the closed\n range `[low, high]` (inclusive). Panics if `low > high`.\n","sig":null,"attributes":[{"value":"/ Create a new `Uniform` instance which samples uniformly from the closed","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":89982,"byte_end":90057,"line_start":192,"line_end":192,"column_start":5,"column_end":80}},{"value":"/ range `[low, high]` (inclusive). Panics if `low > high`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":90062,"byte_end":90122,"line_start":193,"line_end":193,"column_start":5,"column_end":65}}]},{"kind":"Trait","id":{"krate":0,"index":315},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":90793,"byte_end":90806,"line_start":216,"line_end":216,"column_start":11,"column_end":24},"name":"SampleUniform","qualname":"::distributions::uniform::SampleUniform","value":"SampleUniform: Sized","parent":null,"children":[{"krate":0,"index":316}],"decl_id":null,"docs":" Helper trait for creating objects using the correct implementation of\n [`UniformSampler`] for the sampling type.","sig":null,"attributes":[{"value":"/ Helper trait for creating objects using the correct implementation of","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":90492,"byte_end":90565,"line_start":209,"line_end":209,"column_start":1,"column_end":74}},{"value":"/ [`UniformSampler`] for the sampling type.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":90566,"byte_end":90611,"line_start":210,"line_end":210,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":90612,"byte_end":90615,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ See the [module documentation] on how to implement [`Uniform`] range","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":90616,"byte_end":90688,"line_start":212,"line_end":212,"column_start":1,"column_end":73}},{"value":"/ sampling for a custom type.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":90689,"byte_end":90720,"line_start":213,"line_end":213,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":90721,"byte_end":90724,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ [module documentation]: crate::distributions::uniform","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":90725,"byte_end":90782,"line_start":215,"line_end":215,"column_start":1,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":316},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":90890,"byte_end":90897,"line_start":218,"line_end":218,"column_start":10,"column_end":17},"name":"Sampler","qualname":"::distributions::uniform::SampleUniform::Sampler","value":"type Sampler: UniformSampler<X = Self>;","parent":{"krate":0,"index":315},"children":[],"decl_id":null,"docs":" The `UniformSampler` implementation supporting type `X`.\n","sig":null,"attributes":[{"value":"/ The `UniformSampler` implementation supporting type `X`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":90820,"byte_end":90880,"line_start":217,"line_end":217,"column_start":5,"column_end":65}}]},{"kind":"Trait","id":{"krate":0,"index":317},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":91372,"byte_end":91386,"line_start":231,"line_end":231,"column_start":11,"column_end":25},"name":"UniformSampler","qualname":"::distributions::uniform::UniformSampler","value":"UniformSampler: Sized","parent":null,"children":[{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":322},{"krate":0,"index":325},{"krate":0,"index":327},{"krate":0,"index":331}],"decl_id":null,"docs":" Helper trait handling actual uniform sampling.","sig":null,"attributes":[{"value":"/ Helper trait handling actual uniform sampling.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":90928,"byte_end":90978,"line_start":221,"line_end":221,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":90979,"byte_end":90982,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"/ See the [module documentation] on how to implement [`Uniform`] range","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":90983,"byte_end":91055,"line_start":223,"line_end":223,"column_start":1,"column_end":73}},{"value":"/ sampling for a custom type.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":91056,"byte_end":91087,"line_start":224,"line_end":224,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":91088,"byte_end":91091,"line_start":225,"line_end":225,"column_start":1,"column_end":4}},{"value":"/ Implementation of [`sample_single`] is optional, and is only useful when","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":91092,"byte_end":91168,"line_start":226,"line_end":226,"column_start":1,"column_end":77}},{"value":"/ the implementation can be faster than `Self::new(low, high).sample(rng)`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":91169,"byte_end":91246,"line_start":227,"line_end":227,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":91247,"byte_end":91250,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ [module documentation]: crate::distributions::uniform","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":91251,"byte_end":91308,"line_start":229,"line_end":229,"column_start":1,"column_end":58}},{"value":"/ [`sample_single`]: UniformSampler::sample_single","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":91309,"byte_end":91361,"line_start":230,"line_end":230,"column_start":1,"column_end":53}}]},{"kind":"Type","id":{"krate":0,"index":318},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":91454,"byte_end":91455,"line_start":233,"line_end":233,"column_start":10,"column_end":11},"name":"X","qualname":"::distributions::uniform::UniformSampler::X","value":"type X;","parent":{"krate":0,"index":317},"children":[],"decl_id":null,"docs":" The type sampled by this implementation.\n","sig":null,"attributes":[{"value":"/ The type sampled by this implementation.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":91400,"byte_end":91444,"line_start":232,"line_end":232,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":319},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":91718,"byte_end":91721,"line_start":240,"line_end":240,"column_start":8,"column_end":11},"name":"new","qualname":"::distributions::uniform::UniformSampler::new","value":"pub fn new<B1, B2>(B1, B2) -> Self where B1: SampleBorrow<Self::X> + Sized,\nB2: SampleBorrow<Self::X> + Sized","parent":{"krate":0,"index":317},"children":[],"decl_id":null,"docs":" Construct self, with inclusive lower bound and exclusive upper bound\n `[low, high)`.","sig":null,"attributes":[{"value":"/ Construct self, with inclusive lower bound and exclusive upper bound","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":91462,"byte_end":91534,"line_start":235,"line_end":235,"column_start":5,"column_end":77}},{"value":"/ `[low, high)`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":91539,"byte_end":91557,"line_start":236,"line_end":236,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":91562,"byte_end":91565,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Usually users should not call this directly but instead use","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":91570,"byte_end":91633,"line_start":238,"line_end":238,"column_start":5,"column_end":68}},{"value":"/ `Uniform::new`, which asserts that `low < high` before calling this.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":91638,"byte_end":91710,"line_start":239,"line_end":239,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":92094,"byte_end":92107,"line_start":250,"line_end":250,"column_start":8,"column_end":21},"name":"new_inclusive","qualname":"::distributions::uniform::UniformSampler::new_inclusive","value":"pub fn new_inclusive<B1, B2>(B1, B2) -> Self where B1: SampleBorrow<Self::X> +\nSized, B2: SampleBorrow<Self::X> + Sized","parent":{"krate":0,"index":317},"children":[],"decl_id":null,"docs":" Construct self, with inclusive bounds `[low, high]`.","sig":null,"attributes":[{"value":"/ Construct self, with inclusive bounds `[low, high]`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":91858,"byte_end":91914,"line_start":245,"line_end":245,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":91919,"byte_end":91922,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ Usually users should not call this directly but instead use","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":91927,"byte_end":91990,"line_start":247,"line_end":247,"column_start":5,"column_end":68}},{"value":"/ `Uniform::new_inclusive`, which asserts that `low <= high` before","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":91995,"byte_end":92064,"line_start":248,"line_end":248,"column_start":5,"column_end":74}},{"value":"/ calling this.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":92069,"byte_end":92086,"line_start":249,"line_end":249,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":92271,"byte_end":92277,"line_start":256,"line_end":256,"column_start":8,"column_end":14},"name":"sample","qualname":"::distributions::uniform::UniformSampler::sample","value":"pub fn sample<R: Rng + ?Sized>(&Self, &mut R) -> Self::X","parent":{"krate":0,"index":317},"children":[],"decl_id":null,"docs":" Sample a value.\n","sig":null,"attributes":[{"value":"/ Sample a value.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":92244,"byte_end":92263,"line_start":255,"line_end":255,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":93252,"byte_end":93265,"line_start":277,"line_end":277,"column_start":8,"column_end":21},"name":"sample_single","qualname":"::distributions::uniform::UniformSampler::sample_single","value":"pub fn sample_single<R: Rng + ?Sized, B1, B2>(B1, B2, &mut R) -> Self::X where\nB1: SampleBorrow<Self::X> + Sized, B2: SampleBorrow<Self::X> + Sized","parent":{"krate":0,"index":317},"children":[],"decl_id":null,"docs":" Sample a single value uniformly from a range with inclusive lower bound\n and exclusive upper bound `[low, high)`.","sig":null,"attributes":[{"value":"/ Sample a single value uniformly from a range with inclusive lower bound","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":92332,"byte_end":92407,"line_start":258,"line_end":258,"column_start":5,"column_end":80}},{"value":"/ and exclusive upper bound `[low, high)`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":92412,"byte_end":92456,"line_start":259,"line_end":259,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":92461,"byte_end":92464,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ By default this is implemented using","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":92469,"byte_end":92509,"line_start":261,"line_end":261,"column_start":5,"column_end":45}},{"value":"/ `UniformSampler::new(low, high).sample(rng)`. However, for some types","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":92514,"byte_end":92587,"line_start":262,"line_end":262,"column_start":5,"column_end":78}},{"value":"/ more optimal implementations for single usage may be provided via this","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":92592,"byte_end":92666,"line_start":263,"line_end":263,"column_start":5,"column_end":79}},{"value":"/ method (which is the case for integers and floats).","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":92671,"byte_end":92726,"line_start":264,"line_end":264,"column_start":5,"column_end":60}},{"value":"/ Results may not be identical.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":92731,"byte_end":92764,"line_start":265,"line_end":265,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":92769,"byte_end":92772,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ Note that to use this method in a generic context, the type needs to be","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":92777,"byte_end":92852,"line_start":267,"line_end":267,"column_start":5,"column_end":80}},{"value":"/ retrieved via `SampleUniform::Sampler` as follows:","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":92857,"byte_end":92911,"line_start":268,"line_end":268,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":92916,"byte_end":92923,"line_start":269,"line_end":269,"column_start":5,"column_end":12}},{"value":"/ use rand::{thread_rng, distributions::uniform::{SampleUniform, UniformSampler}};","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":92928,"byte_end":93012,"line_start":270,"line_end":270,"column_start":5,"column_end":89}},{"value":"/ # #[allow(unused)]","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":93017,"byte_end":93039,"line_start":271,"line_end":271,"column_start":5,"column_end":27}},{"value":"/ fn sample_from_range<T: SampleUniform>(lb: T, ub: T) -> T {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":93044,"byte_end":93107,"line_start":272,"line_end":272,"column_start":5,"column_end":68}},{"value":"/     let mut rng = thread_rng();","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":93112,"byte_end":93147,"line_start":273,"line_end":273,"column_start":5,"column_end":40}},{"value":"/     <T as SampleUniform>::Sampler::sample_single(lb, ub, &mut rng)","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":93152,"byte_end":93222,"line_start":274,"line_end":274,"column_start":5,"column_end":75}},{"value":"/ }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":93227,"byte_end":93232,"line_start":275,"line_end":275,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":93237,"byte_end":93244,"line_start":276,"line_end":276,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":331},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":93941,"byte_end":93964,"line_start":294,"line_end":294,"column_start":8,"column_end":31},"name":"sample_single_inclusive","qualname":"::distributions::uniform::UniformSampler::sample_single_inclusive","value":"pub fn sample_single_inclusive<R: Rng + ?Sized, B1, B2>(B1, B2, &mut R)\n-> Self::X where B1: SampleBorrow<Self::X> + Sized,\nB2: SampleBorrow<Self::X> + Sized","parent":{"krate":0,"index":317},"children":[],"decl_id":null,"docs":" Sample a single value uniformly from a range with inclusive lower bound\n and inclusive upper bound `[low, high]`.","sig":null,"attributes":[{"value":"/ Sample a single value uniformly from a range with inclusive lower bound","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":93535,"byte_end":93610,"line_start":286,"line_end":286,"column_start":5,"column_end":80}},{"value":"/ and inclusive upper bound `[low, high]`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":93615,"byte_end":93659,"line_start":287,"line_end":287,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":93664,"byte_end":93667,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ By default this is implemented using","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":93672,"byte_end":93712,"line_start":289,"line_end":289,"column_start":5,"column_end":45}},{"value":"/ `UniformSampler::new_inclusive(low, high).sample(rng)`. However, for","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":93717,"byte_end":93789,"line_start":290,"line_end":290,"column_start":5,"column_end":77}},{"value":"/ some types more optimal implementations for single usage may be provided","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":93794,"byte_end":93870,"line_start":291,"line_end":291,"column_start":5,"column_end":81}},{"value":"/ via this method.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":93875,"byte_end":93895,"line_start":292,"line_end":292,"column_start":5,"column_end":25}},{"value":"/ Results may not be identical.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":93900,"byte_end":93933,"line_start":293,"line_end":293,"column_start":5,"column_end":38}}]},{"kind":"Trait","id":{"krate":0,"index":341},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":94800,"byte_end":94812,"line_start":322,"line_end":322,"column_start":11,"column_end":23},"name":"SampleBorrow","qualname":"::distributions::uniform::SampleBorrow","value":"SampleBorrow<Borrowed>","parent":null,"children":[{"krate":0,"index":343}],"decl_id":null,"docs":" Helper trait similar to [`Borrow`] but implemented\n only for SampleUniform and references to SampleUniform in\n order to resolve ambiguity issues.","sig":null,"attributes":[{"value":"/ Helper trait similar to [`Borrow`] but implemented","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":94594,"byte_end":94648,"line_start":317,"line_end":317,"column_start":1,"column_end":55}},{"value":"/ only for SampleUniform and references to SampleUniform in","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":94649,"byte_end":94710,"line_start":318,"line_end":318,"column_start":1,"column_end":62}},{"value":"/ order to resolve ambiguity issues.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":94711,"byte_end":94749,"line_start":319,"line_end":319,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":94750,"byte_end":94753,"line_start":320,"line_end":320,"column_start":1,"column_end":4}},{"value":"/ [`Borrow`]: std::borrow::Borrow","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":94754,"byte_end":94789,"line_start":321,"line_end":321,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":343},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":94966,"byte_end":94972,"line_start":326,"line_end":326,"column_start":8,"column_end":14},"name":"borrow","qualname":"::distributions::uniform::SampleBorrow::borrow","value":"pub fn borrow(&Self) -> &Borrowed","parent":{"krate":0,"index":341},"children":[],"decl_id":null,"docs":" Immutably borrows from an owned value. See [`Borrow::borrow`]","sig":null,"attributes":[{"value":"/ Immutably borrows from an owned value. See [`Borrow::borrow`]","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":94829,"byte_end":94894,"line_start":323,"line_end":323,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":94899,"byte_end":94902,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ [`Borrow::borrow`]: std::borrow::Borrow::borrow","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":94907,"byte_end":94958,"line_start":325,"line_end":325,"column_start":5,"column_end":56}}]},{"kind":"Trait","id":{"krate":0,"index":351},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":95512,"byte_end":95523,"line_start":349,"line_end":349,"column_start":11,"column_end":22},"name":"SampleRange","qualname":"::distributions::uniform::SampleRange","value":"SampleRange<T>","parent":null,"children":[{"krate":0,"index":353},{"krate":0,"index":355}],"decl_id":null,"docs":" Range that supports generating a single sample efficiently.","sig":null,"attributes":[{"value":"/ Range that supports generating a single sample efficiently.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":95330,"byte_end":95393,"line_start":345,"line_end":345,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":95394,"byte_end":95397,"line_start":346,"line_end":346,"column_start":1,"column_end":4}},{"value":"/ Any type implementing this trait can be used to specify the sampled range","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":95398,"byte_end":95475,"line_start":347,"line_end":347,"column_start":1,"column_end":78}},{"value":"/ for `Rng::gen_range`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":95476,"byte_end":95501,"line_start":348,"line_end":348,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":353},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":95584,"byte_end":95597,"line_start":351,"line_end":351,"column_start":8,"column_end":21},"name":"sample_single","qualname":"::distributions::uniform::SampleRange::sample_single","value":"pub fn sample_single<R: RngCore + ?Sized>(Self, &mut R) -> T","parent":{"krate":0,"index":351},"children":[],"decl_id":null,"docs":" Generate a sample from the given range.\n","sig":null,"attributes":[{"value":"/ Generate a sample from the given range.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":95533,"byte_end":95576,"line_start":350,"line_end":350,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":355},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":95694,"byte_end":95702,"line_start":354,"line_end":354,"column_start":8,"column_end":16},"name":"is_empty","qualname":"::distributions::uniform::SampleRange::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":{"krate":0,"index":351},"children":[],"decl_id":null,"docs":" Check whether the range is empty.\n","sig":null,"attributes":[{"value":"/ Check whether the range is empty.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":95649,"byte_end":95686,"line_start":353,"line_end":353,"column_start":5,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":1163},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":98500,"byte_end":98510,"line_start":423,"line_end":423,"column_start":12,"column_end":22},"name":"UniformInt","qualname":"::distributions::uniform::UniformInt","value":"UniformInt {  }","parent":null,"children":[{"krate":0,"index":1165},{"krate":0,"index":1166},{"krate":0,"index":1167}],"decl_id":null,"docs":" The back-end implementing [`UniformSampler`] for integer types.","sig":null,"attributes":[{"value":"/ The back-end implementing [`UniformSampler`] for integer types.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":96480,"byte_end":96547,"line_start":387,"line_end":387,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":96548,"byte_end":96551,"line_start":388,"line_end":388,"column_start":1,"column_end":4}},{"value":"/ Unless you are implementing [`UniformSampler`] for your own type, this type","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":96552,"byte_end":96631,"line_start":389,"line_end":389,"column_start":1,"column_end":80}},{"value":"/ should not be used directly, use [`Uniform`] instead.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":96632,"byte_end":96689,"line_start":390,"line_end":390,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":96690,"byte_end":96693,"line_start":391,"line_end":391,"column_start":1,"column_end":4}},{"value":"/ # Implementation notes","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":96694,"byte_end":96720,"line_start":392,"line_end":392,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":96721,"byte_end":96724,"line_start":393,"line_end":393,"column_start":1,"column_end":4}},{"value":"/ For simplicity, we use the same generic struct `UniformInt<X>` for all","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":96725,"byte_end":96799,"line_start":394,"line_end":394,"column_start":1,"column_end":75}},{"value":"/ integer types `X`. This gives us only one field type, `X`; to store unsigned","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":96800,"byte_end":96880,"line_start":395,"line_end":395,"column_start":1,"column_end":81}},{"value":"/ values of this size, we take use the fact that these conversions are no-ops.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":96881,"byte_end":96961,"line_start":396,"line_end":396,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":96962,"byte_end":96965,"line_start":397,"line_end":397,"column_start":1,"column_end":4}},{"value":"/ For a closed range, the number of possible numbers we should generate is","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":96966,"byte_end":97042,"line_start":398,"line_end":398,"column_start":1,"column_end":77}},{"value":"/ `range = (high - low + 1)`. To avoid bias, we must ensure that the size of","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":97043,"byte_end":97121,"line_start":399,"line_end":399,"column_start":1,"column_end":79}},{"value":"/ our sample space, `zone`, is a multiple of `range`; other values must be","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":97122,"byte_end":97198,"line_start":400,"line_end":400,"column_start":1,"column_end":77}},{"value":"/ rejected (by replacing with a new random sample).","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":97199,"byte_end":97252,"line_start":401,"line_end":401,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":97253,"byte_end":97256,"line_start":402,"line_end":402,"column_start":1,"column_end":4}},{"value":"/ As a special case, we use `range = 0` to represent the full range of the","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":97257,"byte_end":97333,"line_start":403,"line_end":403,"column_start":1,"column_end":77}},{"value":"/ result type (i.e. for `new_inclusive($ty::MIN, $ty::MAX)`).","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":97334,"byte_end":97397,"line_start":404,"line_end":404,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":97398,"byte_end":97401,"line_start":405,"line_end":405,"column_start":1,"column_end":4}},{"value":"/ The optimum `zone` is the largest product of `range` which fits in our","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":97402,"byte_end":97476,"line_start":406,"line_end":406,"column_start":1,"column_end":75}},{"value":"/ (unsigned) target type. We calculate this by calculating how many numbers we","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":97477,"byte_end":97557,"line_start":407,"line_end":407,"column_start":1,"column_end":81}},{"value":"/ must reject: `reject = (MAX + 1) % range = (MAX - range + 1) % range`. Any (large)","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":97558,"byte_end":97644,"line_start":408,"line_end":408,"column_start":1,"column_end":87}},{"value":"/ product of `range` will suffice, thus in `sample_single` we multiply by a","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":97645,"byte_end":97722,"line_start":409,"line_end":409,"column_start":1,"column_end":78}},{"value":"/ power of 2 via bit-shifting (faster but may cause more rejections).","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":97723,"byte_end":97794,"line_start":410,"line_end":410,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":97795,"byte_end":97798,"line_start":411,"line_end":411,"column_start":1,"column_end":4}},{"value":"/ The smallest integer PRNGs generate is `u32`. For 8- and 16-bit outputs we","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":97799,"byte_end":97877,"line_start":412,"line_end":412,"column_start":1,"column_end":79}},{"value":"/ use `u32` for our `zone` and samples (because it's not slower and because","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":97878,"byte_end":97955,"line_start":413,"line_end":413,"column_start":1,"column_end":78}},{"value":"/ it reduces the chance of having to reject a sample). In this case we cannot","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":97956,"byte_end":98035,"line_start":414,"line_end":414,"column_start":1,"column_end":80}},{"value":"/ store `zone` in the target type since it is too large, however we know","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":98036,"byte_end":98110,"line_start":415,"line_end":415,"column_start":1,"column_end":75}},{"value":"/ `ints_to_reject < range <= $unsigned::MAX`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":98111,"byte_end":98158,"line_start":416,"line_end":416,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":98159,"byte_end":98162,"line_start":417,"line_end":417,"column_start":1,"column_end":4}},{"value":"/ An alternative to using a modulus is widening multiply: After a widening","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":98163,"byte_end":98239,"line_start":418,"line_end":418,"column_start":1,"column_end":77}},{"value":"/ multiply by `range`, the result is in the high word. Then comparing the low","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":98240,"byte_end":98319,"line_start":419,"line_end":419,"column_start":1,"column_end":80}},{"value":"/ word against `zone` makes sure our distribution is uniform.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":98320,"byte_end":98383,"line_start":420,"line_end":420,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":1422},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":110690,"byte_end":110701,"line_start":732,"line_end":732,"column_start":12,"column_end":23},"name":"UniformChar","qualname":"::distributions::uniform::UniformChar","value":"UniformChar {  }","parent":null,"children":[{"krate":0,"index":1423}],"decl_id":null,"docs":" The back-end implementing [`UniformSampler`] for `char`.","sig":null,"attributes":[{"value":"/ The back-end implementing [`UniformSampler`] for `char`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":110132,"byte_end":110192,"line_start":721,"line_end":721,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":110193,"byte_end":110196,"line_start":722,"line_end":722,"column_start":1,"column_end":4}},{"value":"/ Unless you are implementing [`UniformSampler`] for your own type, this type","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":110197,"byte_end":110276,"line_start":723,"line_end":723,"column_start":1,"column_end":80}},{"value":"/ should not be used directly, use [`Uniform`] instead.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":110277,"byte_end":110334,"line_start":724,"line_end":724,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":110335,"byte_end":110338,"line_start":725,"line_end":725,"column_start":1,"column_end":4}},{"value":"/ This differs from integer range sampling since the range `0xD800..=0xDFFF`","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":110339,"byte_end":110417,"line_start":726,"line_end":726,"column_start":1,"column_end":79}},{"value":"/ are used for surrogate pairs in UCS and UTF-16, and consequently are not","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":110418,"byte_end":110494,"line_start":727,"line_end":727,"column_start":1,"column_end":77}},{"value":"/ valid Unicode code points. We must therefore avoid sampling values in this","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":110495,"byte_end":110573,"line_start":728,"line_end":728,"column_start":1,"column_end":79}},{"value":"/ range.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":110574,"byte_end":110584,"line_start":729,"line_end":729,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":1429},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":113584,"byte_end":113596,"line_start":811,"line_end":811,"column_start":12,"column_end":24},"name":"UniformFloat","qualname":"::distributions::uniform::UniformFloat","value":"UniformFloat {  }","parent":null,"children":[{"krate":0,"index":1431},{"krate":0,"index":1432}],"decl_id":null,"docs":" The back-end implementing [`UniformSampler`] for floating-point types.","sig":null,"attributes":[{"value":"/ The back-end implementing [`UniformSampler`] for floating-point types.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":112583,"byte_end":112657,"line_start":790,"line_end":790,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":112658,"byte_end":112661,"line_start":791,"line_end":791,"column_start":1,"column_end":4}},{"value":"/ Unless you are implementing [`UniformSampler`] for your own type, this type","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":112662,"byte_end":112741,"line_start":792,"line_end":792,"column_start":1,"column_end":80}},{"value":"/ should not be used directly, use [`Uniform`] instead.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":112742,"byte_end":112799,"line_start":793,"line_end":793,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":112800,"byte_end":112803,"line_start":794,"line_end":794,"column_start":1,"column_end":4}},{"value":"/ # Implementation notes","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":112804,"byte_end":112830,"line_start":795,"line_end":795,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":112831,"byte_end":112834,"line_start":796,"line_end":796,"column_start":1,"column_end":4}},{"value":"/ Instead of generating a float in the `[0, 1)` range using [`Standard`], the","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":112835,"byte_end":112914,"line_start":797,"line_end":797,"column_start":1,"column_end":80}},{"value":"/ `UniformFloat` implementation converts the output of an PRNG itself. This","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":112915,"byte_end":112992,"line_start":798,"line_end":798,"column_start":1,"column_end":78}},{"value":"/ way one or two steps can be optimized out.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":112993,"byte_end":113039,"line_start":799,"line_end":799,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":113040,"byte_end":113043,"line_start":800,"line_end":800,"column_start":1,"column_end":4}},{"value":"/ The floats are first converted to a value in the `[1, 2)` interval using a","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":113044,"byte_end":113122,"line_start":801,"line_end":801,"column_start":1,"column_end":79}},{"value":"/ transmute-based method, and then mapped to the expected range with a","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":113123,"byte_end":113195,"line_start":802,"line_end":802,"column_start":1,"column_end":73}},{"value":"/ multiply and addition. Values produced this way have what equals 23 bits of","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":113196,"byte_end":113275,"line_start":803,"line_end":803,"column_start":1,"column_end":80}},{"value":"/ random digits for an `f32`, and 52 for an `f64`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":113276,"byte_end":113328,"line_start":804,"line_end":804,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":113329,"byte_end":113332,"line_start":805,"line_end":805,"column_start":1,"column_end":4}},{"value":"/ [`new`]: UniformSampler::new","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":113333,"byte_end":113365,"line_start":806,"line_end":806,"column_start":1,"column_end":33}},{"value":"/ [`new_inclusive`]: UniformSampler::new_inclusive","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":113366,"byte_end":113418,"line_start":807,"line_end":807,"column_start":1,"column_end":53}},{"value":"/ [`Standard`]: crate::distributions::Standard","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":113419,"byte_end":113467,"line_start":808,"line_end":808,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":1479},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":122606,"byte_end":122621,"line_start":1024,"line_end":1024,"column_start":12,"column_end":27},"name":"UniformDuration","qualname":"::distributions::uniform::UniformDuration","value":"UniformDuration {  }","parent":null,"children":[{"krate":0,"index":1480},{"krate":0,"index":1481}],"decl_id":null,"docs":" The back-end implementing [`UniformSampler`] for `Duration`.","sig":null,"attributes":[{"value":"/ The back-end implementing [`UniformSampler`] for `Duration`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":122293,"byte_end":122357,"line_start":1018,"line_end":1018,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":122358,"byte_end":122361,"line_start":1019,"line_end":1019,"column_start":1,"column_end":4}},{"value":"/ Unless you are implementing [`UniformSampler`] for your own types, this type","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":122362,"byte_end":122442,"line_start":1020,"line_end":1020,"column_start":1,"column_end":81}},{"value":"/ should not be used directly, use [`Uniform`] instead.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":122443,"byte_end":122500,"line_start":1021,"line_end":1021,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":1502},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":15701,"byte_end":15709,"line_start":218,"line_end":218,"column_start":12,"column_end":20},"name":"Standard","qualname":"::distributions::Standard","value":"","parent":null,"children":[],"decl_id":null,"docs":" A generic random value distribution, implemented for many primitive types.\n Usually generates values with a numerically uniform distribution, and with a\n range appropriate to the type.","sig":null,"attributes":[{"value":"/ A generic random value distribution, implemented for many primitive types.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":11960,"byte_end":12038,"line_start":134,"line_end":134,"column_start":1,"column_end":79}},{"value":"/ Usually generates values with a numerically uniform distribution, and with a","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":12039,"byte_end":12119,"line_start":135,"line_end":135,"column_start":1,"column_end":81}},{"value":"/ range appropriate to the type.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":12120,"byte_end":12154,"line_start":136,"line_end":136,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":12155,"byte_end":12158,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ ## Provided implementations","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":12159,"byte_end":12190,"line_start":138,"line_end":138,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":12191,"byte_end":12194,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ Assuming the provided `Rng` is well-behaved, these implementations","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":12195,"byte_end":12265,"line_start":140,"line_end":140,"column_start":1,"column_end":71}},{"value":"/ generate values with the following ranges and distributions:","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":12266,"byte_end":12330,"line_start":141,"line_end":141,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":12331,"byte_end":12334,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ * Integers (`i32`, `u32`, `isize`, `usize`, etc.): Uniformly distributed","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":12335,"byte_end":12411,"line_start":143,"line_end":143,"column_start":1,"column_end":77}},{"value":"/   over all values of the type.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":12412,"byte_end":12446,"line_start":144,"line_end":144,"column_start":1,"column_end":35}},{"value":"/ * `char`: Uniformly distributed over all Unicode scalar values, i.e. all","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":12447,"byte_end":12523,"line_start":145,"line_end":145,"column_start":1,"column_end":77}},{"value":"/   code points in the range `0...0x10_FFFF`, except for the range","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":12524,"byte_end":12592,"line_start":146,"line_end":146,"column_start":1,"column_end":69}},{"value":"/   `0xD800...0xDFFF` (the surrogate code points). This includes","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":12593,"byte_end":12659,"line_start":147,"line_end":147,"column_start":1,"column_end":67}},{"value":"/   unassigned/reserved code points.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":12660,"byte_end":12698,"line_start":148,"line_end":148,"column_start":1,"column_end":39}},{"value":"/ * `bool`: Generates `false` or `true`, each with probability 0.5.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":12699,"byte_end":12768,"line_start":149,"line_end":149,"column_start":1,"column_end":70}},{"value":"/ * Floating point types (`f32` and `f64`): Uniformly distributed in the","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":12769,"byte_end":12843,"line_start":150,"line_end":150,"column_start":1,"column_end":75}},{"value":"/   half-open range `[0, 1)`. See notes below.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":12844,"byte_end":12892,"line_start":151,"line_end":151,"column_start":1,"column_end":49}},{"value":"/ * Wrapping integers (`Wrapping<T>`), besides the type identical to their","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":12893,"byte_end":12969,"line_start":152,"line_end":152,"column_start":1,"column_end":77}},{"value":"/   normal integer variants.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":12970,"byte_end":13000,"line_start":153,"line_end":153,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":13001,"byte_end":13004,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ The `Standard` distribution also supports generation of the following","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":13005,"byte_end":13078,"line_start":155,"line_end":155,"column_start":1,"column_end":74}},{"value":"/ compound types where all component types are supported:","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":13079,"byte_end":13138,"line_start":156,"line_end":156,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":13139,"byte_end":13142,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ *   Tuples (up to 12 elements): each element is generated sequentially.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":13143,"byte_end":13218,"line_start":158,"line_end":158,"column_start":1,"column_end":76}},{"value":"/ *   Arrays (up to 32 elements): each element is generated sequentially;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":13219,"byte_end":13294,"line_start":159,"line_end":159,"column_start":1,"column_end":76}},{"value":"/     see also [`Rng::fill`] which supports arbitrary array length for integer","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":13295,"byte_end":13375,"line_start":160,"line_end":160,"column_start":1,"column_end":81}},{"value":"/     and float types and tends to be faster for `u32` and smaller types.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":13376,"byte_end":13451,"line_start":161,"line_end":161,"column_start":1,"column_end":76}},{"value":"/     When using `rustc` ≥ 1.51, enable the `min_const_gen` feature to support","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":13452,"byte_end":13534,"line_start":162,"line_end":162,"column_start":1,"column_end":81}},{"value":"/     arrays larger than 32 elements.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":13535,"byte_end":13574,"line_start":163,"line_end":163,"column_start":1,"column_end":40}},{"value":"/     Note that [`Rng::fill`] and `Standard`'s array support are *not* equivalent:","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":13575,"byte_end":13659,"line_start":164,"line_end":164,"column_start":1,"column_end":85}},{"value":"/     the former is optimised for integer types (using fewer RNG calls for","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":13660,"byte_end":13736,"line_start":165,"line_end":165,"column_start":1,"column_end":77}},{"value":"/     element types smaller than the RNG word size), while the latter supports","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":13737,"byte_end":13817,"line_start":166,"line_end":166,"column_start":1,"column_end":81}},{"value":"/     any element type supported by `Standard`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":13818,"byte_end":13867,"line_start":167,"line_end":167,"column_start":1,"column_end":50}},{"value":"/ *   `Option<T>` first generates a `bool`, and if true generates and returns","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":13868,"byte_end":13947,"line_start":168,"line_end":168,"column_start":1,"column_end":80}},{"value":"/     `Some(value)` where `value: T`, otherwise returning `None`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":13948,"byte_end":14015,"line_start":169,"line_end":169,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":14016,"byte_end":14019,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ ## Custom implementations","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":14020,"byte_end":14049,"line_start":171,"line_end":171,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":14050,"byte_end":14053,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ The [`Standard`] distribution may be implemented for user types as follows:","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":14054,"byte_end":14133,"line_start":173,"line_end":173,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":14134,"byte_end":14137,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":14138,"byte_end":14145,"line_start":175,"line_end":175,"column_start":1,"column_end":8}},{"value":"/ # #![allow(dead_code)]","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":14146,"byte_end":14172,"line_start":176,"line_end":176,"column_start":1,"column_end":27}},{"value":"/ use rand::Rng;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":14173,"byte_end":14191,"line_start":177,"line_end":177,"column_start":1,"column_end":19}},{"value":"/ use rand::distributions::{Distribution, Standard};","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":14192,"byte_end":14246,"line_start":178,"line_end":178,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":14247,"byte_end":14250,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ struct MyF32 {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":14251,"byte_end":14269,"line_start":180,"line_end":180,"column_start":1,"column_end":19}},{"value":"/     x: f32,","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":14270,"byte_end":14285,"line_start":181,"line_end":181,"column_start":1,"column_end":16}},{"value":"/ }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":14286,"byte_end":14291,"line_start":182,"line_end":182,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":14292,"byte_end":14295,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ impl Distribution<MyF32> for Standard {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":14296,"byte_end":14339,"line_start":184,"line_end":184,"column_start":1,"column_end":44}},{"value":"/     fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> MyF32 {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":14340,"byte_end":14405,"line_start":185,"line_end":185,"column_start":1,"column_end":66}},{"value":"/         MyF32 { x: rng.gen() }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":14406,"byte_end":14440,"line_start":186,"line_end":186,"column_start":1,"column_end":35}},{"value":"/     }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":14441,"byte_end":14450,"line_start":187,"line_end":187,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":14451,"byte_end":14456,"line_start":188,"line_end":188,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":14457,"byte_end":14464,"line_start":189,"line_end":189,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":14465,"byte_end":14468,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ ## Example usage","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":14469,"byte_end":14489,"line_start":191,"line_end":191,"column_start":1,"column_end":21}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":14490,"byte_end":14497,"line_start":192,"line_end":192,"column_start":1,"column_end":8}},{"value":"/ use rand::prelude::*;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":14498,"byte_end":14523,"line_start":193,"line_end":193,"column_start":1,"column_end":26}},{"value":"/ use rand::distributions::Standard;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":14524,"byte_end":14562,"line_start":194,"line_end":194,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":14563,"byte_end":14566,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ let val: f32 = StdRng::from_entropy().sample(Standard);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":14567,"byte_end":14626,"line_start":196,"line_end":196,"column_start":1,"column_end":60}},{"value":"/ println!(\"f32 from [0, 1): {}\", val);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":14627,"byte_end":14668,"line_start":197,"line_end":197,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":14669,"byte_end":14676,"line_start":198,"line_end":198,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":14677,"byte_end":14680,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"/ # Floating point implementation","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":14681,"byte_end":14716,"line_start":200,"line_end":200,"column_start":1,"column_end":36}},{"value":"/ The floating point implementations for `Standard` generate a random value in","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":14717,"byte_end":14797,"line_start":201,"line_end":201,"column_start":1,"column_end":81}},{"value":"/ the half-open interval `[0, 1)`, i.e. including 0 but not 1.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":14798,"byte_end":14862,"line_start":202,"line_end":202,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":14863,"byte_end":14866,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ All values that can be generated are of the form `n * ε/2`. For `f32`","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":14867,"byte_end":14941,"line_start":204,"line_end":204,"column_start":1,"column_end":74}},{"value":"/ the 24 most significant random bits of a `u32` are used and for `f64` the","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":14942,"byte_end":15019,"line_start":205,"line_end":205,"column_start":1,"column_end":78}},{"value":"/ 53 most significant bits of a `u64` are used. The conversion uses the","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":15020,"byte_end":15093,"line_start":206,"line_end":206,"column_start":1,"column_end":74}},{"value":"/ multiplicative method: `(rng.gen::<$uty>() >> N) as $ty * (ε/2)`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":15094,"byte_end":15164,"line_start":207,"line_end":207,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":15165,"byte_end":15168,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ See also: [`Open01`] which samples from `(0, 1)`, [`OpenClosed01`] which","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":15169,"byte_end":15245,"line_start":209,"line_end":209,"column_start":1,"column_end":77}},{"value":"/ samples from `(0, 1]` and `Rng::gen_range(0..1)` which also samples from","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":15246,"byte_end":15322,"line_start":210,"line_end":210,"column_start":1,"column_end":77}},{"value":"/ `[0, 1)`. Note that `Open01` uses transmute-based methods which yield 1 bit","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":15323,"byte_end":15402,"line_start":211,"line_end":211,"column_start":1,"column_end":80}},{"value":"/ less precision but may perform faster on some architectures (on modern Intel","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":15403,"byte_end":15483,"line_start":212,"line_end":212,"column_start":1,"column_end":81}},{"value":"/ CPUs all methods have approximately equal performance).","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":15484,"byte_end":15543,"line_start":213,"line_end":213,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":15544,"byte_end":15547,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ [`Uniform`]: uniform::Uniform","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":15548,"byte_end":15581,"line_start":215,"line_end":215,"column_start":1,"column_end":34}}]},{"kind":"Mod","id":{"krate":0,"index":432},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::prelude","value":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/prelude.rs","parent":null,"children":[{"krate":0,"index":433},{"krate":0,"index":436},{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":443},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":450},{"krate":0,"index":453},{"krate":0,"index":456}],"decl_id":null,"docs":" Convenience re-export of common members","sig":null,"attributes":[{"value":"/ Convenience re-export of common members","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/prelude.rs","byte_start":145689,"byte_end":145732,"line_start":9,"line_end":9,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/prelude.rs","byte_start":145733,"byte_end":145736,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Like the standard library's prelude, this module simplifies importing of","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/prelude.rs","byte_start":145737,"byte_end":145813,"line_start":11,"line_end":11,"column_start":1,"column_end":77}},{"value":"/ common items. Unlike the standard prelude, the contents of this module must","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/prelude.rs","byte_start":145814,"byte_end":145893,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ be imported manually:","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/prelude.rs","byte_start":145894,"byte_end":145919,"line_start":13,"line_end":13,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/prelude.rs","byte_start":145920,"byte_end":145923,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/prelude.rs","byte_start":145924,"byte_end":145931,"line_start":15,"line_end":15,"column_start":1,"column_end":8}},{"value":"/ use rand::prelude::*;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/prelude.rs","byte_start":145932,"byte_end":145957,"line_start":16,"line_end":16,"column_start":1,"column_end":26}},{"value":"/ # let mut r = StdRng::from_rng(thread_rng()).unwrap();","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/prelude.rs","byte_start":145958,"byte_end":146016,"line_start":17,"line_end":17,"column_start":1,"column_end":59}},{"value":"/ # let _: f32 = r.gen();","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/prelude.rs","byte_start":146017,"byte_end":146044,"line_start":18,"line_end":18,"column_start":1,"column_end":28}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/prelude.rs","byte_start":146045,"byte_end":146052,"line_start":19,"line_end":19,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":494},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":148782,"byte_end":148785,"line_start":55,"line_end":55,"column_start":11,"column_end":14},"name":"Rng","qualname":"::rng::Rng","value":"Rng: RngCore","parent":null,"children":[{"krate":0,"index":495},{"krate":0,"index":497},{"krate":0,"index":500},{"krate":0,"index":503},{"krate":0,"index":506},{"krate":0,"index":509},{"krate":0,"index":511},{"krate":0,"index":512}],"decl_id":null,"docs":" An automatically-implemented extension trait on [`RngCore`] providing high-level\n generic methods for sampling values and other convenience methods.","sig":null,"attributes":[{"value":"/ An automatically-implemented extension trait on [`RngCore`] providing high-level","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":147251,"byte_end":147335,"line_start":18,"line_end":18,"column_start":1,"column_end":85}},{"value":"/ generic methods for sampling values and other convenience methods.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":147336,"byte_end":147406,"line_start":19,"line_end":19,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":147407,"byte_end":147410,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ This is the primary trait to use when generating random values.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":147411,"byte_end":147478,"line_start":21,"line_end":21,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":147479,"byte_end":147482,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Generic usage","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":147483,"byte_end":147502,"line_start":23,"line_end":23,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":147503,"byte_end":147506,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ The basic pattern is `fn foo<R: Rng + ?Sized>(rng: &mut R)`. Some","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":147507,"byte_end":147576,"line_start":25,"line_end":25,"column_start":1,"column_end":70}},{"value":"/ things are worth noting here:","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":147577,"byte_end":147610,"line_start":26,"line_end":26,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":147611,"byte_end":147614,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ - Since `Rng: RngCore` and every `RngCore` implements `Rng`, it makes no","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":147615,"byte_end":147691,"line_start":28,"line_end":28,"column_start":1,"column_end":77}},{"value":"/   difference whether we use `R: Rng` or `R: RngCore`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":147692,"byte_end":147749,"line_start":29,"line_end":29,"column_start":1,"column_end":58}},{"value":"/ - The `+ ?Sized` un-bounding allows functions to be called directly on","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":147750,"byte_end":147824,"line_start":30,"line_end":30,"column_start":1,"column_end":75}},{"value":"/   type-erased references; i.e. `foo(r)` where `r: &mut dyn RngCore`. Without","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":147825,"byte_end":147905,"line_start":31,"line_end":31,"column_start":1,"column_end":81}},{"value":"/   this it would be necessary to write `foo(&mut r)`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":147906,"byte_end":147962,"line_start":32,"line_end":32,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":147963,"byte_end":147966,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ An alternative pattern is possible: `fn foo<R: Rng>(rng: R)`. This has some","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":147967,"byte_end":148046,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ trade-offs. It allows the argument to be consumed directly without a `&mut`","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":148047,"byte_end":148126,"line_start":35,"line_end":35,"column_start":1,"column_end":80}},{"value":"/ (which is how `from_rng(thread_rng())` works); also it still works directly","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":148127,"byte_end":148206,"line_start":36,"line_end":36,"column_start":1,"column_end":80}},{"value":"/ on references (including type-erased references). Unfortunately within the","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":148207,"byte_end":148285,"line_start":37,"line_end":37,"column_start":1,"column_end":79}},{"value":"/ function `foo` it is not known whether `rng` is a reference type or not,","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":148286,"byte_end":148362,"line_start":38,"line_end":38,"column_start":1,"column_end":77}},{"value":"/ hence many uses of `rng` require an extra reference, either explicitly","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":148363,"byte_end":148437,"line_start":39,"line_end":39,"column_start":1,"column_end":75}},{"value":"/ (`distr.sample(&mut rng)`) or implicitly (`rng.gen()`); one may hope the","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":148438,"byte_end":148514,"line_start":40,"line_end":40,"column_start":1,"column_end":77}},{"value":"/ optimiser can remove redundant references later.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":148515,"byte_end":148567,"line_start":41,"line_end":41,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":148568,"byte_end":148571,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ Example:","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":148572,"byte_end":148584,"line_start":43,"line_end":43,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":148585,"byte_end":148588,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":148589,"byte_end":148596,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/ # use rand::thread_rng;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":148597,"byte_end":148624,"line_start":46,"line_end":46,"column_start":1,"column_end":28}},{"value":"/ use rand::Rng;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":148625,"byte_end":148643,"line_start":47,"line_end":47,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":148644,"byte_end":148647,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ fn foo<R: Rng + ?Sized>(rng: &mut R) -> f32 {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":148648,"byte_end":148697,"line_start":49,"line_end":49,"column_start":1,"column_end":50}},{"value":"/     rng.gen()","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":148698,"byte_end":148715,"line_start":50,"line_end":50,"column_start":1,"column_end":18}},{"value":"/ }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":148716,"byte_end":148721,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":148722,"byte_end":148725,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ # let v = foo(&mut thread_rng());","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":148726,"byte_end":148763,"line_start":53,"line_end":53,"column_start":1,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":148764,"byte_end":148771,"line_start":54,"line_end":54,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":495},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":150058,"byte_end":150061,"line_start":93,"line_end":93,"column_start":8,"column_end":11},"name":"gen","qualname":"::rng::Rng::gen","value":"pub fn gen<T>(&mut Self) -> T where Standard: Distribution<T>","parent":{"krate":0,"index":494},"children":[],"decl_id":null,"docs":" Return a random value supporting the [`Standard`] distribution.","sig":null,"attributes":[{"value":"/ Return a random value supporting the [`Standard`] distribution.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":148801,"byte_end":148868,"line_start":56,"line_end":56,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":148873,"byte_end":148876,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":148881,"byte_end":148894,"line_start":58,"line_end":58,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":148899,"byte_end":148902,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":148907,"byte_end":148914,"line_start":60,"line_end":60,"column_start":5,"column_end":12}},{"value":"/ use rand::{thread_rng, Rng};","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":148919,"byte_end":148951,"line_start":61,"line_end":61,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":148956,"byte_end":148959,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ let mut rng = thread_rng();","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":148964,"byte_end":148995,"line_start":63,"line_end":63,"column_start":5,"column_end":36}},{"value":"/ let x: u32 = rng.gen();","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":149000,"byte_end":149027,"line_start":64,"line_end":64,"column_start":5,"column_end":32}},{"value":"/ println!(\"{}\", x);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":149032,"byte_end":149054,"line_start":65,"line_end":65,"column_start":5,"column_end":27}},{"value":"/ println!(\"{:?}\", rng.gen::<(f64, bool)>());","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":149059,"byte_end":149106,"line_start":66,"line_end":66,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":149111,"byte_end":149118,"line_start":67,"line_end":67,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":149123,"byte_end":149126,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ # Arrays and tuples","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":149131,"byte_end":149154,"line_start":69,"line_end":69,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":149159,"byte_end":149162,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ The `rng.gen()` method is able to generate arrays (up to 32 elements)","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":149167,"byte_end":149240,"line_start":71,"line_end":71,"column_start":5,"column_end":78}},{"value":"/ and tuples (up to 12 elements), so long as all element types can be","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":149245,"byte_end":149316,"line_start":72,"line_end":72,"column_start":5,"column_end":76}},{"value":"/ generated.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":149321,"byte_end":149335,"line_start":73,"line_end":73,"column_start":5,"column_end":19}},{"value":"/ When using `rustc` ≥ 1.51, enable the `min_const_gen` feature to support","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":149340,"byte_end":149418,"line_start":74,"line_end":74,"column_start":5,"column_end":81}},{"value":"/ arrays larger than 32 elements.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":149423,"byte_end":149458,"line_start":75,"line_end":75,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":149463,"byte_end":149466,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ For arrays of integers, especially for those with small element types","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":149471,"byte_end":149544,"line_start":77,"line_end":77,"column_start":5,"column_end":78}},{"value":"/ (< 64 bit), it will likely be faster to instead use [`Rng::fill`].","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":149549,"byte_end":149619,"line_start":78,"line_end":78,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":149624,"byte_end":149627,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":149632,"byte_end":149639,"line_start":80,"line_end":80,"column_start":5,"column_end":12}},{"value":"/ use rand::{thread_rng, Rng};","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":149644,"byte_end":149676,"line_start":81,"line_end":81,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":149681,"byte_end":149684,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ let mut rng = thread_rng();","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":149689,"byte_end":149720,"line_start":83,"line_end":83,"column_start":5,"column_end":36}},{"value":"/ let tuple: (u8, i32, char) = rng.gen(); // arbitrary tuple support","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":149725,"byte_end":149795,"line_start":84,"line_end":84,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":149800,"byte_end":149803,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ let arr1: [f32; 32] = rng.gen();        // array construction","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":149808,"byte_end":149873,"line_start":86,"line_end":86,"column_start":5,"column_end":70}},{"value":"/ let mut arr2 = [0u8; 128];","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":149878,"byte_end":149908,"line_start":87,"line_end":87,"column_start":5,"column_end":35}},{"value":"/ rng.fill(&mut arr2);                    // array fill","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":149913,"byte_end":149970,"line_start":88,"line_end":88,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":149975,"byte_end":149982,"line_start":89,"line_end":89,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":149987,"byte_end":149990,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ [`Standard`]: distributions::Standard","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":149995,"byte_end":150036,"line_start":91,"line_end":91,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":150041,"byte_end":150050,"line_start":92,"line_end":92,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":497},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":151096,"byte_end":151105,"line_start":129,"line_end":129,"column_start":8,"column_end":17},"name":"gen_range","qualname":"::rng::Rng::gen_range","value":"pub fn gen_range<T, R>(&mut Self, R) -> T where T: SampleUniform,\nR: SampleRange<T>","parent":{"krate":0,"index":494},"children":[],"decl_id":null,"docs":" Generate a random value in the given range.","sig":null,"attributes":[{"value":"/ Generate a random value in the given range.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":150160,"byte_end":150207,"line_start":98,"line_end":98,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":150212,"byte_end":150215,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ This function is optimised for the case that only a single sample is","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":150220,"byte_end":150292,"line_start":100,"line_end":100,"column_start":5,"column_end":77}},{"value":"/ made from the given range. See also the [`Uniform`] distribution","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":150297,"byte_end":150365,"line_start":101,"line_end":101,"column_start":5,"column_end":73}},{"value":"/ type which may be faster if sampling from the same range repeatedly.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":150370,"byte_end":150442,"line_start":102,"line_end":102,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":150447,"byte_end":150450,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ Only `gen_range(low..high)` and `gen_range(low..=high)` are supported.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":150455,"byte_end":150529,"line_start":104,"line_end":104,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":150534,"byte_end":150537,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":150542,"byte_end":150554,"line_start":106,"line_end":106,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":150559,"byte_end":150562,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ Panics if the range is empty.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":150567,"byte_end":150600,"line_start":108,"line_end":108,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":150605,"byte_end":150608,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":150613,"byte_end":150626,"line_start":110,"line_end":110,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":150631,"byte_end":150634,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":150639,"byte_end":150646,"line_start":112,"line_end":112,"column_start":5,"column_end":12}},{"value":"/ use rand::{thread_rng, Rng};","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":150651,"byte_end":150683,"line_start":113,"line_end":113,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":150688,"byte_end":150691,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ let mut rng = thread_rng();","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":150696,"byte_end":150727,"line_start":115,"line_end":115,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":150732,"byte_end":150735,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ // Exclusive range","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":150740,"byte_end":150762,"line_start":117,"line_end":117,"column_start":5,"column_end":27}},{"value":"/ let n: u32 = rng.gen_range(0..10);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":150767,"byte_end":150805,"line_start":118,"line_end":118,"column_start":5,"column_end":43}},{"value":"/ println!(\"{}\", n);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":150810,"byte_end":150832,"line_start":119,"line_end":119,"column_start":5,"column_end":27}},{"value":"/ let m: f64 = rng.gen_range(-40.0..1.3e5);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":150837,"byte_end":150882,"line_start":120,"line_end":120,"column_start":5,"column_end":50}},{"value":"/ println!(\"{}\", m);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":150887,"byte_end":150909,"line_start":121,"line_end":121,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":150914,"byte_end":150917,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ // Inclusive range","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":150922,"byte_end":150944,"line_start":123,"line_end":123,"column_start":5,"column_end":27}},{"value":"/ let n: u32 = rng.gen_range(0..=10);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":150949,"byte_end":150988,"line_start":124,"line_end":124,"column_start":5,"column_end":44}},{"value":"/ println!(\"{}\", n);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":150993,"byte_end":151015,"line_start":125,"line_end":125,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":151020,"byte_end":151027,"line_start":126,"line_end":126,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":151032,"byte_end":151035,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ [`Uniform`]: distributions::uniform::Uniform","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":151040,"byte_end":151088,"line_start":128,"line_end":128,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":500},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":151792,"byte_end":151798,"line_start":152,"line_end":152,"column_start":8,"column_end":14},"name":"sample","qualname":"::rng::Rng::sample","value":"pub fn sample<T, D: Distribution<T>>(&mut Self, D) -> T","parent":{"krate":0,"index":494},"children":[],"decl_id":null,"docs":" Sample a new value, using the given distribution.","sig":null,"attributes":[{"value":"/ Sample a new value, using the given distribution.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":151316,"byte_end":151369,"line_start":138,"line_end":138,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":151374,"byte_end":151377,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ ### Example","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":151382,"byte_end":151397,"line_start":140,"line_end":140,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":151402,"byte_end":151405,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":151410,"byte_end":151417,"line_start":142,"line_end":142,"column_start":5,"column_end":12}},{"value":"/ use rand::{thread_rng, Rng};","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":151422,"byte_end":151454,"line_start":143,"line_end":143,"column_start":5,"column_end":37}},{"value":"/ use rand::distributions::Uniform;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":151459,"byte_end":151496,"line_start":144,"line_end":144,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":151501,"byte_end":151504,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ let mut rng = thread_rng();","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":151509,"byte_end":151540,"line_start":146,"line_end":146,"column_start":5,"column_end":36}},{"value":"/ let x = rng.sample(Uniform::new(10u32, 15));","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":151545,"byte_end":151593,"line_start":147,"line_end":147,"column_start":5,"column_end":53}},{"value":"/ // Type annotation requires two types, the type and distribution; the","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":151598,"byte_end":151671,"line_start":148,"line_end":148,"column_start":5,"column_end":78}},{"value":"/ // distribution can be inferred.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":151676,"byte_end":151712,"line_start":149,"line_end":149,"column_start":5,"column_end":41}},{"value":"/ let y = rng.sample::<u16, _>(Uniform::new(10, 15));","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":151717,"byte_end":151772,"line_start":150,"line_end":150,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":151777,"byte_end":151784,"line_start":151,"line_end":151,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":503},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":153199,"byte_end":153210,"line_start":192,"line_end":192,"column_start":8,"column_end":19},"name":"sample_iter","qualname":"::rng::Rng::sample_iter","value":"pub fn sample_iter<T, D>(Self, D) -> distributions::DistIter<D, Self, T> where\nD: Distribution<T>, Self: Sized","parent":{"krate":0,"index":494},"children":[],"decl_id":null,"docs":" Create an iterator that generates values using the given distribution.","sig":null,"attributes":[{"value":"/ Create an iterator that generates values using the given distribution.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":151888,"byte_end":151962,"line_start":156,"line_end":156,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":151967,"byte_end":151970,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ Note that this function takes its arguments by value. This works since","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":151975,"byte_end":152049,"line_start":158,"line_end":158,"column_start":5,"column_end":79}},{"value":"/ `(&mut R): Rng where R: Rng` and","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":152054,"byte_end":152090,"line_start":159,"line_end":159,"column_start":5,"column_end":41}},{"value":"/ `(&D): Distribution where D: Distribution`,","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":152095,"byte_end":152142,"line_start":160,"line_end":160,"column_start":5,"column_end":52}},{"value":"/ however borrowing is not automatic hence `rng.sample_iter(...)` may","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":152147,"byte_end":152218,"line_start":161,"line_end":161,"column_start":5,"column_end":76}},{"value":"/ need to be replaced with `(&mut rng).sample_iter(...)`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":152223,"byte_end":152282,"line_start":162,"line_end":162,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":152287,"byte_end":152290,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":152295,"byte_end":152308,"line_start":164,"line_end":164,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":152313,"byte_end":152316,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":152321,"byte_end":152328,"line_start":166,"line_end":166,"column_start":5,"column_end":12}},{"value":"/ use rand::{thread_rng, Rng};","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":152333,"byte_end":152365,"line_start":167,"line_end":167,"column_start":5,"column_end":37}},{"value":"/ use rand::distributions::{Alphanumeric, Uniform, Standard};","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":152370,"byte_end":152433,"line_start":168,"line_end":168,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":152438,"byte_end":152441,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ let mut rng = thread_rng();","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":152446,"byte_end":152477,"line_start":170,"line_end":170,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":152482,"byte_end":152485,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ // Vec of 16 x f32:","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":152490,"byte_end":152513,"line_start":172,"line_end":172,"column_start":5,"column_end":28}},{"value":"/ let v: Vec<f32> = (&mut rng).sample_iter(Standard).take(16).collect();","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":152518,"byte_end":152592,"line_start":173,"line_end":173,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":152597,"byte_end":152600,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ // String:","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":152605,"byte_end":152619,"line_start":175,"line_end":175,"column_start":5,"column_end":19}},{"value":"/ let s: String = (&mut rng).sample_iter(Alphanumeric)","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":152624,"byte_end":152680,"line_start":176,"line_end":176,"column_start":5,"column_end":61}},{"value":"/     .take(7)","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":152685,"byte_end":152701,"line_start":177,"line_end":177,"column_start":5,"column_end":21}},{"value":"/     .map(char::from)","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":152706,"byte_end":152730,"line_start":178,"line_end":178,"column_start":5,"column_end":29}},{"value":"/     .collect();","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":152735,"byte_end":152754,"line_start":179,"line_end":179,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":152759,"byte_end":152762,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ // Combined values","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":152767,"byte_end":152789,"line_start":181,"line_end":181,"column_start":5,"column_end":27}},{"value":"/ println!(\"{:?}\", (&mut rng).sample_iter(Standard).take(5)","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":152794,"byte_end":152855,"line_start":182,"line_end":182,"column_start":5,"column_end":66}},{"value":"/                              .collect::<Vec<(f64, bool)>>());","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":152860,"byte_end":152925,"line_start":183,"line_end":183,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":152930,"byte_end":152933,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ // Dice-rolling:","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":152938,"byte_end":152958,"line_start":185,"line_end":185,"column_start":5,"column_end":25}},{"value":"/ let die_range = Uniform::new_inclusive(1, 6);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":152963,"byte_end":153012,"line_start":186,"line_end":186,"column_start":5,"column_end":54}},{"value":"/ let mut roll_die = (&mut rng).sample_iter(die_range);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":153017,"byte_end":153074,"line_start":187,"line_end":187,"column_start":5,"column_end":62}},{"value":"/ while roll_die.next().unwrap() != 6 {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":153079,"byte_end":153120,"line_start":188,"line_end":188,"column_start":5,"column_end":46}},{"value":"/     println!(\"Not a 6; rolling again!\");","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":153125,"byte_end":153169,"line_start":189,"line_end":189,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":153174,"byte_end":153179,"line_start":190,"line_end":190,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":153184,"byte_end":153191,"line_start":191,"line_end":191,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":506},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":153944,"byte_end":153948,"line_start":218,"line_end":218,"column_start":8,"column_end":12},"name":"fill","qualname":"::rng::Rng::fill","value":"pub fn fill<T: Fill + ?Sized>(&mut Self, &mut T)","parent":{"krate":0,"index":494},"children":[],"decl_id":null,"docs":" Fill any type implementing [`Fill`] with random data","sig":null,"attributes":[{"value":"/ Fill any type implementing [`Fill`] with random data","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":153380,"byte_end":153436,"line_start":200,"line_end":200,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":153441,"byte_end":153444,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ The distribution is expected to be uniform with portable results, but","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":153449,"byte_end":153522,"line_start":202,"line_end":202,"column_start":5,"column_end":78}},{"value":"/ this cannot be guaranteed for third-party implementations.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":153527,"byte_end":153589,"line_start":203,"line_end":203,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":153594,"byte_end":153597,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ This is identical to [`try_fill`] except that it panics on error.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":153602,"byte_end":153671,"line_start":205,"line_end":205,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":153676,"byte_end":153679,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":153684,"byte_end":153697,"line_start":207,"line_end":207,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":153702,"byte_end":153705,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":153710,"byte_end":153717,"line_start":209,"line_end":209,"column_start":5,"column_end":12}},{"value":"/ use rand::{thread_rng, Rng};","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":153722,"byte_end":153754,"line_start":210,"line_end":210,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":153759,"byte_end":153762,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ let mut arr = [0i8; 20];","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":153767,"byte_end":153795,"line_start":212,"line_end":212,"column_start":5,"column_end":33}},{"value":"/ thread_rng().fill(&mut arr[..]);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":153800,"byte_end":153836,"line_start":213,"line_end":213,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":153841,"byte_end":153848,"line_start":214,"line_end":214,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":153853,"byte_end":153856,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ [`fill_bytes`]: RngCore::fill_bytes","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":153861,"byte_end":153900,"line_start":216,"line_end":216,"column_start":5,"column_end":44}},{"value":"/ [`try_fill`]: Rng::try_fill","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":153905,"byte_end":153936,"line_start":217,"line_end":217,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":509},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":154788,"byte_end":154796,"line_start":246,"line_end":246,"column_start":8,"column_end":16},"name":"try_fill","qualname":"::rng::Rng::try_fill","value":"pub fn try_fill<T: Fill + ?Sized>(&mut Self, &mut T) -> Result<(), Error>","parent":{"krate":0,"index":494},"children":[],"decl_id":null,"docs":" Fill any type implementing [`Fill`] with random data","sig":null,"attributes":[{"value":"/ Fill any type implementing [`Fill`] with random data","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":154080,"byte_end":154136,"line_start":222,"line_end":222,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":154141,"byte_end":154144,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ The distribution is expected to be uniform with portable results, but","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":154149,"byte_end":154222,"line_start":224,"line_end":224,"column_start":5,"column_end":78}},{"value":"/ this cannot be guaranteed for third-party implementations.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":154227,"byte_end":154289,"line_start":225,"line_end":225,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":154294,"byte_end":154297,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ This is identical to [`fill`] except that it forwards errors.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":154302,"byte_end":154367,"line_start":227,"line_end":227,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":154372,"byte_end":154375,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":154380,"byte_end":154393,"line_start":229,"line_end":229,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":154398,"byte_end":154401,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":154406,"byte_end":154413,"line_start":231,"line_end":231,"column_start":5,"column_end":12}},{"value":"/ # use rand::Error;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":154418,"byte_end":154440,"line_start":232,"line_end":232,"column_start":5,"column_end":27}},{"value":"/ use rand::{thread_rng, Rng};","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":154445,"byte_end":154477,"line_start":233,"line_end":233,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":154482,"byte_end":154485,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ # fn try_inner() -> Result<(), Error> {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":154490,"byte_end":154533,"line_start":235,"line_end":235,"column_start":5,"column_end":48}},{"value":"/ let mut arr = [0u64; 4];","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":154538,"byte_end":154566,"line_start":236,"line_end":236,"column_start":5,"column_end":33}},{"value":"/ thread_rng().try_fill(&mut arr[..])?;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":154571,"byte_end":154612,"line_start":237,"line_end":237,"column_start":5,"column_end":46}},{"value":"/ # Ok(())","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":154617,"byte_end":154629,"line_start":238,"line_end":238,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":154634,"byte_end":154641,"line_start":239,"line_end":239,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":154646,"byte_end":154649,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ # try_inner().unwrap()","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":154654,"byte_end":154680,"line_start":241,"line_end":241,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":154685,"byte_end":154692,"line_start":242,"line_end":242,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":154697,"byte_end":154700,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ [`try_fill_bytes`]: RngCore::try_fill_bytes","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":154705,"byte_end":154752,"line_start":244,"line_end":244,"column_start":5,"column_end":52}},{"value":"/ [`fill`]: Rng::fill","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":154757,"byte_end":154780,"line_start":245,"line_end":245,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":511},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":155422,"byte_end":155430,"line_start":270,"line_end":270,"column_start":8,"column_end":16},"name":"gen_bool","qualname":"::rng::Rng::gen_bool","value":"pub fn gen_bool(&mut Self, f64) -> bool","parent":{"krate":0,"index":494},"children":[],"decl_id":null,"docs":" Return a bool with a probability `p` of being true.","sig":null,"attributes":[{"value":"/ Return a bool with a probability `p` of being true.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":154902,"byte_end":154957,"line_start":250,"line_end":250,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":154962,"byte_end":154965,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ See also the [`Bernoulli`] distribution, which may be faster if","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":154970,"byte_end":155037,"line_start":252,"line_end":252,"column_start":5,"column_end":72}},{"value":"/ sampling from the same probability repeatedly.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":155042,"byte_end":155092,"line_start":253,"line_end":253,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":155097,"byte_end":155100,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":155105,"byte_end":155118,"line_start":255,"line_end":255,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":155123,"byte_end":155126,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":155131,"byte_end":155138,"line_start":257,"line_end":257,"column_start":5,"column_end":12}},{"value":"/ use rand::{thread_rng, Rng};","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":155143,"byte_end":155175,"line_start":258,"line_end":258,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":155180,"byte_end":155183,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ let mut rng = thread_rng();","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":155188,"byte_end":155219,"line_start":260,"line_end":260,"column_start":5,"column_end":36}},{"value":"/ println!(\"{}\", rng.gen_bool(1.0 / 3.0));","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":155224,"byte_end":155268,"line_start":261,"line_end":261,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":155273,"byte_end":155280,"line_start":262,"line_end":262,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":155285,"byte_end":155288,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":155293,"byte_end":155305,"line_start":264,"line_end":264,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":155310,"byte_end":155313,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ If `p < 0` or `p > 1`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":155318,"byte_end":155344,"line_start":266,"line_end":266,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":155349,"byte_end":155352,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ [`Bernoulli`]: distributions::Bernoulli","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":155357,"byte_end":155400,"line_start":268,"line_end":268,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":155405,"byte_end":155414,"line_start":269,"line_end":269,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":512},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":156406,"byte_end":156415,"line_start":299,"line_end":299,"column_start":8,"column_end":17},"name":"gen_ratio","qualname":"::rng::Rng::gen_ratio","value":"pub fn gen_ratio(&mut Self, u32, u32) -> bool","parent":{"krate":0,"index":494},"children":[],"decl_id":null,"docs":" Return a bool with a probability of `numerator/denominator` of being\n true. I.e. `gen_ratio(2, 3)` has chance of 2 in 3, or about 67%, of\n returning true. If `numerator == denominator`, then the returned value\n is guaranteed to be `true`. If `numerator == 0`, then the returned\n value is guaranteed to be `false`.","sig":null,"attributes":[{"value":"/ Return a bool with a probability of `numerator/denominator` of being","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":155553,"byte_end":155625,"line_start":275,"line_end":275,"column_start":5,"column_end":77}},{"value":"/ true. I.e. `gen_ratio(2, 3)` has chance of 2 in 3, or about 67%, of","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":155630,"byte_end":155701,"line_start":276,"line_end":276,"column_start":5,"column_end":76}},{"value":"/ returning true. If `numerator == denominator`, then the returned value","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":155706,"byte_end":155780,"line_start":277,"line_end":277,"column_start":5,"column_end":79}},{"value":"/ is guaranteed to be `true`. If `numerator == 0`, then the returned","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":155785,"byte_end":155855,"line_start":278,"line_end":278,"column_start":5,"column_end":75}},{"value":"/ value is guaranteed to be `false`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":155860,"byte_end":155898,"line_start":279,"line_end":279,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":155903,"byte_end":155906,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ See also the [`Bernoulli`] distribution, which may be faster if","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":155911,"byte_end":155978,"line_start":281,"line_end":281,"column_start":5,"column_end":72}},{"value":"/ sampling from the same `numerator` and `denominator` repeatedly.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":155983,"byte_end":156051,"line_start":282,"line_end":282,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":156056,"byte_end":156059,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":156064,"byte_end":156076,"line_start":284,"line_end":284,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":156081,"byte_end":156084,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ If `denominator == 0` or `numerator > denominator`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":156089,"byte_end":156144,"line_start":286,"line_end":286,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":156149,"byte_end":156152,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":156157,"byte_end":156170,"line_start":288,"line_end":288,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":156175,"byte_end":156178,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":156183,"byte_end":156190,"line_start":290,"line_end":290,"column_start":5,"column_end":12}},{"value":"/ use rand::{thread_rng, Rng};","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":156195,"byte_end":156227,"line_start":291,"line_end":291,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":156232,"byte_end":156235,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ let mut rng = thread_rng();","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":156240,"byte_end":156271,"line_start":293,"line_end":293,"column_start":5,"column_end":36}},{"value":"/ println!(\"{}\", rng.gen_ratio(2, 3));","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":156276,"byte_end":156316,"line_start":294,"line_end":294,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":156321,"byte_end":156328,"line_start":295,"line_end":295,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":156333,"byte_end":156336,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ [`Bernoulli`]: distributions::Bernoulli","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":156341,"byte_end":156384,"line_start":297,"line_end":297,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":156389,"byte_end":156398,"line_start":298,"line_end":298,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":515},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":156964,"byte_end":156968,"line_start":314,"line_end":314,"column_start":11,"column_end":15},"name":"Fill","qualname":"::rng::Fill","value":"Fill","parent":null,"children":[{"krate":0,"index":516}],"decl_id":null,"docs":" Types which may be filled with random data","sig":null,"attributes":[{"value":"/ Types which may be filled with random data","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":156630,"byte_end":156676,"line_start":307,"line_end":307,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":156677,"byte_end":156680,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ This trait allows arrays to be efficiently filled with random data.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":156681,"byte_end":156752,"line_start":309,"line_end":309,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":156753,"byte_end":156756,"line_start":310,"line_end":310,"column_start":1,"column_end":4}},{"value":"/ Implementations are expected to be portable across machines unless","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":156757,"byte_end":156827,"line_start":311,"line_end":311,"column_start":1,"column_end":71}},{"value":"/ clearly documented otherwise (see the","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":156828,"byte_end":156869,"line_start":312,"line_end":312,"column_start":1,"column_end":42}},{"value":"/ [Chapter on Portability](https://rust-random.github.io/book/portability.html)).","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":156870,"byte_end":156953,"line_start":313,"line_end":313,"column_start":1,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":516},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":157013,"byte_end":157021,"line_start":316,"line_end":316,"column_start":8,"column_end":16},"name":"try_fill","qualname":"::rng::Fill::try_fill","value":"pub fn try_fill<R: Rng + ?Sized>(&mut Self, &mut R) -> Result<(), Error>","parent":{"krate":0,"index":515},"children":[],"decl_id":null,"docs":" Fill self with random data\n","sig":null,"attributes":[{"value":"/ Fill self with random data","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":156975,"byte_end":157005,"line_start":315,"line_end":315,"column_start":5,"column_end":35}}]},{"kind":"Mod","id":{"krate":0,"index":524},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"rngs","qualname":"::rngs","value":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","parent":null,"children":[{"krate":0,"index":525},{"krate":0,"index":543},{"krate":0,"index":574}],"decl_id":null,"docs":" Random number generators and adapters","sig":null,"attributes":[{"value":"/ Random number generators and adapters","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":165929,"byte_end":165970,"line_start":9,"line_end":9,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":165971,"byte_end":165974,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ## Background: Random number generators (RNGs)","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":165975,"byte_end":166025,"line_start":11,"line_end":11,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":166026,"byte_end":166029,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Computers cannot produce random numbers from nowhere. We classify","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":166030,"byte_end":166099,"line_start":13,"line_end":13,"column_start":1,"column_end":70}},{"value":"/ random number generators as follows:","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":166100,"byte_end":166140,"line_start":14,"line_end":14,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":166141,"byte_end":166144,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ -   \"True\" random number generators (TRNGs) use hard-to-predict data sources","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":166145,"byte_end":166225,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/     (e.g. the high-resolution parts of event timings and sensor jitter) to","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":166226,"byte_end":166304,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/     harvest random bit-sequences, apply algorithms to remove bias and","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":166305,"byte_end":166378,"line_start":18,"line_end":18,"column_start":1,"column_end":74}},{"value":"/     estimate available entropy, then combine these bits into a byte-sequence","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":166379,"byte_end":166459,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/     or an entropy pool. This job is usually done by the operating system or","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":166460,"byte_end":166539,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/     a hardware generator (HRNG).","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":166540,"byte_end":166576,"line_start":21,"line_end":21,"column_start":1,"column_end":37}},{"value":"/ -   \"Pseudo\"-random number generators (PRNGs) use algorithms to transform a","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":166577,"byte_end":166656,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"/     seed into a sequence of pseudo-random numbers. These generators can be","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":166657,"byte_end":166735,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/     fast and produce well-distributed unpredictable random numbers (or not).","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":166736,"byte_end":166816,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/     They are usually deterministic: given algorithm and seed, the output","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":166817,"byte_end":166893,"line_start":25,"line_end":25,"column_start":1,"column_end":77}},{"value":"/     sequence can be reproduced. They have finite period and eventually loop;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":166894,"byte_end":166974,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/     with many algorithms this period is fixed and can be proven sufficiently","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":166975,"byte_end":167055,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/     long, while others are chaotic and the period depends on the seed.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":167056,"byte_end":167130,"line_start":28,"line_end":28,"column_start":1,"column_end":75}},{"value":"/ -   \"Cryptographically secure\" pseudo-random number generators (CSPRNGs)","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":167131,"byte_end":167207,"line_start":29,"line_end":29,"column_start":1,"column_end":77}},{"value":"/     are the sub-set of PRNGs which are secure. Security of the generator","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":167208,"byte_end":167284,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"/     relies both on hiding the internal state and using a strong algorithm.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":167285,"byte_end":167363,"line_start":31,"line_end":31,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":167364,"byte_end":167367,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ## Traits and functionality","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":167368,"byte_end":167399,"line_start":33,"line_end":33,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":167400,"byte_end":167403,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ All RNGs implement the [`RngCore`] trait, as a consequence of which the","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":167404,"byte_end":167479,"line_start":35,"line_end":35,"column_start":1,"column_end":76}},{"value":"/ [`Rng`] extension trait is automatically implemented. Secure RNGs may","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":167480,"byte_end":167553,"line_start":36,"line_end":36,"column_start":1,"column_end":74}},{"value":"/ additionally implement the [`CryptoRng`] trait.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":167554,"byte_end":167605,"line_start":37,"line_end":37,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":167606,"byte_end":167609,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ All PRNGs require a seed to produce their random number sequence. The","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":167610,"byte_end":167683,"line_start":39,"line_end":39,"column_start":1,"column_end":74}},{"value":"/ [`SeedableRng`] trait provides three ways of constructing PRNGs:","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":167684,"byte_end":167752,"line_start":40,"line_end":40,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":167753,"byte_end":167756,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ -   `from_seed` accepts a type specific to the PRNG","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":167757,"byte_end":167812,"line_start":42,"line_end":42,"column_start":1,"column_end":56}},{"value":"/ -   `from_rng` allows a PRNG to be seeded from any other RNG","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":167813,"byte_end":167877,"line_start":43,"line_end":43,"column_start":1,"column_end":65}},{"value":"/ -   `seed_from_u64` allows any PRNG to be seeded from a `u64` insecurely","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":167878,"byte_end":167954,"line_start":44,"line_end":44,"column_start":1,"column_end":77}},{"value":"/ -   `from_entropy` securely seeds a PRNG from fresh entropy","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":167955,"byte_end":168018,"line_start":45,"line_end":45,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":168019,"byte_end":168022,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ Use the [`rand_core`] crate when implementing your own RNGs.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":168023,"byte_end":168087,"line_start":47,"line_end":47,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":168088,"byte_end":168091,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ## Our generators","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":168092,"byte_end":168113,"line_start":49,"line_end":49,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":168114,"byte_end":168117,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ This crate provides several random number generators:","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":168118,"byte_end":168175,"line_start":51,"line_end":51,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":168176,"byte_end":168179,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ -   [`OsRng`] is an interface to the operating system's random number","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":168180,"byte_end":168253,"line_start":53,"line_end":53,"column_start":1,"column_end":74}},{"value":"/     source. Typically the operating system uses a CSPRNG with entropy","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":168254,"byte_end":168327,"line_start":54,"line_end":54,"column_start":1,"column_end":74}},{"value":"/     provided by a TRNG and some type of on-going re-seeding.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":168328,"byte_end":168392,"line_start":55,"line_end":55,"column_start":1,"column_end":65}},{"value":"/ -   [`ThreadRng`], provided by the [`thread_rng`] function, is a handle to a","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":168393,"byte_end":168473,"line_start":56,"line_end":56,"column_start":1,"column_end":81}},{"value":"/     thread-local CSPRNG with periodic seeding from [`OsRng`]. Because this","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":168474,"byte_end":168552,"line_start":57,"line_end":57,"column_start":1,"column_end":79}},{"value":"/     is local, it is typically much faster than [`OsRng`]. It should be","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":168553,"byte_end":168627,"line_start":58,"line_end":58,"column_start":1,"column_end":75}},{"value":"/     secure, though the paranoid may prefer [`OsRng`].","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":168628,"byte_end":168685,"line_start":59,"line_end":59,"column_start":1,"column_end":58}},{"value":"/ -   [`StdRng`] is a CSPRNG chosen for good performance and trust of security","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":168686,"byte_end":168766,"line_start":60,"line_end":60,"column_start":1,"column_end":81}},{"value":"/     (based on reviews, maturity and usage). The current algorithm is ChaCha12,","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":168767,"byte_end":168849,"line_start":61,"line_end":61,"column_start":1,"column_end":83}},{"value":"/     which is well established and rigorously analysed.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":168850,"byte_end":168908,"line_start":62,"line_end":62,"column_start":1,"column_end":59}},{"value":"/     [`StdRng`] provides the algorithm used by [`ThreadRng`] but without","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":168909,"byte_end":168984,"line_start":63,"line_end":63,"column_start":1,"column_end":76}},{"value":"/     periodic reseeding.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":168985,"byte_end":169012,"line_start":64,"line_end":64,"column_start":1,"column_end":28}},{"value":"/ -   [`SmallRng`] is an **insecure** PRNG designed to be fast, simple, require","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":169013,"byte_end":169094,"line_start":65,"line_end":65,"column_start":1,"column_end":82}},{"value":"/     little memory, and have good output quality.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":169095,"byte_end":169147,"line_start":66,"line_end":66,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":169148,"byte_end":169151,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ The algorithms selected for [`StdRng`] and [`SmallRng`] may change in any","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":169152,"byte_end":169229,"line_start":68,"line_end":68,"column_start":1,"column_end":78}},{"value":"/ release and may be platform-dependent, therefore they should be considered","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":169230,"byte_end":169308,"line_start":69,"line_end":69,"column_start":1,"column_end":79}},{"value":"/ **not reproducible**.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":169309,"byte_end":169334,"line_start":70,"line_end":70,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":169335,"byte_end":169338,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ ## Additional generators","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":169339,"byte_end":169367,"line_start":72,"line_end":72,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":169368,"byte_end":169371,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ **TRNGs**: The [`rdrand`] crate provides an interface to the RDRAND and","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":169372,"byte_end":169447,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"/ RDSEED instructions available in modern Intel and AMD CPUs.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":169448,"byte_end":169511,"line_start":75,"line_end":75,"column_start":1,"column_end":64}},{"value":"/ The [`rand_jitter`] crate provides a user-space implementation of","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":169512,"byte_end":169581,"line_start":76,"line_end":76,"column_start":1,"column_end":70}},{"value":"/ entropy harvesting from CPU timer jitter, but is very slow and has","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":169582,"byte_end":169652,"line_start":77,"line_end":77,"column_start":1,"column_end":71}},{"value":"/ [security issues](https://github.com/rust-random/rand/issues/699).","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":169653,"byte_end":169723,"line_start":78,"line_end":78,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":169724,"byte_end":169727,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ **PRNGs**: Several companion crates are available, providing individual or","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":169728,"byte_end":169806,"line_start":80,"line_end":80,"column_start":1,"column_end":79}},{"value":"/ families of PRNG algorithms. These provide the implementations behind","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":169807,"byte_end":169880,"line_start":81,"line_end":81,"column_start":1,"column_end":74}},{"value":"/ [`StdRng`] and [`SmallRng`] but can also be used directly, indeed *should*","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":169881,"byte_end":169959,"line_start":82,"line_end":82,"column_start":1,"column_end":79}},{"value":"/ be used directly when **reproducibility** matters.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":169960,"byte_end":170014,"line_start":83,"line_end":83,"column_start":1,"column_end":55}},{"value":"/ Some suggestions are: [`rand_chacha`], [`rand_pcg`], [`rand_xoshiro`].","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":170015,"byte_end":170089,"line_start":84,"line_end":84,"column_start":1,"column_end":75}},{"value":"/ A full list can be found by searching for crates with the [`rng` tag].","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":170090,"byte_end":170164,"line_start":85,"line_end":85,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":170165,"byte_end":170168,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ [`Rng`]: crate::Rng","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":170169,"byte_end":170192,"line_start":87,"line_end":87,"column_start":1,"column_end":24}},{"value":"/ [`RngCore`]: crate::RngCore","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":170193,"byte_end":170224,"line_start":88,"line_end":88,"column_start":1,"column_end":32}},{"value":"/ [`CryptoRng`]: crate::CryptoRng","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":170225,"byte_end":170260,"line_start":89,"line_end":89,"column_start":1,"column_end":36}},{"value":"/ [`SeedableRng`]: crate::SeedableRng","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":170261,"byte_end":170300,"line_start":90,"line_end":90,"column_start":1,"column_end":40}},{"value":"/ [`thread_rng`]: crate::thread_rng","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":170301,"byte_end":170338,"line_start":91,"line_end":91,"column_start":1,"column_end":38}},{"value":"/ [`rdrand`]: https://crates.io/crates/rdrand","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":170339,"byte_end":170386,"line_start":92,"line_end":92,"column_start":1,"column_end":48}},{"value":"/ [`rand_jitter`]: https://crates.io/crates/rand_jitter","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":170387,"byte_end":170444,"line_start":93,"line_end":93,"column_start":1,"column_end":58}},{"value":"/ [`rand_chacha`]: https://crates.io/crates/rand_chacha","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":170445,"byte_end":170502,"line_start":94,"line_end":94,"column_start":1,"column_end":58}},{"value":"/ [`rand_pcg`]: https://crates.io/crates/rand_pcg","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":170503,"byte_end":170554,"line_start":95,"line_end":95,"column_start":1,"column_end":52}},{"value":"/ [`rand_xoshiro`]: https://crates.io/crates/rand_xoshiro","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":170555,"byte_end":170614,"line_start":96,"line_end":96,"column_start":1,"column_end":60}},{"value":"/ [`rng` tag]: https://crates.io/keywords/rng","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":170615,"byte_end":170662,"line_start":97,"line_end":97,"column_start":1,"column_end":48}}]},{"kind":"Mod","id":{"krate":0,"index":525},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mock.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mock","qualname":"::rngs::mock","value":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mock.rs","parent":null,"children":[{"krate":0,"index":526},{"krate":0,"index":527},{"krate":0,"index":530},{"krate":0,"index":533},{"krate":0,"index":1787},{"krate":0,"index":1790},{"krate":0,"index":1792},{"krate":0,"index":1794},{"krate":0,"index":1795},{"krate":0,"index":1798},{"krate":0,"index":1799},{"krate":0,"index":536},{"krate":0,"index":538}],"decl_id":null,"docs":" Mock random number generator\n","sig":null,"attributes":[{"value":"/ Mock random number generator","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mock.rs","byte_start":171891,"byte_end":171923,"line_start":9,"line_end":9,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":1787},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mock.rs","byte_start":172593,"byte_end":172600,"line_start":32,"line_end":32,"column_start":12,"column_end":19},"name":"StepRng","qualname":"::rngs::mock::StepRng","value":"StepRng {  }","parent":null,"children":[{"krate":0,"index":1788},{"krate":0,"index":1789}],"decl_id":null,"docs":" A simple implementation of `RngCore` for testing purposes.","sig":null,"attributes":[{"value":"/ A simple implementation of `RngCore` for testing purposes.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mock.rs","byte_start":172031,"byte_end":172093,"line_start":16,"line_end":16,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mock.rs","byte_start":172094,"byte_end":172097,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This generates an arithmetic sequence (i.e. adds a constant each step)","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mock.rs","byte_start":172098,"byte_end":172172,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/ over a `u64` number, using wrapping arithmetic. If the increment is 0","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mock.rs","byte_start":172173,"byte_end":172246,"line_start":19,"line_end":19,"column_start":1,"column_end":74}},{"value":"/ the generator yields a constant.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mock.rs","byte_start":172247,"byte_end":172283,"line_start":20,"line_end":20,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mock.rs","byte_start":172284,"byte_end":172287,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mock.rs","byte_start":172288,"byte_end":172295,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ use rand::Rng;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mock.rs","byte_start":172296,"byte_end":172314,"line_start":23,"line_end":23,"column_start":1,"column_end":19}},{"value":"/ use rand::rngs::mock::StepRng;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mock.rs","byte_start":172315,"byte_end":172349,"line_start":24,"line_end":24,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mock.rs","byte_start":172350,"byte_end":172353,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let mut my_rng = StepRng::new(2, 1);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mock.rs","byte_start":172354,"byte_end":172394,"line_start":26,"line_end":26,"column_start":1,"column_end":41}},{"value":"/ let sample: [u64; 3] = my_rng.gen();","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mock.rs","byte_start":172395,"byte_end":172435,"line_start":27,"line_end":27,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(sample, [2, 3, 4]);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mock.rs","byte_start":172436,"byte_end":172470,"line_start":28,"line_end":28,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mock.rs","byte_start":172471,"byte_end":172478,"line_start":29,"line_end":29,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":537},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mock.rs","byte_start":172790,"byte_end":172793,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<StepRng>::new","value":"pub fn new(u64, u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a `StepRng`, yielding an arithmetic sequence starting with\n `initial` and incremented by `increment` each time.\n","sig":null,"attributes":[{"value":"/ Create a `StepRng`, yielding an arithmetic sequence starting with","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mock.rs","byte_start":172649,"byte_end":172718,"line_start":38,"line_end":38,"column_start":5,"column_end":74}},{"value":"/ `initial` and incremented by `increment` each time.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mock.rs","byte_start":172723,"byte_end":172778,"line_start":39,"line_end":39,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":1801},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/std.rs","byte_start":175296,"byte_end":175302,"line_start":34,"line_end":34,"column_start":12,"column_end":18},"name":"StdRng","qualname":"::rngs::std::StdRng","value":"","parent":null,"children":[],"decl_id":null,"docs":" The standard RNG. The PRNG algorithm in `StdRng` is chosen to be efficient\n on the current platform, to be statistically strong and unpredictable\n (meaning a cryptographically secure PRNG).","sig":null,"attributes":[{"value":"/ The standard RNG. The PRNG algorithm in `StdRng` is chosen to be efficient","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/std.rs","byte_start":174366,"byte_end":174444,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ on the current platform, to be statistically strong and unpredictable","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/std.rs","byte_start":174445,"byte_end":174518,"line_start":18,"line_end":18,"column_start":1,"column_end":74}},{"value":"/ (meaning a cryptographically secure PRNG).","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/std.rs","byte_start":174519,"byte_end":174565,"line_start":19,"line_end":19,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/std.rs","byte_start":174566,"byte_end":174569,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The current algorithm used is the ChaCha block cipher with 12 rounds. Please","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/std.rs","byte_start":174570,"byte_end":174650,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ see this relevant [rand issue] for the discussion. This may change as new ","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/std.rs","byte_start":174651,"byte_end":174729,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ evidence of cipher security and performance becomes available.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/std.rs","byte_start":174730,"byte_end":174796,"line_start":23,"line_end":23,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/std.rs","byte_start":174797,"byte_end":174800,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ The algorithm is deterministic but should not be considered reproducible","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/std.rs","byte_start":174801,"byte_end":174877,"line_start":25,"line_end":25,"column_start":1,"column_end":77}},{"value":"/ due to dependence on configuration and possible replacement in future","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/std.rs","byte_start":174878,"byte_end":174951,"line_start":26,"line_end":26,"column_start":1,"column_end":74}},{"value":"/ library versions. For a secure reproducible generator, we recommend use of","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/std.rs","byte_start":174952,"byte_end":175030,"line_start":27,"line_end":27,"column_start":1,"column_end":79}},{"value":"/ the [rand_chacha] crate directly.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/std.rs","byte_start":175031,"byte_end":175068,"line_start":28,"line_end":28,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/std.rs","byte_start":175069,"byte_end":175072,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ [rand_chacha]: https://crates.io/crates/rand_chacha","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/std.rs","byte_start":175073,"byte_end":175128,"line_start":30,"line_end":30,"column_start":1,"column_end":56}},{"value":"/ [rand issue]: https://github.com/rust-random/rand/issues/932","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/std.rs","byte_start":175129,"byte_end":175193,"line_start":31,"line_end":31,"column_start":1,"column_end":65}}]},{"kind":"Mod","id":{"krate":0,"index":577},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"seq","qualname":"::seq","value":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","parent":null,"children":[{"krate":0,"index":578},{"krate":0,"index":581},{"krate":0,"index":591},{"krate":0,"index":599},{"krate":0,"index":610},{"krate":0,"index":612}],"decl_id":null,"docs":" Sequence-related functionality","sig":null,"attributes":[{"value":"/ Sequence-related functionality","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":177162,"byte_end":177196,"line_start":9,"line_end":9,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":177197,"byte_end":177200,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This module provides:","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":177201,"byte_end":177226,"line_start":11,"line_end":11,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":177227,"byte_end":177230,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ *   [`SliceRandom`] slice sampling and mutation","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":177231,"byte_end":177282,"line_start":13,"line_end":13,"column_start":1,"column_end":52}},{"value":"/ *   [`IteratorRandom`] iterator sampling","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":177283,"byte_end":177327,"line_start":14,"line_end":14,"column_start":1,"column_end":45}},{"value":"/ *   [`index::sample`] low-level API to choose multiple indices from","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":177328,"byte_end":177399,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/     `0..length`","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":177400,"byte_end":177419,"line_start":16,"line_end":16,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":177420,"byte_end":177423,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Also see:","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":177424,"byte_end":177437,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":177438,"byte_end":177441,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ *   [`crate::distributions::WeightedIndex`] distribution which provides","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":177442,"byte_end":177517,"line_start":20,"line_end":20,"column_start":1,"column_end":76}},{"value":"/     weighted index sampling.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":177518,"byte_end":177550,"line_start":21,"line_end":21,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":177551,"byte_end":177554,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ In order to make results reproducible across 32-64 bit architectures, all","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":177555,"byte_end":177632,"line_start":23,"line_end":23,"column_start":1,"column_end":78}},{"value":"/ `usize` indices are sampled as a `u32` where possible (also providing a","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":177633,"byte_end":177708,"line_start":24,"line_end":24,"column_start":1,"column_end":76}},{"value":"/ small performance boost in some cases).","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":177709,"byte_end":177752,"line_start":25,"line_end":25,"column_start":1,"column_end":44}}]},{"kind":"Trait","id":{"krate":0,"index":581},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":178702,"byte_end":178713,"line_start":59,"line_end":59,"column_start":11,"column_end":22},"name":"SliceRandom","qualname":"::seq::SliceRandom","value":"SliceRandom","parent":null,"children":[{"krate":0,"index":582},{"krate":0,"index":583},{"krate":0,"index":585},{"krate":0,"index":587},{"krate":0,"index":589}],"decl_id":null,"docs":" Extension trait on slices, providing random mutation and sampling methods.","sig":null,"attributes":[{"value":"/ Extension trait on slices, providing random mutation and sampling methods.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":178120,"byte_end":178198,"line_start":41,"line_end":41,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":178199,"byte_end":178202,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ This trait is implemented on all `[T]` slice types, providing several","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":178203,"byte_end":178276,"line_start":43,"line_end":43,"column_start":1,"column_end":74}},{"value":"/ methods for choosing and shuffling elements. You must `use` this trait:","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":178277,"byte_end":178352,"line_start":44,"line_end":44,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":178353,"byte_end":178356,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":178357,"byte_end":178364,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"/ use rand::seq::SliceRandom;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":178365,"byte_end":178396,"line_start":47,"line_end":47,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":178397,"byte_end":178400,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ let mut rng = rand::thread_rng();","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":178401,"byte_end":178438,"line_start":49,"line_end":49,"column_start":1,"column_end":38}},{"value":"/ let mut bytes = \"Hello, random!\".to_string().into_bytes();","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":178439,"byte_end":178501,"line_start":50,"line_end":50,"column_start":1,"column_end":63}},{"value":"/ bytes.shuffle(&mut rng);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":178502,"byte_end":178530,"line_start":51,"line_end":51,"column_start":1,"column_end":29}},{"value":"/ let str = String::from_utf8(bytes).unwrap();","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":178531,"byte_end":178579,"line_start":52,"line_end":52,"column_start":1,"column_end":49}},{"value":"/ println!(\"{}\", str);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":178580,"byte_end":178604,"line_start":53,"line_end":53,"column_start":1,"column_end":25}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":178605,"byte_end":178612,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/ Example output (non-deterministic):","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":178613,"byte_end":178652,"line_start":55,"line_end":55,"column_start":1,"column_end":40}},{"value":"/ ```none","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":178653,"byte_end":178664,"line_start":56,"line_end":56,"column_start":1,"column_end":12}},{"value":"/ l,nmroHado !le","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":178665,"byte_end":178683,"line_start":57,"line_end":57,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":178684,"byte_end":178691,"line_start":58,"line_end":58,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":582},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":178751,"byte_end":178755,"line_start":61,"line_end":61,"column_start":10,"column_end":14},"name":"Item","qualname":"::seq::SliceRandom::Item","value":"type Item;","parent":{"krate":0,"index":581},"children":[],"decl_id":null,"docs":" The element type.\n","sig":null,"attributes":[{"value":"/ The element type.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":178720,"byte_end":178741,"line_start":60,"line_end":60,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":583},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":179241,"byte_end":179247,"line_start":79,"line_end":79,"column_start":8,"column_end":14},"name":"choose","qualname":"::seq::SliceRandom::choose","value":"pub fn choose<R>(&Self, &mut R) -> Option<&Self::Item> where R: Rng + ?Sized","parent":{"krate":0,"index":581},"children":[],"decl_id":null,"docs":" Returns a reference to one random element of the slice, or `None` if the\n slice is empty.","sig":null,"attributes":[{"value":"/ Returns a reference to one random element of the slice, or `None` if the","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":178762,"byte_end":178838,"line_start":63,"line_end":63,"column_start":5,"column_end":81}},{"value":"/ slice is empty.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":178843,"byte_end":178862,"line_start":64,"line_end":64,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":178867,"byte_end":178870,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ For slices, complexity is `O(1)`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":178875,"byte_end":178912,"line_start":66,"line_end":66,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":178917,"byte_end":178920,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":178925,"byte_end":178938,"line_start":68,"line_end":68,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":178943,"byte_end":178946,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":178951,"byte_end":178958,"line_start":70,"line_end":70,"column_start":5,"column_end":12}},{"value":"/ use rand::thread_rng;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":178963,"byte_end":178988,"line_start":71,"line_end":71,"column_start":5,"column_end":30}},{"value":"/ use rand::seq::SliceRandom;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":178993,"byte_end":179024,"line_start":72,"line_end":72,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":179029,"byte_end":179032,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ let choices = [1, 2, 4, 8, 16, 32];","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":179037,"byte_end":179076,"line_start":74,"line_end":74,"column_start":5,"column_end":44}},{"value":"/ let mut rng = thread_rng();","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":179081,"byte_end":179112,"line_start":75,"line_end":75,"column_start":5,"column_end":36}},{"value":"/ println!(\"{:?}\", choices.choose(&mut rng));","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":179117,"byte_end":179164,"line_start":76,"line_end":76,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(choices[..0].choose(&mut rng), None);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":179169,"byte_end":179221,"line_start":77,"line_end":77,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":179226,"byte_end":179233,"line_start":78,"line_end":78,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":585},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":179492,"byte_end":179502,"line_start":86,"line_end":86,"column_start":8,"column_end":18},"name":"choose_mut","qualname":"::seq::SliceRandom::choose_mut","value":"pub fn choose_mut<R>(&mut Self, &mut R) -> Option<&mut Self::Item> where\nR: Rng + ?Sized","parent":{"krate":0,"index":581},"children":[],"decl_id":null,"docs":" Returns a mutable reference to one random element of the slice, or\n `None` if the slice is empty.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to one random element of the slice, or","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":179326,"byte_end":179396,"line_start":82,"line_end":82,"column_start":5,"column_end":75}},{"value":"/ `None` if the slice is empty.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":179401,"byte_end":179434,"line_start":83,"line_end":83,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":179439,"byte_end":179442,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ For slices, complexity is `O(1)`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":179447,"byte_end":179484,"line_start":85,"line_end":85,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":587},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":185825,"byte_end":185832,"line_start":244,"line_end":244,"column_start":8,"column_end":15},"name":"shuffle","qualname":"::seq::SliceRandom::shuffle","value":"pub fn shuffle<R>(&mut Self, &mut R) where R: Rng + ?Sized","parent":{"krate":0,"index":581},"children":[],"decl_id":null,"docs":" Shuffle a mutable slice in place.","sig":null,"attributes":[{"value":"/ Shuffle a mutable slice in place.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":185400,"byte_end":185437,"line_start":228,"line_end":228,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":185442,"byte_end":185445,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ For slices of length `n`, complexity is `O(n)`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":185450,"byte_end":185501,"line_start":230,"line_end":230,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":185506,"byte_end":185509,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":185514,"byte_end":185527,"line_start":232,"line_end":232,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":185532,"byte_end":185535,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":185540,"byte_end":185547,"line_start":234,"line_end":234,"column_start":5,"column_end":12}},{"value":"/ use rand::seq::SliceRandom;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":185552,"byte_end":185583,"line_start":235,"line_end":235,"column_start":5,"column_end":36}},{"value":"/ use rand::thread_rng;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":185588,"byte_end":185613,"line_start":236,"line_end":236,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":185618,"byte_end":185621,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ let mut rng = thread_rng();","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":185626,"byte_end":185657,"line_start":238,"line_end":238,"column_start":5,"column_end":36}},{"value":"/ let mut y = [1, 2, 3, 4, 5];","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":185662,"byte_end":185694,"line_start":239,"line_end":239,"column_start":5,"column_end":37}},{"value":"/ println!(\"Unshuffled: {:?}\", y);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":185699,"byte_end":185735,"line_start":240,"line_end":240,"column_start":5,"column_end":41}},{"value":"/ y.shuffle(&mut rng);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":185740,"byte_end":185764,"line_start":241,"line_end":241,"column_start":5,"column_end":29}},{"value":"/ println!(\"Shuffled:   {:?}\", y);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":185769,"byte_end":185805,"line_start":242,"line_end":242,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":185810,"byte_end":185817,"line_start":243,"line_end":243,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":589},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":186697,"byte_end":186712,"line_start":264,"line_end":264,"column_start":8,"column_end":23},"name":"partial_shuffle","qualname":"::seq::SliceRandom::partial_shuffle","value":"pub fn partial_shuffle<R>(&mut Self, &mut R, usize)\n-> (&mut [Self::Item], &mut [Self::Item]) where R: Rng + ?Sized","parent":{"krate":0,"index":581},"children":[],"decl_id":null,"docs":" Shuffle a slice in place, but exit early.","sig":null,"attributes":[{"value":"/ Shuffle a slice in place, but exit early.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":185892,"byte_end":185937,"line_start":247,"line_end":247,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":185942,"byte_end":185945,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ Returns two mutable slices from the source slice. The first contains","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":185950,"byte_end":186022,"line_start":249,"line_end":249,"column_start":5,"column_end":77}},{"value":"/ `amount` elements randomly permuted. The second has the remaining","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":186027,"byte_end":186096,"line_start":250,"line_end":250,"column_start":5,"column_end":74}},{"value":"/ elements that are not fully shuffled.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":186101,"byte_end":186142,"line_start":251,"line_end":251,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":186147,"byte_end":186150,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ This is an efficient method to select `amount` elements at random from","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":186155,"byte_end":186229,"line_start":253,"line_end":253,"column_start":5,"column_end":79}},{"value":"/ the slice, provided the slice may be mutated.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":186234,"byte_end":186283,"line_start":254,"line_end":254,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":186288,"byte_end":186291,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ If you only need to choose elements randomly and `amount > self.len()/2`","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":186296,"byte_end":186372,"line_start":256,"line_end":256,"column_start":5,"column_end":81}},{"value":"/ then you may improve performance by taking","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":186377,"byte_end":186423,"line_start":257,"line_end":257,"column_start":5,"column_end":51}},{"value":"/ `amount = values.len() - amount` and using only the second slice.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":186428,"byte_end":186497,"line_start":258,"line_end":258,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":186502,"byte_end":186505,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ If `amount` is greater than the number of elements in the slice, this","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":186510,"byte_end":186583,"line_start":260,"line_end":260,"column_start":5,"column_end":78}},{"value":"/ will perform a full shuffle.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":186588,"byte_end":186620,"line_start":261,"line_end":261,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":186625,"byte_end":186628,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ For slices, complexity is `O(m)` where `m = amount`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":186633,"byte_end":186689,"line_start":263,"line_end":263,"column_start":5,"column_end":61}}]},{"kind":"Trait","id":{"krate":0,"index":591},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":187382,"byte_end":187396,"line_start":288,"line_end":288,"column_start":11,"column_end":25},"name":"IteratorRandom","qualname":"::seq::IteratorRandom","value":"IteratorRandom: Iterator + Sized","parent":null,"children":[{"krate":0,"index":592},{"krate":0,"index":594},{"krate":0,"index":597}],"decl_id":null,"docs":" Extension trait on iterators, providing random sampling methods.","sig":null,"attributes":[{"value":"/ Extension trait on iterators, providing random sampling methods.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":186842,"byte_end":186910,"line_start":270,"line_end":270,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":186911,"byte_end":186914,"line_start":271,"line_end":271,"column_start":1,"column_end":4}},{"value":"/ This trait is implemented on all iterators `I` where `I: Iterator + Sized`","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":186915,"byte_end":186993,"line_start":272,"line_end":272,"column_start":1,"column_end":79}},{"value":"/ and provides methods for","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":186994,"byte_end":187022,"line_start":273,"line_end":273,"column_start":1,"column_end":29}},{"value":"/ choosing one or more elements. You must `use` this trait:","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":187023,"byte_end":187084,"line_start":274,"line_end":274,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":187085,"byte_end":187088,"line_start":275,"line_end":275,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":187089,"byte_end":187096,"line_start":276,"line_end":276,"column_start":1,"column_end":8}},{"value":"/ use rand::seq::IteratorRandom;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":187097,"byte_end":187131,"line_start":277,"line_end":277,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":187132,"byte_end":187135,"line_start":278,"line_end":278,"column_start":1,"column_end":4}},{"value":"/ let mut rng = rand::thread_rng();","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":187136,"byte_end":187173,"line_start":279,"line_end":279,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":187174,"byte_end":187177,"line_start":280,"line_end":280,"column_start":1,"column_end":4}},{"value":"/ let faces = \"😀😎😐😕😠😢\";","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":187178,"byte_end":187221,"line_start":281,"line_end":281,"column_start":1,"column_end":26}},{"value":"/ println!(\"I am {}!\", faces.chars().choose(&mut rng).unwrap());","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":187222,"byte_end":187288,"line_start":282,"line_end":282,"column_start":1,"column_end":67}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":187289,"byte_end":187296,"line_start":283,"line_end":283,"column_start":1,"column_end":8}},{"value":"/ Example output (non-deterministic):","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":187297,"byte_end":187336,"line_start":284,"line_end":284,"column_start":1,"column_end":40}},{"value":"/ ```none","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":187337,"byte_end":187348,"line_start":285,"line_end":285,"column_start":1,"column_end":12}},{"value":"/ I am 😀!","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":187349,"byte_end":187363,"line_start":286,"line_end":286,"column_start":1,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":187364,"byte_end":187371,"line_start":287,"line_end":287,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":592},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":188308,"byte_end":188314,"line_start":304,"line_end":304,"column_start":8,"column_end":14},"name":"choose","qualname":"::seq::IteratorRandom::choose","value":"pub fn choose<R>(Self, &mut R) -> Option<Self::Item> where R: Rng + ?Sized","parent":{"krate":0,"index":591},"children":[],"decl_id":null,"docs":" Choose one element at random from the iterator.","sig":null,"attributes":[{"value":"/ Choose one element at random from the iterator.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":187421,"byte_end":187472,"line_start":289,"line_end":289,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":187477,"byte_end":187480,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if and only if the iterator is empty.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":187485,"byte_end":187541,"line_start":291,"line_end":291,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":187546,"byte_end":187549,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ This method uses [`Iterator::size_hint`] for optimisation. With an","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":187554,"byte_end":187624,"line_start":293,"line_end":293,"column_start":5,"column_end":75}},{"value":"/ accurate hint and where [`Iterator::nth`] is a constant-time operation","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":187629,"byte_end":187703,"line_start":294,"line_end":294,"column_start":5,"column_end":79}},{"value":"/ this method can offer `O(1)` performance. Where no size hint is","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":187708,"byte_end":187775,"line_start":295,"line_end":295,"column_start":5,"column_end":72}},{"value":"/ available, complexity is `O(n)` where `n` is the iterator length.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":187780,"byte_end":187849,"line_start":296,"line_end":296,"column_start":5,"column_end":74}},{"value":"/ Partial hints (where `lower > 0`) also improve performance.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":187854,"byte_end":187917,"line_start":297,"line_end":297,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":187922,"byte_end":187925,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ Note that the output values and the number of RNG samples used","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":187930,"byte_end":187996,"line_start":299,"line_end":299,"column_start":5,"column_end":71}},{"value":"/ depends on size hints. In particular, `Iterator` combinators that don't","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":188001,"byte_end":188076,"line_start":300,"line_end":300,"column_start":5,"column_end":80}},{"value":"/ change the values yielded but change the size hints may result in","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":188081,"byte_end":188150,"line_start":301,"line_end":301,"column_start":5,"column_end":74}},{"value":"/ `choose` returning different elements. If you want consistent results","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":188155,"byte_end":188228,"line_start":302,"line_end":302,"column_start":5,"column_end":78}},{"value":"/ and RNG usage consider using [`IteratorRandom::choose_stable`].","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":188233,"byte_end":188300,"line_start":303,"line_end":303,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":594},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":190943,"byte_end":190956,"line_start":373,"line_end":373,"column_start":8,"column_end":21},"name":"choose_stable","qualname":"::seq::IteratorRandom::choose_stable","value":"pub fn choose_stable<R>(Self, &mut R) -> Option<Self::Item> where R: Rng +\n?Sized","parent":{"krate":0,"index":591},"children":[],"decl_id":null,"docs":" Choose one element at random from the iterator.","sig":null,"attributes":[{"value":"/ Choose one element at random from the iterator.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":189910,"byte_end":189961,"line_start":355,"line_end":355,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":189966,"byte_end":189969,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if and only if the iterator is empty.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":189974,"byte_end":190030,"line_start":357,"line_end":357,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":190035,"byte_end":190038,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ This method is very similar to [`choose`] except that the result","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":190043,"byte_end":190111,"line_start":359,"line_end":359,"column_start":5,"column_end":73}},{"value":"/ only depends on the length of the iterator and the values produced by","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":190116,"byte_end":190189,"line_start":360,"line_end":360,"column_start":5,"column_end":78}},{"value":"/ `rng`. Notably for any iterator of a given length this will make the","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":190194,"byte_end":190266,"line_start":361,"line_end":361,"column_start":5,"column_end":77}},{"value":"/ same requests to `rng` and if the same sequence of values are produced","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":190271,"byte_end":190345,"line_start":362,"line_end":362,"column_start":5,"column_end":79}},{"value":"/ the same index will be selected from `self`. This may be useful if you","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":190350,"byte_end":190424,"line_start":363,"line_end":363,"column_start":5,"column_end":79}},{"value":"/ need consistent results no matter what type of iterator you are working","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":190429,"byte_end":190504,"line_start":364,"line_end":364,"column_start":5,"column_end":80}},{"value":"/ with. If you do not need this stability prefer [`choose`].","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":190509,"byte_end":190571,"line_start":365,"line_end":365,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":190576,"byte_end":190579,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ Note that this method still uses [`Iterator::size_hint`] to skip","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":190584,"byte_end":190652,"line_start":367,"line_end":367,"column_start":5,"column_end":73}},{"value":"/ constructing elements where possible, however the selection and `rng`","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":190657,"byte_end":190730,"line_start":368,"line_end":368,"column_start":5,"column_end":78}},{"value":"/ calls are the same in the face of this optimization. If you want to","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":190735,"byte_end":190806,"line_start":369,"line_end":369,"column_start":5,"column_end":76}},{"value":"/ force every element to be created regardless call `.inspect(|e| ())`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":190811,"byte_end":190884,"line_start":370,"line_end":370,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":190889,"byte_end":190892,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ [`choose`]: IteratorRandom::choose","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":190897,"byte_end":190935,"line_start":372,"line_end":372,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":597},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":192905,"byte_end":192925,"line_start":426,"line_end":426,"column_start":8,"column_end":28},"name":"choose_multiple_fill","qualname":"::seq::IteratorRandom::choose_multiple_fill","value":"pub fn choose_multiple_fill<R>(Self, &mut R, &mut [Self::Item]) -> usize where\nR: Rng + ?Sized","parent":{"krate":0,"index":591},"children":[],"decl_id":null,"docs":" Collects values at random from the iterator into a supplied buffer\n until that buffer is filled.","sig":null,"attributes":[{"value":"/ Collects values at random from the iterator into a supplied buffer","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":192218,"byte_end":192288,"line_start":413,"line_end":413,"column_start":5,"column_end":75}},{"value":"/ until that buffer is filled.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":192293,"byte_end":192325,"line_start":414,"line_end":414,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":192330,"byte_end":192333,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ Although the elements are selected randomly, the order of elements in","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":192338,"byte_end":192411,"line_start":416,"line_end":416,"column_start":5,"column_end":78}},{"value":"/ the buffer is neither stable nor fully random. If random ordering is","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":192416,"byte_end":192488,"line_start":417,"line_end":417,"column_start":5,"column_end":77}},{"value":"/ desired, shuffle the result.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":192493,"byte_end":192525,"line_start":418,"line_end":418,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":192530,"byte_end":192533,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ Returns the number of elements added to the buffer. This equals the length","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":192538,"byte_end":192616,"line_start":420,"line_end":420,"column_start":5,"column_end":83}},{"value":"/ of the buffer unless the iterator contains insufficient elements, in which","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":192621,"byte_end":192699,"line_start":421,"line_end":421,"column_start":5,"column_end":83}},{"value":"/ case this equals the number of elements available.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":192704,"byte_end":192758,"line_start":422,"line_end":422,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":192763,"byte_end":192766,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ Complexity is `O(n)` where `n` is the length of the iterator.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":192771,"byte_end":192836,"line_start":424,"line_end":424,"column_start":5,"column_end":70}},{"value":"/ For slices, prefer [`SliceRandom::choose_multiple`].","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":192841,"byte_end":192897,"line_start":425,"line_end":425,"column_start":5,"column_end":61}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs","byte_start":18417,"byte_end":18431,"line_start":75,"line_end":75,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs","byte_start":18726,"byte_end":18735,"line_start":86,"line_end":86,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":42},{"krate":0,"index":43}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs","byte_start":20618,"byte_end":20627,"line_start":131,"line_end":131,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":27827,"byte_end":27835,"line_start":135,"line_end":135,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":28403,"byte_end":28411,"line_start":155,"line_end":155,"column_start":39,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":29012,"byte_end":29019,"line_start":182,"line_end":182,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/integer.rs","byte_start":45127,"byte_end":45135,"line_start":21,"line_end":21,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":139}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/integer.rs","byte_start":45276,"byte_end":45284,"line_start":28,"line_end":28,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/integer.rs","byte_start":45427,"byte_end":45435,"line_start":35,"line_end":35,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/integer.rs","byte_start":45571,"byte_end":45579,"line_start":42,"line_end":42,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/integer.rs","byte_start":45716,"byte_end":45724,"line_start":49,"line_end":49,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/integer.rs","byte_start":46019,"byte_end":46027,"line_start":59,"line_end":59,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs","byte_start":55674,"byte_end":55682,"line_start":74,"line_end":74,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs","byte_start":57057,"byte_end":57069,"line_start":108,"line_end":108,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs","byte_start":58124,"byte_end":58132,"line_start":137,"line_end":137,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs","byte_start":59313,"byte_end":59321,"line_start":172,"line_end":172,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":192}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs","byte_start":61204,"byte_end":61212,"line_start":233,"line_end":233,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":197}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs","byte_start":61556,"byte_end":61564,"line_start":247,"line_end":247,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":201}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/slice.rs","byte_start":67343,"byte_end":67348,"line_start":70,"line_end":70,"column_start":13,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":214}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/slice.rs","byte_start":67772,"byte_end":67777,"line_start":84,"line_end":84,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":218}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/slice.rs","byte_start":68495,"byte_end":68505,"line_start":107,"line_end":107,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":221}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":89612,"byte_end":89619,"line_start":181,"line_end":181,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":305},{"krate":0,"index":308}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":90385,"byte_end":90392,"line_start":203,"line_end":203,"column_start":44,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":313}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":94293,"byte_end":94300,"line_start":304,"line_end":304,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":337}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":94457,"byte_end":94464,"line_start":310,"line_end":310,"column_start":52,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":95038,"byte_end":95046,"line_start":328,"line_end":328,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":346}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":95777,"byte_end":95782,"line_start":357,"line_end":357,"column_start":56,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":358},{"krate":0,"index":360}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":96082,"byte_end":96096,"line_start":369,"line_end":369,"column_start":56,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":363},{"krate":0,"index":365}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":111121,"byte_end":111132,"line_start":749,"line_end":749,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":377},{"krate":0,"index":380}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":123032,"byte_end":123040,"line_start":1046,"line_end":1046,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":384}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":123106,"byte_end":123121,"line_start":1050,"line_end":1050,"column_start":25,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":390},{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":156624,"byte_end":156625,"line_start":305,"line_end":305,"column_start":35,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mock.rs","byte_start":172635,"byte_end":172642,"line_start":37,"line_end":37,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":537}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mock.rs","byte_start":172938,"byte_end":172945,"line_start":48,"line_end":48,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":539},{"krate":0,"index":540},{"krate":0,"index":541},{"krate":0,"index":542}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/std.rs","byte_start":175327,"byte_end":175333,"line_start":36,"line_end":36,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":566},{"krate":0,"index":567}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/std.rs","byte_start":175789,"byte_end":175795,"line_start":58,"line_end":58,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":569},{"krate":0,"index":570},{"krate":0,"index":571}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/std.rs","byte_start":176104,"byte_end":176110,"line_start":72,"line_end":72,"column_start":20,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":199126,"byte_end":199127,"line_start":615,"line_end":615,"column_start":28,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/lib.rs","byte_start":2859,"byte_end":2872,"line_start":97,"line_end":97,"column_start":9,"column_end":22},"ref_id":{"krate":0,"index":22}},{"kind":"Mod","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/mod.rs","byte_start":11280,"byte_end":11287,"line_start":110,"line_end":110,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":263}},{"kind":"Mod","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/lib.rs","byte_start":2882,"byte_end":2889,"line_start":98,"line_end":98,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":432}},{"kind":"Mod","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/lib.rs","byte_start":2908,"byte_end":2912,"line_start":100,"line_end":100,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":524}},{"kind":"Mod","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mod.rs","byte_start":170762,"byte_end":170766,"line_start":102,"line_end":102,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":525}},{"kind":"Mod","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/lib.rs","byte_start":2922,"byte_end":2925,"line_start":101,"line_end":101,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":577}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs","byte_start":18417,"byte_end":18431,"line_start":75,"line_end":75,"column_start":23,"column_end":37},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":632},"to":{"krate":1,"index":9604}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs","byte_start":18726,"byte_end":18735,"line_start":86,"line_end":86,"column_start":6,"column_end":15},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":621},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/bernoulli.rs","byte_start":20618,"byte_end":20627,"line_start":131,"line_end":131,"column_start":29,"column_end":38},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":621},"to":{"krate":0,"index":54}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":27827,"byte_end":27835,"line_start":135,"line_end":135,"column_start":28,"column_end":36},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":646},"to":{"krate":1,"index":7907}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":28403,"byte_end":28411,"line_start":155,"line_end":155,"column_start":39,"column_end":47},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":646},"to":{"krate":1,"index":8180}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/distribution.rs","byte_start":29012,"byte_end":29019,"line_start":182,"line_end":182,"column_start":38,"column_end":45},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":658},"to":{"krate":0,"index":54}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/integer.rs","byte_start":45127,"byte_end":45135,"line_start":21,"line_end":21,"column_start":27,"column_end":35},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1502},"to":{"krate":0,"index":54}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/integer.rs","byte_start":45276,"byte_end":45284,"line_start":28,"line_end":28,"column_start":28,"column_end":36},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1502},"to":{"krate":0,"index":54}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/integer.rs","byte_start":45427,"byte_end":45435,"line_start":35,"line_end":35,"column_start":28,"column_end":36},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1502},"to":{"krate":0,"index":54}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/integer.rs","byte_start":45571,"byte_end":45579,"line_start":42,"line_end":42,"column_start":28,"column_end":36},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1502},"to":{"krate":0,"index":54}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/integer.rs","byte_start":45716,"byte_end":45724,"line_start":49,"line_end":49,"column_start":29,"column_end":37},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1502},"to":{"krate":0,"index":54}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/integer.rs","byte_start":46019,"byte_end":46027,"line_start":59,"line_end":59,"column_start":30,"column_end":38},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1502},"to":{"krate":0,"index":54}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs","byte_start":55674,"byte_end":55682,"line_start":74,"line_end":74,"column_start":29,"column_end":37},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1502},"to":{"krate":0,"index":54}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs","byte_start":57057,"byte_end":57069,"line_start":108,"line_end":108,"column_start":27,"column_end":39},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":752},"to":{"krate":0,"index":54}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs","byte_start":58124,"byte_end":58132,"line_start":137,"line_end":137,"column_start":29,"column_end":37},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1502},"to":{"krate":0,"index":54}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs","byte_start":59313,"byte_end":59321,"line_start":172,"line_end":172,"column_start":27,"column_end":35},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1502},"to":{"krate":0,"index":54}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs","byte_start":61204,"byte_end":61212,"line_start":233,"line_end":233,"column_start":37,"column_end":45},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1502},"to":{"krate":0,"index":54}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/other.rs","byte_start":61556,"byte_end":61564,"line_start":247,"line_end":247,"column_start":39,"column_end":47},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1502},"to":{"krate":0,"index":54}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/slice.rs","byte_start":67343,"byte_end":67348,"line_start":70,"line_end":70,"column_start":13,"column_end":18},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1071},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/slice.rs","byte_start":67772,"byte_end":67777,"line_start":84,"line_end":84,"column_start":37,"column_end":42},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1071},"to":{"krate":0,"index":54}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/slice.rs","byte_start":68495,"byte_end":68505,"line_start":107,"line_end":107,"column_start":29,"column_end":39},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1087},"to":{"krate":1,"index":9604}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs","byte_start":76975,"byte_end":76980,"line_start":238,"line_end":238,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":1,"index":3029},"to":{"krate":0,"index":241}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs","byte_start":77186,"byte_end":77191,"line_start":245,"line_end":245,"column_start":31,"column_end":36},"kind":"SuperTrait","from":{"krate":1,"index":3029},"to":{"krate":0,"index":245}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/utils.rs","byte_start":77636,"byte_end":77641,"line_start":266,"line_end":266,"column_start":30,"column_end":35},"kind":"SuperTrait","from":{"krate":1,"index":3029},"to":{"krate":0,"index":250}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":89612,"byte_end":89619,"line_start":181,"line_end":181,"column_start":24,"column_end":31},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1145},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":90385,"byte_end":90392,"line_start":203,"line_end":203,"column_start":44,"column_end":51},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1145},"to":{"krate":0,"index":54}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":90808,"byte_end":90813,"line_start":216,"line_end":216,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":1,"index":3029},"to":{"krate":0,"index":315}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":91388,"byte_end":91393,"line_start":231,"line_end":231,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":1,"index":3029},"to":{"krate":0,"index":317}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":94293,"byte_end":94300,"line_start":304,"line_end":304,"column_start":43,"column_end":50},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1145},"to":{"krate":1,"index":2930}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":94457,"byte_end":94464,"line_start":310,"line_end":310,"column_start":52,"column_end":59},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1145},"to":{"krate":1,"index":2930}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":95038,"byte_end":95046,"line_start":328,"line_end":328,"column_start":43,"column_end":51},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":345},"to":{"krate":0,"index":341}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":95777,"byte_end":95782,"line_start":357,"line_end":357,"column_start":56,"column_end":61},"kind":{"Impl":{"id":32}},"from":{"krate":1,"index":44477},"to":{"krate":0,"index":351}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":96082,"byte_end":96096,"line_start":369,"line_end":369,"column_start":56,"column_end":70},"kind":{"Impl":{"id":33}},"from":{"krate":1,"index":44546},"to":{"krate":0,"index":351}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":111121,"byte_end":111132,"line_start":749,"line_end":749,"column_start":25,"column_end":36},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1422},"to":{"krate":0,"index":317}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":123032,"byte_end":123040,"line_start":1046,"line_end":1046,"column_start":24,"column_end":32},"kind":{"Impl":{"id":50}},"from":{"krate":1,"index":48651},"to":{"krate":0,"index":315}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/distributions/uniform.rs","byte_start":123106,"byte_end":123121,"line_start":1050,"line_end":1050,"column_start":25,"column_end":40},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1479},"to":{"krate":0,"index":317}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":148787,"byte_end":148794,"line_start":55,"line_end":55,"column_start":16,"column_end":23},"kind":"SuperTrait","from":{"krate":4,"index":140},"to":{"krate":0,"index":494}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rng.rs","byte_start":156624,"byte_end":156625,"line_start":305,"line_end":305,"column_start":35,"column_end":36},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":514},"to":{"krate":0,"index":494}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mock.rs","byte_start":172635,"byte_end":172642,"line_start":37,"line_end":37,"column_start":6,"column_end":13},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1787},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/mock.rs","byte_start":172938,"byte_end":172945,"line_start":48,"line_end":48,"column_start":18,"column_end":25},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1787},"to":{"krate":4,"index":140}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/std.rs","byte_start":175327,"byte_end":175333,"line_start":36,"line_end":36,"column_start":18,"column_end":24},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1801},"to":{"krate":4,"index":140}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/std.rs","byte_start":175789,"byte_end":175795,"line_start":58,"line_end":58,"column_start":22,"column_end":28},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1801},"to":{"krate":4,"index":146}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/rngs/std.rs","byte_start":176104,"byte_end":176110,"line_start":72,"line_end":72,"column_start":20,"column_end":26},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1801},"to":{"krate":4,"index":145}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":187398,"byte_end":187406,"line_start":288,"line_end":288,"column_start":27,"column_end":35},"kind":"SuperTrait","from":{"krate":1,"index":7907},"to":{"krate":0,"index":591}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":187409,"byte_end":187414,"line_start":288,"line_end":288,"column_start":38,"column_end":43},"kind":"SuperTrait","from":{"krate":1,"index":3029},"to":{"krate":0,"index":591}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.8.5/src/seq/mod.rs","byte_start":199126,"byte_end":199127,"line_start":615,"line_end":615,"column_start":28,"column_end":29},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":611},"to":{"krate":0,"index":591}}]}